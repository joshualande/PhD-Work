%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 468 360
%%HiResBoundingBox: 0.000000 0.000000 468.000000 360.000000
%%Creator: xpdf/pdftops 3.00
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMMI12
%!FontType1-1.0: CMMI12
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 0 184 97] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CCC9D94D5DC34E9811120A9E9E71C1D559F732F6DBE4BD53A4D3AC30
EA780A1EAB6D5293D8749AA04212931AA44D0C4FB6DE46CBCC0252D2F62B661A
2C731BF8C30E2F4DEB71C531D4BE210220A930D4D0F9B072DDF863E0697BE742
2569F773FD6E46E3494C14338B2A80CA9971F8C25EBF4CD7075702CBB7B8AB56
C030C6C6623F92B892CFE65B10AA159AD4DE9381FB6F70342A5EEBBD510F1259
F811649D30793EA1B2D2AE86277C3911C02ACE921ADC26F529E6F9458E27493F
B8350D799BF6152FC1FDEE3B6AC51B88AF26E25D1E6CECD22A28226AD89D9C8F
06B613D3BCFAAE5121E4816A2EFF22E2ECE6151F4287E5B75C30744A374BE841
69BFBD1F9D6C80E89E029D643EB84DB6C5EB5581C4DDA25D6195F02E753CE488
3DBE05769DE72910903D37283F898B019599D69C34421AF73792A99B3E808D98
372CEAFE94152A38053DF487CEDAEFA9A3A14F93E321DF9B086ED7D397963088
2D8C04F039DAF47AC9A5CF63D7D696C2FF86693A69285925AA008A121BAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F14_0 /CMMI12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/period/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%BeginResource: font CMR12
%!FontType1-1.0: CMR12
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -251 793 750] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CCC9D94D5DC34E9811120A9E9E71C6DDD3132B5CC9D46DECE24A719A
FDDB1841D3E6A93CC2618BCCD8F4074DF63BC9DFABFEBC774BFB261B9FFFBAB5
CA354CA4AD04DCCD068B7F42CFE13B2BB384ECC4305EE3A5E1F86E88E268BB0B
A2E8A4C36FDBD63E11F095BE2A6CB2C87BEA09B603D867A6E45B424376702E63
C1FDB89550B5D876393EFD48F11F35365DE84746A9DAFB25A0EFFCF59CE8AE28
7DC0A578102E6E9AF8B40D0840DAB94F5313B262AB479F247D9C1BC14A490016
9BBA8D40165ECCD95F30CC2092FBD82994623BE7198392CDB773DA401C6AF2E6
5A38758A6A2370AF504671748519B6306E8ABEF38369A9C0D1BDD69968DE893A
B4A7096F1E88B1FFA076953086D227AAC3BEF9E66B6109A279BCE944D7A792F9
6CCA4C41B6DEBCE0CE1E5D32EF25360EEC2BABBE92A881D35B10846FE92AA8E7
36EBC6A03140358D75E602D05C0238C60F2C99D2DE35EFC0095FA1C7F9A0DADB
EB4D1A0CC39F6E9A0431AE41119189EC25EF9175284074E8B3003A2F4552AE38
4CD0A470F3D78081FF6C324680F6E422FD5D41D61C43BB67179E0D173D0DFA60
9D53BA1AE7E6048D0CD8909EAA98959D4501939DCD3DA07F32F8193A74A6B4D3
10A947AA7011BC7E00D12B833D0725336A92B13B92E84CECF2A0BD75234793E7
AA27348B1470855915B471D8A4E8660C93B8FEB170D64941A1A240C32A2558FE
D33429899F1E31E9D6A567BF83C822FFCFA15965BE62A5B9E057D4BEE6C5F71F
2FEFE24A4DDED37A6A9E0D6BE5CBBF11F881E5CF9FA10F91F4B290FE4BFFC191
58C40A20E5148184D595EB49C9435E21567A2796EBF48274BD76E80E1BAF4412
C6B64BA77FA3AB7603B7DC9F06D2177743F69312DB46B66C95562D3797024D55
402DFCDCC2B341FA4E73A7F964FAD450DE0974F4375D6081C31156B340CA7839
6C333BB122F687524DD780BF9062133DEE413074D687CDC96C37033E2E48D025
AB8D0CAE1656E9DAF305243DE02FB1244445B5DD973E42E5407EDD5BB072A12E
8A68CA50A602AD72AA207FE44FE3B48EDD6E4CEA69234BA1D74DE55A8FD0E8F7
7CC52565C5D2E696C3A28929B2130934E6598CF1C276D5232B1C5B2D78315CBA
CB681F6DA913D45F725A1C0EEF04CEEA7E2515CDBF62DF69184180C47F26FC08
3AD1B9CB57C31198710309091D38408F1248AA2FE52B2E7A3794FA7FF1B9610A
00AA758444467FA123F672A25AA9A095626E69EF9D3CAA128917AFA4400422C5
77E71F4A92A8AD69927528FD789692E5F3D46EFBEEECE8D1F66AA16348BE0826
1F40171B51D34529B539F8B599230037FC0F9038AFD9106C44AA0D70538293BB
67EA9F7C8CFC5A03E63350CFB6A74ABB760F4051582DE20A2BDA100C8AD056CA
32BE5065FF5999C1EC7C8D241171BCF884EB2A208F0B22CEE17B73856209C688
D5CCE61A1042218016F3736D52B28DB1A69337C93C870B71FFACBD632ED150B8
C138E2CF724BD3B20254458551ACE29CAE9FDD7EE5478FEF5532EA8AE897474C
EEFB342405CCA77A2F25D2693DC409B76424F73CEC18C7D990BC27320FD2D0C3
A9EF7CC9B3F744D2B90B8915DC651CC1F9B127FFC231F434BE07507D2AB47123
555FC99860168D1281BF559CC095B350381BA275B703092E493A8869EDB79C1E
FF1D59DDD6E7720EDC65DBC730167DF06615AAE094A09B91301014C9AC67EBBA
7D547367BA514CBBDE7D3AC0468BF1048B402CC0CC3AA84CA71DEA469E8760C3
C0C84EB588D960A8BCDBE18DAB5E5E7A2352D18B2E8CE7C09CE1A605C613A1B9
861AA3E380B7A608CF62D80436C478680EA4C62A1AB179665CC33D1EDFEFCD45
BB35BAACC0F2CC87D2F1CDE3F42A8AFAF3198F117C48156C1802143E83A558C5
8B81613663138CB54049010F04F8C424655BFC2F807732843FB036FB6E53B951
BCAC83ABC28FC1F3BE0E165D953B4A06E0102A7AEF3B79889C181AAAFB3C9BBA
ED9F6A569C3D47EE6CEF693D45730148833CF65E12EB1ADE6A3EFB4C555DBFF7
748289B2F55ED8A32C133E83B7D88A27CFED5290F5942DA6111A1AD0EA9BE725
C0A59E09819E82A06A0A3E26F75A86CE07A3E211E0B2001E5F79774B8C0C5109
161E0C858B16AE6F7E043FFC80C3D423A216F065D05ACFFB2803CF29F1F05BB0
69476D29B76E655E8F0A8A4C453EE535EFB4AE58D6258B970A04BD3B92C94A33
ECD9F4D73ADE4BC35420318FCC7AC2F83C0E1F65D116F20CFE602ECEF829FC59
3791FBDAFF9D7A838B01E5139BBAE9F4AAEB0D4E0945E37D451593A250A3F35B
BC7588FBC4B36A4837FA0ACD3B1E9CBA09CC268DC1EEC108D7417002C7894AB3
641AF0401A472A8287A7F809ACDE80813B00F79F1CCD3616C6C99300AFA6BA68
82255C83D115112A9299C5DD83AE56C4DB8172529DC8550A82F75AC084D35974
2A5C5F0BB27C26B29BFF1D616B04211D6C154FE75F0783D8C1DBF18C807F7885
06A5F7B1F781DDC7855A40D94FB7E77AE6EF21D54AE779DECF36066AE09B92EA
3DDA6AA04AD42B19FD5545D5996231775433B499A10B094C6C64C5DC53606140
D9EAC3D680EAA421D176D645B4FB8268A7829FC13838B57F894C872AFBC2CFCE
6DC7B559A655490805567EA796359C64A75AC84520AAF1B33B290EF0B7585C40
FFB139F088BB71C72F72C8AD81B2A51FC077776ECC47F40CD236FB533CB8810E
3507874C806F1ECEC7DB514E71BAF73B9A4AA942D9E660E79174E4573984AF77
D8536634AE1C2930B4AC9CDE705E490FE8CF94216212F7B0228E9AD7FD202E0A
A1070B30DC6617ACE88EA62C5C0F4898A8D722A81792FC295D9B37358546C9DC
90BFBB11F9B84D719139494563052DAEF9AE45B38EB471336DB6C48576F04353
E6DA9BB77FC046014D26F7D60DFD17FB4AC29BCD0458EFFD0C8F4F51FCBA565C
F09F0818C729B24512CD9256E4CC98C5D310695330CA02BC80C66DF8F2E45BDF
8AD73EA7876CEDD702CF55179D70A039018476E83B2CFAF696ECC98CE4466886
6E13EDF19D83A326573F45589246B14979498AF2FD730EC399895E6154018DC0
04313184EFD7C9956A8ADDA2D3D109860A9DAC1267089AA15167326D61983331
ADABF7627486F771BA75D21E8C16AFE2E7B6533295769C2E41AFBB9EA9E2601F
228F7150A8CA906696ADCC259E956C06F19B3D2FB06CBBB8E6C52F2ABF957B52
66D32DEC7714B108136621BF4203661090A590370F6C329B87BC860AF03C8BD5
436EBBF6B66A9B98FA9FCCC13EC0FD3AD6541768A6944C1E416D57D4637496DB
20E324385CBA3D97827B1EA655D406AAC07A082B97A2F8582C7F0FE99DDC88C7
8DF548DE8E60784F5D6FED28B60A7373DB49905BD790EE3FDCADB33279175BAE
CDEC35208EF31216DB2FCBACB93984F04EB3D1FDFADCDC9857A992FCD07CFE7E
85D79333EE66114C61CE5F8C5702FA1E1E68061B5A3B741CE5A1C118D5FA474A
78731C3BFF692F1A114F33A0651EC12874AD6B4CE711AE8764F7F18038E840E4
AFCA9BD6E9CEEE85C8E0F417BCCBC7871F3B8CD13FA9CF80D82E727D3E5436D9
96812EE3B053E5AB04EE89E9250DD29EC8C19CD57BC0395A180ECF6A30BE6BE6
209FAFC60FD1E99345D141A9D1017C424698E8E8EE12E9C5516CCF4C3B56F2C4
7ACBFF0A4D2A4849428D5F1D2B8D97270A39520D1D633D2E73494A46BEE4F700
1D35F362263E350C10F38EEB8056576C14C3ADFEC6D53DF687FCED27E5B117E7
D38BDD1DE68832D8DEE170C78C96CE861076A2CB9E6D631016F8EC9B08FDEBD7
1356D260D541CE18E264DD88500511F79145859A588BAC835CFB339E22AB08DC
B512CF958DB00D2A9FCB903087750B835D3E5A1F2FCD4B2A3CFF97120A4EC4D0
F7AE7F857B69F6052F55F55334AA571E890B7387C91EA3B6E002D0DE0D3C69BA
F48B17D2F2893D8D02373F435EDD537EB433D10107109345835C0D44CCCFF800
F801DC1C9DA19E1D9338FA8D1CF6E57288EAFB7AF59C242ED985C6C6B4FB9707
A97F1F7E9491E5188D22679598F44191AEFCF66E187CBAFAFCC4D8456E320E8D
548E4FC2367A6609CB956F5A47B9924DD34145EFCB02DECFD46BE41AC1863DF0
96957D1FF79C9738419A6E26657940FEF07C78042BFE42A996C4E6334DB17579
2FC1A9736900C9F3F7A2AF49046F67F61F7A57A87FE3E20AC7161036DDF19AA1
621B1E1BDA8F105F7E1E310CC67EDC44017678CB689F0DBBBA59749D635CF46B
BCFE1ED6260280B90E03CB59BB9CB3D579E3C4A9A6EC11EBE069FDF3123D50E4
19397D254550DBB65C5CBDB1281CA165A6E14AF29388E9D318F667D24F999B3D
D27E831E94852F5CD23AF2415C725955CC7C2A9B22020D168F279DEFCCA0425D
039EED3F113F14D83C413BE99F03F5E94090C7FDAE4DB9BB28E6A5553F398C7E
10BE45A0A30720C6B235A019E710F2A2C94F7613E9A7E4E49DCAF638398C8BFC
F34CDB85C70648F90902C113AF86AD4F9CF470134814A0B9EBE5EDB30A05D489
46EBDE68D8209DE80D9537C872A4A28B58A522A4E9E8E2F9D525CF5663168447
9AB39DD7183221C032C8282CA1D3248C679EB4185E381FAF26FD9EC4810C5538
09BA5372D88E218F44D079C569499AA0520E17BFF12EFB16552ADD89C96807A5
0B1B20680C57D1964DE3B5F6CBA863183AF0A8991525252E10A956CED16A4AFE
F103C9C1F592C3131778877305F0E83650B85C0C008EBA54B9B62C0962E4ADDC
D964CDB01842D94C8F93F0D5FDC1CF0C1E866A83A5EE2860CDC267FB24BEE0BE
46933B27FF52568FD7E9DC93F866B0D42233ED1F970D947E45EEA55AB1E709CE
5CFA010E09F869F0D37F8C5B810297E502DBFDB33166F1BC57FBDC1E06A1CD2D
CD0B626FEB0EFFD211CE17BF4678BCE3BAC3EB605C955A5AACA5D7E89855D4B8
E8661E8C1CABAEDFDB2A7ECECB0A89F277532B1AC2D13B59D2D426B260748756
258EE33F381431B4AA716C7DBA66D1B0103A99509041A47D5E0A10DE444DEB34
5CB70AB5B13540889F57CAC8CB967FA3A8D9F68925753B53D19DBD839EF598FD
BE4DCFA751B3C5799072AFE82A8BFF516AAB3F1E69533B5FA9CE7FA669A8D74F
42BD1A6E9AD2268A16A5F60518F4794EACB4D81E9885BCA316114C5DA0C872DE
F7E078D1934DF1BEF4CEDB0BCC636592913DB630A0830CE05EFCE8348CDD6787
058875A094855622939E3A16ED618B6CBC16200A8C9D3D8F26A5A7EFCCB89781
9D1E794264F1AD7F333A83FB69BB8E9575444C49AB95BB0C961518443543F45C
7D8927B977A40A08A1A77AE472EF9F8C86E8636E4EA2F8247907C357752E9733
7396DEBCF688627919FFF106BD22F673A126C8E067D33F793558DF7EA4C78AAA
76AB4553192E6EEDF31514E785A101A3129A7D73E4D6C9DE445574FA106A73AD
D9CBD49981C864A13EE42E58F9391F0533BB180E70FE1069F06DFADB8E75145D
0D0657D82405A87DB4146356E2F489DF2C378B5436FE1DA494BC4EEDA8CE6998
C8BCA785A1F61B0A3F691B6E319AE5E605F82C7C4A3B4EA3BC048359A527B689
FC6D9DA9CB0594A03C62DD04BD6B3277D52ABDAE1CC466592DABE73FF9EB9AD5
84DA83CEB46D2962E4F3F4A5ABCFE0685A5E2A4ABA800757F59DC7A2DBC16CC3
B22C6F0FF24E633DF63F3C606FB09CB0EC31BF0988194649972BFC1F6248F061
5F172A920D0E2E43960E106C00E9209C38C148DF4D5C83B7C8217260A7C40FC9
E01749D809D7A59244D88C50F4F7EBC359955741E311B3F5D9E757CC52DAD26D
85CD12C74C32AABAED123479556ADF42054D9F329F9D83F8C993CACE30159734
17E49354D8BFDC35019A540C69CDDEFC1CE619E19451C43D71EE58F5BDACA59F
90F86D0CEFCDF6580DA04F4CB16A414F7D38DEEC9A5038F8F917BE8B62A03EB1
635351BCBB4E3387807CF93A2B091D169D8E939968B3E192AE88AEEB675C8124
6DE117F950A58D32E0E493329E469A2E0769005ADC0AF5AD8E0E9B48B8C0C938
79B93DE33C989E127473100F82BFAFC29E58DCA06A90A759CCB4496F871C8E3B
507A2CF4EB41B444EF882B00F63D825144A0CA45BF6ABE2DF19EA8BBA630E6FE
7234304ADD522781E1B4A9461BF3483BA65BA439B17A770ED0C63D23594D41F3
95C7544227A22A092B4FB6554F3FFFD8F076960C01CA70E72C5F98B738A9E7E7
7FFE50374EB4D2AB1603EDFFB665302D0C54E329AE71E3F467B9738928B33B37
012A2BF1F2584473BB5C7F202F069F8335444F9F48C2BE059EE16EA6FCE8062D
FF63E2F94D9839FC2AAE2875ED3203BB09AC6B27175502232FD9F571CECC0791
A9E8014AE1EA955F91B9FE30D923F5BE865D26BA03AF9A328F1848A68B3B0391
2F3010BEA909B407218113E473F184993F3FAADDB428A31D042C200F4634A0EA
D9BEB34D966DBBCECC262D38B1F0457E5A7BEAB09FE7187DF0A40E17624F42C7
E056CD21F066C365702B1B08E2285D9406B329383A3729097C9E5A1C1B4330F4
39D8AB989CD029D27DF4A6F96DB0E127321DD07B7E683E8FA7FC4D5670362A01
8B361A5EC06FFA9413AEA8785002F1EB8D54B26AFDA96D70A9FACB4DDFC85047
B9978DE8D3CF7B57A3559199696D9615FF0D526EEEDA01A4A6523D3B1F2109A1
9330358F22E6C618BC7CB910E0907A69322D1991B7F3FC8924FC612956DF91AE
B7040CBDDC34C0DC93F98AA130C7E5A9261FBD7D509FF70E4D5495F4D80B790F
415FD558A343769188B5DB5401C9DEC6BB2A92553A6E52C41E4BCAFEE1F45506
F74FE92288E7571114193BE884B6ECDCB4952C61762F2544A8F3E763D4A8718A
0028FF3254F273C5A356A698EA72F496667890DEEC55CEA0C7CDB451F840C7EF
18AC88BE6DC1D8FA46FCDC71E116A8D8B02D6D0B160942800E2AF80EF7C12B13
62C2E735C1B5584CE845C22B7676A93C3647BDD48D51CBC2271C1D09A9C399DE
7D782BD27FF7D745AF882C4019A5BE54E88EE60BD7D69BE67F466DFB6F95EB16
ADF94CE0EDAE630561298143C18D4418E4574EAFEC90991E6266AC5F556DEBE6
6B71D297979DF3C7F87FE14B8A4FD2C01EF3F9D618CA6B168A0027CE7F3A414F
66F79B845DFF9176FE5ED8CCE65651D84ECABB286FF755408FDCDAF80AC2E278
F081E652D2DFF590FEA45E8BACFD90419F1366E768AF2A21C6746CA0EFE3AB4E
318E4586FA5F7287BF8A68FBBEA631C4EEE0EF80255DEE770EDAF220A3BC1465
BFC334A15AF6B51B9C065159177FED2743EFB08B547394B74BE90CBCD21417EB
32F4DB6286BCBB7055F60094A80B854F0855F741BD22EC9BADBE62992A22FAF4
DC5ABCCF2ABB1F2FC90926A17AABDD74291C7BF991CFD77FFAEC961129CABBC4
594392407A3DE750D8E6EBF44747F587EBF6447AA1962F99C93EFF5F548B2317
30D5416C27FE337932FCF982F0D2F7D5228E21C38C334FFE08F68AF2E003EDAF
6BA585D2BD8B86E9B624F02F3BA13AB2C26DBEC4572DD54D89BC6A2986F89417
B2E4E866CEA110CFF7F4CBECD9EB7DF43FF718ED39D81AC4EE0BDEAD6D080F62
F3A614744C00F09A7212DF5FA96BB42270523651EEF6D3363DD9C887C9DB1DEE
1B25916657AF2DB9D1AB2A2F04ADFFB47DCF20E65C0AD803C11BD26F52140EC3
FEA50A9FFC4E1DB6348551EFF8AF9EB180380A10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F12_0 /CMR12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
468 360 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
0 0 468 360 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 4680 3600 re
f
10 w
2 J
1 j
/DeviceGray {} CS
[1] SC
0 0 4680 3600 re
S
585 360 3627 2880 re
f
q
585 360 3627 2880 re
W
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[1 0 0] sc
[1 0 0] SC
0 w
423.801 360 m
471.426 360 l
519.055 360 l
566.684 360 l
614.309 360 l
661.938 360 l
709.562 360 l
709.562 374.902 l
757.191 374.902 l
804.816 374.902 l
852.445 374.902 l
852.445 360 l
900.074 360 l
900.074 374.902 l
947.699 374.902 l
995.328 374.902 l
1042.95 374.902 l
1042.95 360 l
1090.58 360 l
1090.58 389.805 l
1138.21 389.805 l
1138.21 419.605 l
1185.84 419.605 l
1185.84 374.902 l
1233.46 374.902 l
1233.46 404.703 l
1281.09 404.703 l
1328.72 404.703 l
1328.72 434.508 l
1376.35 434.508 l
1423.97 434.508 l
1423.97 494.113 l
1471.6 494.113 l
1471.6 553.719 l
1519.23 553.719 l
1519.23 464.309 l
1566.85 464.309 l
1566.85 523.914 l
1614.48 523.914 l
1614.48 509.012 l
1662.11 509.012 l
1662.11 643.125 l
1709.74 643.125 l
1709.74 583.52 l
1757.36 583.52 l
1757.36 777.238 l
1804.99 777.238 l
1804.99 643.125 l
1852.62 643.125 l
1852.62 807.039 l
1900.25 807.039 l
1900.25 717.633 l
1947.87 717.633 l
1947.87 851.742 l
1995.5 851.742 l
1995.5 881.547 l
2043.13 881.547 l
2043.13 970.953 l
2090.75 970.953 l
2090.75 926.25 l
2138.38 926.25 l
2138.38 1090.16 l
2186.01 1090.16 l
2186.01 1000.76 l
2233.64 1000.76 l
2233.64 1268.98 l
2281.26 1268.98 l
2281.26 1164.67 l
2328.89 1164.67 l
2328.89 1417.99 l
2376.52 1417.99 l
2376.52 1388.19 l
2424.15 1388.19 l
2424.15 1254.08 l
2471.77 1254.08 l
2471.77 1552.1 l
2519.4 1552.1 l
2519.4 1641.51 l
2567.03 1641.51 l
2567.03 1850.13 l
2614.65 1850.13 l
2614.65 1626.61 l
2662.28 1626.61 l
2662.28 1656.41 l
2709.91 1656.41 l
2709.91 1462.7 l
2757.54 1462.7 l
2757.54 1403.09 l
2805.16 1403.09 l
2805.16 1492.5 l
2852.79 1492.5 l
2852.79 1373.29 l
2900.42 1373.29 l
2900.42 1343.49 l
2948.05 1343.49 l
2948.05 1298.78 l
2995.67 1298.78 l
2995.67 1000.76 l
3043.3 1000.76 l
3043.3 911.348 l
3090.93 911.348 l
3090.93 851.742 l
3138.55 851.742 l
3138.55 836.844 l
3186.18 836.844 l
3186.18 687.828 l
3233.81 687.828 l
3233.81 732.535 l
3281.44 732.535 l
3281.44 553.719 l
3329.06 553.719 l
3329.06 404.703 l
3376.69 404.703 l
3376.69 464.309 l
3424.32 464.309 l
3424.32 568.617 l
3471.95 568.617 l
3471.95 374.902 l
3519.57 374.902 l
3519.57 449.41 l
3567.2 449.41 l
3567.2 404.703 l
3614.83 404.703 l
3614.83 389.805 l
3662.45 389.805 l
3662.45 360 l
3710.08 360 l
3710.08 389.805 l
3757.71 389.805 l
3757.71 374.902 l
3805.34 374.902 l
3805.34 389.805 l
3852.96 389.805 l
3852.96 360 l
3900.59 360 l
3948.22 360 l
3995.85 360 l
4043.47 360 l
4091.1 360 l
4138.73 360 l
4186.35 360 l
4233.98 360 l
4281.61 360 l
4329.24 360 l
4376.86 360 l
4424.49 360 l
4472.12 360 l
4519.75 360 l
4567.37 360 l
4615 360 l
4615 360 l
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
0 w
2 J
1 j
720 0 m
0 720 l
0 0 m
0 0 l
720 60 m
60 720 l
60 0 m
0 60 l
720 120 m
120 720 l
120 0 m
0 120 l
720 180 m
180 720 l
180 0 m
0 180 l
720 240 m
240 720 l
240 0 m
0 240 l
720 300 m
300 720 l
300 0 m
0 300 l
720 360 m
360 720 l
360 0 m
0 360 l
720 420 m
420 720 l
420 0 m
0 420 l
720 480 m
480 720 l
480 0 m
0 480 l
720 540 m
540 720 l
540 0 m
0 540 l
720 600 m
600 720 l
600 0 m
0 600 l
720 660 m
660 720 l
660 0 m
0 660 l
S
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
gsave [9.99994 0 0 9.99994 0 0] concat
0 1 2 { 0 exch 72 mul m 0 1 5 { pop (x) show } for } for
grestore
Q
/DeviceRGB {} CS
[1 0 0] SC
423.801 360 m
471.426 360 l
519.055 360 l
566.684 360 l
614.309 360 l
661.938 360 l
709.562 360 l
709.562 374.902 l
757.191 374.902 l
804.816 374.902 l
852.445 374.902 l
852.445 360 l
900.074 360 l
900.074 374.902 l
947.699 374.902 l
995.328 374.902 l
1042.95 374.902 l
1042.95 360 l
1090.58 360 l
1090.58 389.805 l
1138.21 389.805 l
1138.21 419.605 l
1185.84 419.605 l
1185.84 374.902 l
1233.46 374.902 l
1233.46 404.703 l
1281.09 404.703 l
1328.72 404.703 l
1328.72 434.508 l
1376.35 434.508 l
1423.97 434.508 l
1423.97 494.113 l
1471.6 494.113 l
1471.6 553.719 l
1519.23 553.719 l
1519.23 464.309 l
1566.85 464.309 l
1566.85 523.914 l
1614.48 523.914 l
1614.48 509.012 l
1662.11 509.012 l
1662.11 643.125 l
1709.74 643.125 l
1709.74 583.52 l
1757.36 583.52 l
1757.36 777.238 l
1804.99 777.238 l
1804.99 643.125 l
1852.62 643.125 l
1852.62 807.039 l
1900.25 807.039 l
1900.25 717.633 l
1947.87 717.633 l
1947.87 851.742 l
1995.5 851.742 l
1995.5 881.547 l
2043.13 881.547 l
2043.13 970.953 l
2090.75 970.953 l
2090.75 926.25 l
2138.38 926.25 l
2138.38 1090.16 l
2186.01 1090.16 l
2186.01 1000.76 l
2233.64 1000.76 l
2233.64 1268.98 l
2281.26 1268.98 l
2281.26 1164.67 l
2328.89 1164.67 l
2328.89 1417.99 l
2376.52 1417.99 l
2376.52 1388.19 l
2424.15 1388.19 l
2424.15 1254.08 l
2471.77 1254.08 l
2471.77 1552.1 l
2519.4 1552.1 l
2519.4 1641.51 l
2567.03 1641.51 l
2567.03 1850.13 l
2614.65 1850.13 l
2614.65 1626.61 l
2662.28 1626.61 l
2662.28 1656.41 l
2709.91 1656.41 l
2709.91 1462.7 l
2757.54 1462.7 l
2757.54 1403.09 l
2805.16 1403.09 l
2805.16 1492.5 l
2852.79 1492.5 l
2852.79 1373.29 l
2900.42 1373.29 l
2900.42 1343.49 l
2948.05 1343.49 l
2948.05 1298.78 l
2995.67 1298.78 l
2995.67 1000.76 l
3043.3 1000.76 l
3043.3 911.348 l
3090.93 911.348 l
3090.93 851.742 l
3138.55 851.742 l
3138.55 836.844 l
3186.18 836.844 l
3186.18 687.828 l
3233.81 687.828 l
3233.81 732.535 l
3281.44 732.535 l
3281.44 553.719 l
3329.06 553.719 l
3329.06 404.703 l
3376.69 404.703 l
3376.69 464.309 l
3424.32 464.309 l
3424.32 568.617 l
3471.95 568.617 l
3471.95 374.902 l
3519.57 374.902 l
3519.57 449.41 l
3567.2 449.41 l
3567.2 404.703 l
3614.83 404.703 l
3614.83 389.805 l
3662.45 389.805 l
3662.45 360 l
3710.08 360 l
3710.08 389.805 l
3757.71 389.805 l
3757.71 374.902 l
3805.34 374.902 l
3805.34 389.805 l
3852.96 389.805 l
3852.96 360 l
3900.59 360 l
3948.22 360 l
3995.85 360 l
4043.47 360 l
4091.1 360 l
4138.73 360 l
4186.35 360 l
4233.98 360 l
4281.61 360 l
4329.24 360 l
4376.86 360 l
4424.49 360 l
4472.12 360 l
4519.75 360 l
4567.37 360 l
4615 360 l
4615 360 l
S
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[0 0 1] sc
[0 0 1] SC
0 w
423.801 360 m
519.055 360 l
614.309 360 l
709.562 360 l
804.816 360 l
900.074 360 l
995.328 360 l
1090.58 360 l
1185.84 360 l
1281.09 360 l
1281.09 1023.11 l
1376.35 1023.11 l
1376.35 360 l
1471.6 360 l
1566.85 360 l
1566.85 1023.11 l
1662.11 1023.11 l
1662.11 360 l
1757.36 360 l
1757.36 2349.32 l
1852.62 2349.32 l
1852.62 360 l
1947.87 360 l
2043.13 360 l
2138.38 360 l
2233.64 360 l
2328.89 360 l
2424.15 360 l
2519.4 360 l
2519.4 3012.43 l
2614.65 3012.43 l
2614.65 1686.22 l
2709.91 1686.22 l
2709.91 1023.11 l
2805.16 1023.11 l
2805.16 1686.22 l
2900.42 1686.22 l
2995.67 1686.22 l
2995.67 1023.11 l
3090.93 1023.11 l
3090.93 1686.22 l
3186.18 1686.22 l
3186.18 1023.11 l
3281.44 1023.11 l
3376.69 1023.11 l
3376.69 360 l
3471.95 360 l
3567.2 360 l
3662.45 360 l
3757.71 360 l
3852.96 360 l
3948.22 360 l
4043.47 360 l
4138.73 360 l
4233.98 360 l
4329.24 360 l
4424.49 360 l
4519.75 360 l
4615 360 l
4615 360 l
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
0 w
2 J
1 j
0 0 m
720 720 l
720 0 m
720 0 l
0 60 m
660 720 l
660 0 m
720 60 l
0 120 m
600 720 l
600 0 m
720 120 l
0 180 m
540 720 l
540 0 m
720 180 l
0 240 m
480 720 l
480 0 m
720 240 l
0 300 m
420 720 l
420 0 m
720 300 l
0 360 m
360 720 l
360 0 m
720 360 l
0 420 m
300 720 l
300 0 m
720 420 l
0 480 m
240 720 l
240 0 m
720 480 l
0 540 m
180 720 l
180 0 m
720 540 l
0 600 m
120 720 l
120 0 m
720 600 l
0 660 m
60 720 l
60 0 m
720 660 l
S
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
gsave [9.99994 0 0 9.99994 0 0] concat
0 1 4 { 0 exch 72 mul m 0 1 5 { pop (x) show } for } for
grestore
Q
/DeviceRGB {} CS
[0 0 1] SC
423.801 360 m
519.055 360 l
614.309 360 l
709.562 360 l
804.816 360 l
900.074 360 l
995.328 360 l
1090.58 360 l
1185.84 360 l
1281.09 360 l
1281.09 1023.11 l
1376.35 1023.11 l
1376.35 360 l
1471.6 360 l
1566.85 360 l
1566.85 1023.11 l
1662.11 1023.11 l
1662.11 360 l
1757.36 360 l
1757.36 2349.32 l
1852.62 2349.32 l
1852.62 360 l
1947.87 360 l
2043.13 360 l
2138.38 360 l
2233.64 360 l
2328.89 360 l
2424.15 360 l
2519.4 360 l
2519.4 3012.43 l
2614.65 3012.43 l
2614.65 1686.22 l
2709.91 1686.22 l
2709.91 1023.11 l
2805.16 1023.11 l
2805.16 1686.22 l
2900.42 1686.22 l
2995.67 1686.22 l
2995.67 1023.11 l
3090.93 1023.11 l
3090.93 1686.22 l
3186.18 1686.22 l
3186.18 1023.11 l
3281.44 1023.11 l
3376.69 1023.11 l
3376.69 360 l
3471.95 360 l
3567.2 360 l
3662.45 360 l
3757.71 360 l
3852.96 360 l
3948.22 360 l
4043.47 360 l
4138.73 360 l
4233.98 360 l
4329.24 360 l
4424.49 360 l
4519.75 360 l
4615 360 l
4615 360 l
S
Q
5 w
0 J
/DeviceGray {} CS
[0] SC
585 360 m
585 400 l
S
585 3240 m
585 3200 l
S
1391 360 m
1391 400 l
S
1391 3240 m
1391 3200 l
S
2197 360 m
2197 400 l
S
2197 3240 m
2197 3200 l
S
3003 360 m
3003 400 l
S
3003 3240 m
3003 3200 l
S
3809 360 m
3809 400 l
S
3809 3240 m
3809 3200 l
S
10 w
2 J
585 3240 m
4212 3240 l
S
4212 360 m
4212 3240 l
S
585 360 m
4212 360 l
S
585 360 m
585 3240 l
S
3038.28 2751.3 1101.72 416.699 re
f
3038.28 2751.3 1101.72 416.699 re
S
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[0 0 1] sc
[0 0 1] SC
0 w
3095.88 3009.6 288 100.797 re
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
0 w
2 J
1 j
0 0 m
720 720 l
720 0 m
720 0 l
0 60 m
660 720 l
660 0 m
720 60 l
0 120 m
600 720 l
600 0 m
720 120 l
0 180 m
540 720 l
540 0 m
720 180 l
0 240 m
480 720 l
480 0 m
720 240 l
0 300 m
420 720 l
420 0 m
720 300 l
0 360 m
360 720 l
360 0 m
720 360 l
0 420 m
300 720 l
300 0 m
720 420 l
0 480 m
240 720 l
240 0 m
720 480 l
0 540 m
180 720 l
180 0 m
720 540 l
0 600 m
120 720 l
120 0 m
720 600 l
0 660 m
60 720 l
60 0 m
720 660 l
S
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
gsave [9.99994 0 0 9.99994 0 0] concat
4 1 4 { 288 exch 72 mul m 4 1 4 { pop (x) show } for } for
grestore
Q
/DeviceRGB {} CS
[0 0 1] SC
3095.88 3009.6 288 100.797 re
S
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[1 0 0] sc
[1 0 0] SC
0 w
3095.88 2808.9 288 100.801 re
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
0 w
2 J
1 j
720 0 m
0 720 l
0 0 m
0 0 l
720 60 m
60 720 l
60 0 m
0 60 l
720 120 m
120 720 l
120 0 m
0 120 l
720 180 m
180 720 l
180 0 m
0 180 l
720 240 m
240 720 l
240 0 m
0 240 l
720 300 m
300 720 l
300 0 m
0 300 l
720 360 m
360 720 l
360 0 m
0 360 l
720 420 m
420 720 l
420 0 m
0 420 l
720 480 m
480 720 l
480 0 m
0 480 l
720 540 m
540 720 l
540 0 m
0 540 l
720 600 m
600 720 l
600 0 m
0 600 l
720 660 m
660 720 l
660 0 m
0 660 l
S
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
gsave [9.99994 0 0 9.99994 0 0] concat
3 1 4 { 288 exch 72 mul m 4 1 4 { pop (x) show } for } for
grestore
Q
/DeviceRGB {} CS
[1 0 0] SC
3095.88 2808.9 288 100.801 re
S
q
720 2880 m
720 2880 l
720 2880 l
720 2880 l
h
W
/DeviceCMYK {} CS
[0 0 0 1] SC
/DeviceCMYK {} cs
[0 0 0 1] sc
q
[889.2 0 0 -4.8 -888.12 1084.68] cm
<<
  /ImageType 1
  /Width 1
  /Height 1
  /ImageMatrix [1 0 0 -1 0 1]
  /BitsPerComponent 1
  /Decode [0 1]
  /DataSource currentfile
    /ASCII85Decode filter
    /RunLengthDecode filter
>>
pdfImM
!!!~>
%-EOD-
Q
Q
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.0211 24.2961] Tm
0 0 Td
/F12_0 11.9552 Tf
(1) 5.85805 Tj
-2.2632 TJm
5.88008 0 Td
/F14_0 11.9552 Tf
(:) 3.25181 Tj
0.971546 TJm
9.11992 0 Td
/F12_0 11.9552 Tf
(0) 5.85805 Tj
-5489.44 TJm
(1) 5.85805 Tj
-2.26371 TJm
86.4801 0 Td
/F14_0 11.9552 Tf
(:) 3.25181 Tj
0.972056 TJm
89.72 0 Td
/F12_0 11.9552 Tf
(5) 5.85805 Tj
-5489.44 TJm
(2) 5.85805 Tj
-2.26269 TJm
167.08 0 Td
/F14_0 11.9552 Tf
(:) 3.25181 Tj
0.972056 TJm
170.32 0 Td
/F12_0 11.9552 Tf
(0) 5.85805 Tj
-5489.44 TJm
(2) 5.85805 Tj
-2.26269 TJm
247.68 0 Td
/F14_0 11.9552 Tf
(:) 3.25181 Tj
0.972056 TJm
250.92 0 Td
/F12_0 11.9552 Tf
(5) 5.85805 Tj
-5489.44 TJm
(3) 5.85805 Tj
-2.26269 TJm
328.28 0 Td
/F14_0 11.9552 Tf
(:) 3.25181 Tj
0.972056 TJm
331.52 0 Td
/F12_0 11.9552 Tf
(0) 5.85805 Tj
-2.26269 TJm
151.6 -13.3473 Td
(S) 6.50363 Tj
1.9482 TJm
(p) 6.50363 Tj
-28.157 TJm
(e) 5.20051 Tj
3.56148 TJm
(c) 5.20051 Tj
3.56352 TJm
(t) 4.55493 Tj
-0.649399 TJm
(r) 4.55493 Tj
-0.647357 TJm
(a) 5.85805 Tj
-2.26269 TJm
(l) 3.25181 Tj
-330.26 TJm
(I) 4.22019 Tj
1.92165 TJm
(n) 6.50363 Tj
1.9482 TJm
(d) 6.50363 Tj
1.9482 TJm
(e) 5.20051 Tj
3.56352 TJm
(x) 6.18084 Tj
4.86232 TJm
[0 1 -1 0 50.5 95.916] Tm
0 0 Td
/F12_0 11.9552 Tf
(N) 8.77512 Tj
1.27838 TJm
(u) 6.50363 Tj
1.94718 TJm
(m) 9.75544 Tj
33.0356 TJm
(b) 6.50363 Tj
-28.1518 TJm
(e) 5.20051 Tj
3.56352 TJm
(r) 4.55493 Tj
-331.892 TJm
(o) 5.85805 Tj
-2.26371 TJm
(f) 3.5746 Tj
-323.134 TJm
(S) 6.50363 Tj
1.94718 TJm
(o) 5.85805 Tj
-2.26269 TJm
(u) 6.50363 Tj
1.94718 TJm
(r) 4.55493 Tj
-0.647357 TJm
(c) 5.20051 Tj
3.56352 TJm
(e) 5.20051 Tj
3.56352 TJm
(s) 4.61471 Tj
-336.495 TJm
(\() 4.55493 Tj
-0.647357 TJm
(N) 8.77512 Tj
1.27838 TJm
(o) 5.85805 Tj
-2.26269 TJm
(r) 4.55493 Tj
-0.649399 TJm
(m) 9.75544 Tj
2.92434 TJm
(a) 5.85805 Tj
-2.26064 TJm
(l) 3.25181 Tj
0.970014 TJm
(i) 3.25181 Tj
0.972056 TJm
(z) 5.20051 Tj
3.56148 TJm
(e) 5.20051 Tj
3.56352 TJm
(d) 6.50363 Tj
1.9482 TJm
(\)) 4.55493 Tj
-0.649399 TJm
[1 0 0 1 349.908 300.96] Tm
0 0 Td
/F12_0 14.3462 Tf
(E) 9.55457 Tj
-2.9696 TJm
(x) 7.41699 Tj
-1.82941 TJm
(t) 5.4659 Tj
-3.99236 TJm
(e) 6.2406 Tj
0.217827 TJm
(n) 7.80433 Tj
0.275687 TJm
(d) 7.80433 Tj
0.275687 TJm
(e) 6.2406 Tj
0.219529 TJm
(d) 7.80433 Tj
0.275687 TJm
0 -20.0703 Td
(2) 7.02964 Tj
-3.9345 TJm
(F) 9.16722 Tj
28.3975 TJm
(G) 11.0179 Tj
-1.26101 TJm
(L) 8.77987 Tj
1.18273 TJm
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%DocumentSuppliedResources:
%%+ font CMMI12
%%+ font CMR12
%%EOF
