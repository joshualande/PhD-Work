%!PS-Adobe-2.0 EPSF-1.2
%%Title: <FEFF61746C623365702E666400000001000000000000>
%%Creator: Adobe Acrobat 9.4.2
%%CreationDate: 08/28/2011, 12:18:32 AM
%%For: <FEFF616C646E00650AAA414C0A9BD65808A376C20895414C0A9B3F60093141B00A9B414C0A9B005D00000028003C2258F76200030000000C00000000000000000000000000000001000000000000>
%%Pages: 1
%%DocumentFonts:
%%BoundingBox: 3 534 521 788%%HiResBoundingBox: 3.628969 534.653984 520.109984 787.139976%%EndComments

%%BeginProlog
%%BeginPreview: 516 253 8 3289
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000550000000000224400
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000002277bb00005588220000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000055664444880033ff55220000000077555577000033ff88001188
% 5511000000000000000000000000005566444488002244ff3300000000000099000088bbbbbbbbbb
% 88000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000099bbbbbbbbbb11
% 33664466880000000000000000000000000000000000000000000011bbbbbbbbbb99006655446644
% 00000000000000000000000000000000000000000000001144cc4444883300000000000000000000
% 000066bbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000033bbbbbbbbbb0033bb00000000000000000000000022550000000000005511
% 0000000000000000000000000000000000000000000000000000000000000000000033ff44110000
% 000000000000229900000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000448877000044000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000005577000000aa0000ff0000000000886600006688000077ff330044
% 00000000000000000000000000005577000000aa000000ff00000000000044ee1100770000ff0000
% 77000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000770000ff003344
% aa0000008800000000000000000000000000000000000000000000443300ff00007700aa00003344
% 00000000000000000000000000000000000000000000000000bb000000dd00000000000000000000
% 00000000ff0000552200000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000ff0000552200bb00000000000000000000000077000066558822001166
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00000000
% 000000000000008800000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000004400bb220044000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000dd11000000440000ff0000000000dd11000011dd00004488cc0044
% 0000000000000000000000000000dd1100000044000000ff00000000000044996600000000ff0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000ff000000
% 998833002200000000000000000000000000000000000000000000000000ff00000000dd66220022
% 00000000000000000000000000000000000000000000000000bb000011ee00000000000000000000
% 00000000ff0044002200000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000ff0033002200bb00000000000000000000000088000088008800000088
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00000000
% 000000000000008800000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000440044bb004400aa44
% 44660044cc44cc664499003388558800000000000000000000000000000000000000000000000000
% 00000000000000000000000000ff00000000000000ff0000000000ff00000000ff00004400bb8844
% 0000000000000000000000000000ff0000000000000000ff0000000000113355bb00000000ff0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000006688aaaa4400000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000ff000000
% 1199ddee6600000000000000000000000000000000000000000000000000ff0000000033aaeedd33
% 00000000000000000000000000000000000000000000000000cc4444883311664466115544444400
% 00000000ff4488000033dd666633dd66660000000000000000000000000000000000000000000000
% 0000000000000000000000ff4488000000bb0044bb11cc0055cc00aa440077110088558844001166
% 0000000000000000000000000000000000000000000000000000000000000000000000ff000044aa
% 55aa0000666677aa005555667755cc00aa44000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000440000885544003388
% 55bb0000bb00bb0000bb00aa4444cc00000000000000000000000000000000000000000000000000
% 00000000000000000000000000dd11001144ff2200ff0000004400dd11000011dd0000440022dd66
% 0000000000000000000000000000dd11000044ff330000ff0000440000554455ff22000000ff0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000033660000bb0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000ff000000
% 11000033dd00000000000000000000000000000000000000000000000000ff0000000011000066aa
% 00000000000000000000000000000000000000000000000000ff0000000099000000995588550000
% 00000000ff0033002200cc000000cc00000000000000000000000000000000000000000000000000
% 0000000000000000000000ff0055000000bb0000bb00bb000044aa11000022550000000000005511
% 0000000000000000000000000000000000000000000000000000000000000000000000ff000000bb
% 00bb0000aa0000bb00bb4444cc0044aa1100000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000044000011cc4400ee11
% 00bb2200bb00bb0000bb00aa00001100000000000000000000000000000000000000000000000000
% 000000000000000000000000005577000000ff0000ff0000006600886600006688000044000055ee
% 00000000000000000000000000005577000000ff000000ff00004400006600008877000000ff0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000088000055880000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000ff000000
% 66000000aa00000000000000000000000000000000000000000000000000ff0000000066000000aa
% 00000000000000005500000000000000000000000000000000ff00000000aa000000aa3311557700
% 00000000ff0000004400bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000000000ff0000000000bb0000bb00bb0000227755000000550000000000224400
% 0000000000000000000000000000000000000000000000000000000000000000000000ff000000bb
% 00bb0000aa0000bb00bb0000110022775500000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000022885500004444008855
% 66995544cc22cc4422cc333366445500000000000000000000000000000000000000000000000000
% 000000000000000000000000000055664488aa0033ff444488bb0000775555770000448833000088
% 00000000000000000000000000000055664488aa002244ff4455aa005599110077dd331144ff4422
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000033555588000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000002244ff441100
% 886644666600000000000000000000000000000000000000000000000044ff44330000aa55448833
% 22555555777777229944110000000000000000000000001144ff3300000033664466337766554400
% 00002244ff4444669933cc330033cc33000000000000000000000000000000000000000000000000
% 0000000000000000001144ff4400000033cc22009955aa44558800cc550000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000033ff441144cc
% 22cc4400664444cc2233664455558800cc55000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 88444422007744008800110000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 227744447733aa445566220000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000005555662200000000000000000000
% 00000055770000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000aa00008800000000000000000000
% 00000000880000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000332200000033bb0000000000000000000000000044220000
% 00000000000000000000000000000000005500000022cc0000000000000000000000000011550000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00332200000022990000000000000000000000000033440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000332200000033bb00000000
% 000000000000000000442200000000000000000000000000000000000000005500000000000033bb
% 00000000000000000000000000000000000000000000000000000000663300000000000000000000
% 00000000880000442200000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000770000000000bb0000000000000000000000000000660000
% 00000000000000000000000000000000552200000000bb0000000000000000000000000000224400
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00770000000000880000000000000000000000000000443300000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000770000000000bb00000000
% 000000000000000000006600000000000000000000000000000000000000552200000000000000bb
% 00000000000000000000000000000000000000003344444444000055331100000000000000444444
% 44330000880000006600000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000033440000000000bb0000000000000000225500000000443300
% 00000000000000000000000000000000770000000000bb0000000000000000004433000000007700
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 33440000000000880000000000000000225500000000008800000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000033440000000000bb00000000
% 000000002255000000004433000000000000000000000000000000000000770000000044000000bb
% 000000000000000000000000000000000000000000000000000066aa884400000000000000000000
% 00000044992200004433000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000077000011774477bb0066667755665555992200000000007700
% 00000000000000000000000000000000770000445555dd0033885588007744bb1122000000007700
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 77000000666677aa0055556677665555992200000000008800000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000077000011774477bb00666677
% 556655559922000000000077000000000000000000000000000000000000770011cc5500553300dd
% 55558800000000226644aa22cc6655cc555588000000000000000000000000005544444400000000
% 00000000000000000077000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000880000aa110000bb00bb4444bbbb2222880000000000008800
% 00000000000000000000000000000000880000bb0000bb00aa4444cc00cc00990000000000008800
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 88000000aa0000bb00bb4444ccbb2222880000000000008800000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000880000aa110000bb00bb4444
% bbbb22228800000000000088000000000000000000000000000000000000880000bb000000aa00bb
% 0000bb00000000aa11000000bb0000bb0000bb000000000000000000000000005588550000000000
% 00000000000000000088000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000880000aa000000bb00aa000011775533000000000000007700
% 00000000000000000000000000000000880000aa0000bb00aa000011006644110000000000007700
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 88000000aa0000bb00bb000011775533000000000000008800000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000880000aa000000bb00aa0000
% 117755330000000000000077000000000000000000000000000000000000880000bb000022aa00bb
% 0000bb00000000aa11001100bb0000bb0000bb000000000000000000000000003311557700000000
% 00000000000000000077000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000033440011664444cc1155554444779988660000bb0000443300
% 00000000000000000000000000000000770000664444cc3333664455008888882200bb0000007700
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 33440000664444cc2233664455779988660000bb0000007700000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000033440011664444cc11555544
% 44779988660000bb00004433000000000000000000000000000000000000770000bb5544881133cc
% 2244cc110000003366445522cc3333cc2244cc110000000000000000000000007766554400000000
% 00000000000000004433000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000770000000000000000000000881100337700000000660000
% 00000000000000000000000000000000552200000000000000000000008800009900000000224400
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00770000000000000000000000881100337700000000443300000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000007700000000000000000000
% 008811003377000000006600000000000000000000000000000000000000552200bb000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000006600000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000332200000000000000000000336644663300000044220000
% 00000000000000000000000000000000005500000000000000000000006655556600000011550000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00332200000000000000000000336644663300000033550000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000003322000000000000000000
% 003366446633000000442200000000000000000000000000000000000000005511cc440000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000442200000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000033bbbbbb
% bbbb88000000000000000000119900000000000000556644448800000000000055ee330000996600
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000ff00
% 00008800000000000000000033bb0000000000005577000000aa00000000000000aa330000550000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000ff00
% 44002200666611000000000000bb000000000000dd11000000440000000000000066880000550000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000ff44
% 88000000000055554400000000bb000000000000ff00000000000033885588000000cc0044000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000ff00
% 33002200000000004488000000bb000000000000dd11001144ff22aa4444cc000000994455000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000ff00
% 00004400000055554400000000bb0000000000005577000000ff00aa00001100000033aa33000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000001144ff44
% 44669900666611000000000033cc4422000000000055664488aa003366445500000000bb00000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000665544664433778800000044cc330000556644448800000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000007755667700117744771100334499660000000077555500116655
% 77000000000000000000000000000000000000000011990000001199000000005544556600004488
% 00000000000000000000000000001199000000000000bbbbbb880066004400000000000000880000
% 0000000033667711000000117744771100bbbbbb8800000000008800000000000011774477110000
% 00117766330000334499660000000000000000000000000000000000000000000000000000003388
% 44330000001199000000005544556600000000000000000000000000000000000000007755550088
% bbbbbb55000000000088000000000000000000000000000000000000000000000000000000000011
% 77447711000000002288000055668866000000000000000000000000000000000000000000000000
% 00000000000000000000000000004477880000000077556677000000000000880000000000001177
% 66330000000000008800000000000000000000000000004444886600000000000088000011990000
% 0000000000008800000000000033667711000000001199000000bbbbbbaa000000000000
% 000000000000aa0000334400448800000055bb00005577000000aa00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ff00772200227711330011ee000000885500cc00880000
% 88000000000000000000000000000000000000000077bb00000077bb0000000088000088002233bb
% 000000000000000000000000000033bb0000000000222200444400aaaa4400000000000000880000
% 00000000880011880000007722002277222200444400000000008800000000000077220022770000
% 00881100880011330011ee000000000000000000000000000000000000000000000000000000dd22
% 007700000077bb000000008800008800000000000000000000000000000000000000885500cc0044
% 000055000000000022dd000000000000000000000000000000000000000000000000000000000077
% 220022770000001133bb0000aa0011ee000000000000000000000000000000000000000000000000
% 0000000000000000000000000000cc00ff00000000dd0000ff000000000000880000000000008811
% 0088000000000022dd0000000000000000000000000000770011ee000000000044dd000033bb0000
% 00000000000088000000000000880011880000000033bb00002222001166000000000000
% 000000000000dd6622002200445544002233bb0000dd110000004400000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000118800bb000000bb00cc0011ee000000dd11330000447711
% 44000000000000000000000000000000000000003355bb00003355bb00000000aa330044000000bb
% 000000000000000000000000000000bb000000000011000077000044442200000000000000880000
% 00000000bb0000bb000000bb000000bb1100007700000000000088000000000000bb000000bb0000
% 00bb0000bb0000cc0011ee000000000000000000000000000000000000000000000000000000ff00
% 008800003355bb00000000aa33004400000000000000000000000000000000000000dd1133000011
% 004411000000000088880000000000000000000000000000000000000000000000000000000000bb
% 000000bb0000000000bb0000dd0011ee000000000000000000000000000000000000000000000000
% 0000000000000000000000000000001199000000000000118800000000000088000000000000bb00
% 00bb000000000088880000000000000000000000000000cc0011ee000000000066bb000000bb0000
% 00000000000088000000000000bb0000bb0000000000bb00001100007700000000000000
% 00000000000033aaeedd3300440088006600bb0000ff000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000022995500bb000000bb0000008866000000ff5511770011cccc
% 88000000000000000000000000000000000000113344bb00113344bb0000000011eebb33000000bb
% 000000000000000000000000000000bb000000000000006644000088006666000022888888bb8888
% 44000000bb0000bb000000bb000000bb00006644000000448888bb888888220000bb000000bb0000
% 00bb0000bb000000008866000000000000000000000000000000000000000000000000000000dd22
% 11bb00113344bb0000000011eebb3300000000000000000000000000000000000000ff5511770000
% 226600000000004422880000000000000000000000000000000000000000000000000000000000bb
% 000000bb0000000000bb000000008888000000000000000000000000000000000000000000000000
% 00000000000000000000000000001188992200000000229955000000668888bb888888000000bb00
% 00bb00000000442288000000000000000000000000000000008877000000005500bb000000bb0000
% 000000888888bb888866000000bb0000bb0000000000bb00000000445500000000000000
% 00000000000011000066aa00440088115500bb0000dd110000002200000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000033ee00bb000000bb0000225500000000ff11008800993366
% dd660000000000000000000000000066888800550044bb00550044bb00000000aa3388dd000000bb
% 000000000000000000000000000000bb00000000000000aa000000000000ee000000000000880000
% 00000000bb0000bb000000bb000000bb0000aa0000000000000088000000000000bb000000bb0000
% 00bb0000bb0000002255000000000000000000000000000000000000000000000000000000005588
% 55dd00550044bb00000000aa3388dd00000000000000000000000000000000000000ff1100880000
% 991100000000115500880000000000000000000000000000000000000000000000000000000000bb
% 000000bb0000000000bb000000338800000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000055dd000000000033ee00000000000088000000000000bb00
% 00bb00000011550088000000000000000000000000000000338800000000333300bb000000bb0000
% 00000000000088000000000000bb0000bb0000000000bb00000000aa1100000000000000
% 00000000000066000000aa00440033992200bb000055770000004400000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ee0077220022770022220044000000aa22008800770000
% 11770000000000000000000000000000000000444444cc22444444cc2200000077000088000000bb
% 000000000000000000000000000000bb00000000000000ee0000dd000011dd000000000000880000
% 000000008800118800000077220022770000ee000000000000008800000000000077220022770000
% 00881100880000222200440000000000000000000000000000000000000000000000000000000000
% 228800444444cc220000007700008800000000000000000000000000000000000000aa2200880000
% ee0000000000114444cc441100000000000000000000000000000000000000000000000000000077
% 220022770000000000bb000011880033000000000000000000000000000000000000000000000000
% 00000000000000000000000000dd000000ee000000dd0000ee000000000000880000000000008811
% 0088000000114444cc441100000000000000000000000011660033000000224444cc440000bb0000
% 00000000000088000000000000880011880000000000bb00000000ee0000000000000000
% 000000000000aa5544883333884400990044cc330000556644443300000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000006644776600117744771100bbbbbb9900bb003388445500554444
% 55110000000000000000000000000000000000001144cc22001144cc2200bb0055444444002255cc
% 330000000000000000000000000033cc442200bb000000dd00006677447733000022888888bb8888
% 440000003366771100bb0011774477110000dd00000000448888bb888888220000117744771100bb
% 00117766330000bbbbbb99000000000000000000000000000000000000000000000000000000cc44
% 661100001144cc2200bb005544444400000000000000000000000000000000000000338844550000
% dd00000000bb000022cc441100000000000000000000000000000000000000000000000000000011
% 7744771100bb001144cc4400ccccbb99000000000000000000000000000000000000000000000000
% 00000000000000000000000000666644663300bb0066447766000000668888bb8888880000001177
% 66330000bb000022cc4411000000000000000000000000ccbbbb9900bb00000033cc440033cc4422
% 000000888888bb8888660000003366771100bb000033cc44220000dd0000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000001144ff4400000044ff4400000088cc2200005566444488000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000556688660000bbbbbb8833884499110000000022880000117766
% 33000000000000000000000000000000000000775566770055668866000000000066558800004488
% 00000000000000000000000000001199000000000000bbbbbb880000008800000000000000880000
% 00000000336677110000001177447711006600440000000000008800000000000011774477110000
% 00002288000000447788000000000000000000000000000000000000002288000000228800001177
% 66330000228800000000007755667700000000000000000000000000001166557700007755550011
% 77663300000000224400440000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330022440044000000000000000000000000000000000000000000000000
% 00000000000000000022880000006600440000000022440044000000000000880000000000001177
% 66330000000000665588000000000000000000000000004444886600000000000088000044558822
% 000000000000880000000000003366771100000000336677110000665599000000000000
% 00000000000000ff0000000000999900001177bb00005577000000aa000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000aa0011ee002222004444bb660088990000001133bb0000881100
% 88000000000000000000000000000000000000dd0000ff00aa0011ee00000000885500dd002233bb
% 000000000000000000000000000033bb00000000002222004444000066bb00000000000000880000
% 0000000088001188000000772200227700aaaa440000000000008800000000000077220022770000
% 001133bb000000cc00ff0000000000000000000000000000000000001133bb00001133bb00008811
% 0088001133bb0000000000dd0000ff00000000000000000000000000008800008800885500cc0088
% 11008800000000449999220000000000000000000000000000000000000000000000000000000077
% 22002277000000881100880044999922000000000000000000000000000000000000000000000000
% 00000000000000001133bb000000aaaa440000000044999922000000000000880000000000008811
% 008800000000885500dd00000000000000000000000000770011ee000000000044dd000088000088
% 0000000000008800000000000088001188000000008800118800885500dd000000000000
% 00000000000000ff000000000044dd11006622bb0000dd1100000044000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0011ee001100007700ff440055ee0000000000bb0000bb0000
% bb0000000000000000000000000000000000000000118800dd0011ee00000000dd223300000000bb
% 000000000000000000000000000000bb00000000001100007700002244bb00000000000000880000
% 00000000bb0000bb000000bb000000bb0044442200000000000088000000000000bb000000bb0000
% 000000bb0000000011990000000000000000000000000000000000000000bb00000000bb0000bb00
% 00bb000000bb00000000000000118800000000000000000000000000004477114400dd11330000bb
% 0000bb000000004422330000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0044223300000000000000000000000000000000000000000000000000
% 00000000000000000000bb000000444422000000004422330000000000000088000000000000bb00
% 00bb00000000dd22330000000000000000000000000000cc0011ee000000000066bb000099113322
% 00000000000088000000000000bb0000bb00000000bb0000bb00dd333300000000000000
% 00000000000000ff0000000000448866006600bb0000ff0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000008888000000664400bb660088ff0000000000bb0000bb0000
% bb00000000000000000000000000000000000000229955000000888800000000ff333388000000bb
% 000000000000000000000000000000bb00000000000000664400005500bb00000022888888bb8888
% 44000000bb0000bb000000bb000000bb00880066660000448888bb888888220000bb000000bb0000
% 000000bb0000001188992200000000000000000000000000000000000000bb00000000bb0000bb00
% 00bb000000bb000000000000229955000000000000000000000000000011cccc8800ff55117700bb
% 0000bb000000003322448800000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0033224488000000000000000000000000000000000000000000000000
% 00000000000000000000bb0000008800666600000033224488000000668888bb888888000000bb00
% 00bb00000000ff3333880000000000000000000000000000008877000000005500bb000066eeaa33
% 000000888888bb888866000000bb0000bb00000000bb0000bb00dd337788000000000000
% 00000000000000ff00000044004422bb224400bb0000dd1100000022000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000338800000000aa000033884466dd0000000000bb0000bb0000
% bb000000000000000000000000000066888800000033ee000033880000000000cc0000bb000000bb
% 000000000000000000000000000000bb00000000000000aa0000551100bb00000000000000880000
% 00000000bb0000bb000000bb000000bb00000000ee000000000088000000000000bb000000bb0000
% 000000bb000000000055dd00000000000000000000000000000000000000bb00000000bb0000bb00
% 00bb000000bb0000000000000033ee0000000000000000000000000000993366dd66ff11008800bb
% 0000bb00000000000000ff00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00000000ff000000000000000000000000000000000000000000000000
% 00000000000000000000bb000000000000ee000000000000ff00000000000088000000000000bb00
% 00bb00000000cc0000bb0000000000000000000000000000338800000000333300bb0044882299dd
% 00000000000088000000000000bb0000bb00000000bb0000bb00880000ff000000000000
% 00000000000000ff0000441100440099880000bb0000557700000044000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000011880033000000ee000000000044880000000000bb0000881100
% 88000000000000000000000000000000000000dd0000ee001188003300000000880000bb000000bb
% 000000000000000000000000000000bb00000000000000ee0000334444cc33000000000000880000
% 00000000880011880000007722002277dd000011dd00000000008800000000000077220022770000
% 000000bb0000dd000000ee00000000000000000000000000000000000000bb00000000bb00008811
% 0088000000bb0000000000dd0000ee00000000000000000000000000007700001177aa2200880088
% 11008800000000dd0000dd0000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800dd0000dd000000000000000000000000000000000000000000000000
% 00000000000000000000bb0000dd000011dd000000dd0000dd000000000000880000000000008811
% 008800000000880000bb0000000000000000000000000011660033000000224444cc447700000088
% 0000000000008800000000000088001188000000008800118800550011ee000000000000
% 00000000001144ff4444cc0055882244771144cc2200005566444433000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000ccccbb99000000dd000000dd55771100bb001144cc4400117766
% 330000000000000000000000000000000000006644776600ccccbb990000bb0033556666002255cc
% 330000000000000000000000000033cc442200bb000000dd0000000044cc33000022888888bb8888
% 440000003366771100bb00117744771166774477330000448888bb888888220000117744771100bb
% 001144cc4400666644663300000000000000000000000000000000001144cc44001144cc44001177
% 6633001144cc440000bb006644776600000000000000000000000000005544445511338844550011
% 7766330000bb00665588330000000000000000000000000000000000000000000000000000000011
% 7744771100bb00117766330066558833000000000000000000000000000000000000000000000000
% 00000000000000001144cc4400667744773300bb0066558833000000668888bb8888880000001177
% 66330000bb003355666600000000000000000000000000ccbbbb9900bb00000033cc441166444444
% 000000888888bb8888660000003366771100bb0000336677110022448866000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000001144ff3300005566444488000000880000000088000066447777000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000022880000116644772233884499110000001177663300224400
% 44000000000000000000000000000000000000000000000077556677000000003366663300000088
% 00000000000000000000000000003366771100000000447788000088555500000000000000880000
% 00000000336677110000001177447711001199000000000000008800000000000011774477110000
% 00117766330000000088000000000000000000000000000022880000117766330000bbbbbb880011
% 99000033884499110000001166557700000000000000000000000000002244004400002288000011
% 77663300000000000011990000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330000228800000000000000000000000000000000000000000000000000
% 00000000000000000077555500000000880000000011665577000000000000880000000000000022
% 88000000000044448866000000000000000000000000004444886600000000334488660044447777
% 000000000000880000000000003366771100000000336677110033448866000000000000
% 00000000000000ff00005577000000aa000044dd00000044dd0000dd0000ff000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000001133bb00008800001188bb660088990000008811008800449999
% 220000000000000000000000000000000000000000000000dd0000ff0000000088000088000022dd
% 00000000000000000000000000008800118800000000cc00ff00886600cc00000000000000880000
% 000000008800118800000077220022770044bb000000000000008800000000000077220022770000
% 008811008800000066bb000000000000000000000000001133bb0000881100880022220044440044
% bb0000bb6600889900000088000088000000000000000000000000000044999922001133bb000088
% 11008800000000000077bb0000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088001133bb00000000000000000000000000000000000000000000000000
% 0000000000000000885500cc00000066bb0000000088000088000000000000880000000000001133
% bb0000000000770011ee00000000000000000000000000770011ee00000000440011ee00cc0000ff
% 0000000000008800000000000088001188000000008800118800440011ee000000000000
% 00000000000000ff0000dd1100000044000066bb00000066bb000000002288000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000bb00004499002222ff440055ee000000bb0000bb00442233
% 0000000000000000000000000000000000000000000000000000118800000000bb0000bb00008888
% 0000000000000000000000000000bb0000bb0000000000119900dd11442200000000000000880000
% 00000000bb0000bb000000bb000000bb0000bb0000000000000088000000000000bb000000bb0000
% 00bb0000bb00002244bb000000000000000000000000000000bb0000bb0000bb0011000077000000
% bb0000ff440055ee00000044771144000000000000000000000000000044223300000000bb0000bb
% 0000bb00000000003355bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000dd11330000002244bb0000000044771144000000000000880000000000000000
% bb0000000000cc0011ee00000000000000000000000000cc0011ee00000000cc0011ee0000002266
% 00000000000088000000000000bb0000bb00000000bb0000bb00cc0011ee000000000000
% 00000000000000ff0000ff0000000000005500bb00005500bb000000339933000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000bb00000088cc9900bb660088ff000000bb0000bb00332244
% 8800000000000000000000000000000000000000000000000022995500000000bb0000bb00442288
% 0000000000000000000000000000bb0000bb0000000011889922ff8800aa66000022888888bb8888
% 44000000bb0000bb000000bb000000bb0000bb00000000448888bb888888220000bb000000bb0000
% 00bb0000bb00005500bb000000000000000000000000000000bb0000bb0000bb0000006644000000
% bb0000bb660088ff00000011cccc88000000000000000000000000000033224488000000bb0000bb
% 0000bb00000000113344bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000ff55117700005500bb0000000011cccc88000000668888bb8888880000000000
% bb00000000000000887700000000000000000000000000000088770000000000008866000044aa33
% 000000888888bb888866000000bb0000bb00000000bb0000bb0000008866000000000000
% 00000000000000ff0000dd1100000022333300bb00333300bb0000000044dd000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000bb0000558844cc6633884466dd000000bb0000bb00000000
% ff0000000000000000000000000000000000000000000000000033ee00000000bb0000bb11550088
% 0000000000000000000000000000bb0000bb00000000000055ddee550044ee000000000000880000
% 00000000bb0000bb000000bb000000bb0000bb0000000000000088000000000000bb000000bb0000
% 00bb0000bb00551100bb000000000000000000000000000000bb0000bb0000bb000000aa00000000
% bb000033884466dd000000993366dd6600000000000000000000000000000000ff000000bb0000bb
% 0000bb00000000550044bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000ff11008800551100bb00000000993366dd660000000000880000000000000000
% bb0000000000003388000000000000000000000000000000338800000000000033550000000055dd
% 00000000000088000000000000bb0000bb00000000bb0000bb0000335500000000000000
% 00000000000000ff0000557700000044224444cc44224444cc4400cc0000ee000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000bb0000770000117700000044880000008811008800dd0000
% dd0000000000000000000000000000000000000000000000dd0000ee0000000088000088114444cc
% 441100000000000000000000000088001188000000dd000000ee99660055dd000000000000880000
% 000000008800118800000077220022770000bb000000000000008800000000000077220022770000
% 008811008800334444cc330000000000000000000000000000bb000088110088000000ee00000000
% bb00000000004488000000770000117700000000000000000000000000dd0000dd000000bb000088
% 11008800000000444444cc2200000000000000000000000000000000000000000000000000000077
% 2200227700000088110088000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000aa22008800334444cc3300000077000011770000000000880000000000000000
% bb0000000000116600330000000000000000000000000011660033000000001155004400cc0000ee
% 000000000000880000000000008800118800000000880011880011550044000000000000
% 00000000001144ff3300005566444433000033cc44000033cc440044447766000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000001144cc4400116644551100dd55771100bb001177663300665588
% 330000000000000000000000000000000000000000000000664477660000bb0033666633000022cc
% 44110000000000000000000000003366771100bb0066664466331188449933000022888888bb8888
% 440000003366771100bb0011774477110044cc44110000448888bb888888220000117744771100bb
% 001177663300000044cc330000000000000000000000001144cc440011776633000000dd00000044
% cc441100dd55771100bb0055444455110000000000000000000000000066558833001144cc440011
% 7766330000bb00001144cc2200000000000000000000000000000000000000000000000000000011
% 7744771100bb0011776633001144cc44000000000000000000000000000000000000000000000000
% 00000000000000003388445500000044cc3300bb0055444455110000668888bb8888880000001144
% cc440000bb00ccbbbb9900000000000000000000000000ccbbbb9900bb0000bbbbbb990044448866
% 000000888888bb8888660000003366771100bb00003366771100bbbbbb99000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055ee330000996600000011cc0000000000000000000033cc88007799220000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000005566886600007755550000447788000000007755667700000011
% 99000000000000000000000000000000000000000000000077556677000000000044880000004488
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000011774477110000
% 00116655770011664477220000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000aa330000550000000000bb000000000000000000000033bb005500000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000aa0011ee00885500cc0000cc00ff00000000dd0000ff00000077
% bb0000000000000000000000000000000000000000000000dd0000ff000000002233bb00002233bb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000077220022770000
% 00880000880088000011880000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000066880000550000000000bb00000000000000000000000088882200000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0011ee00dd1133000000001199000000000000118800003355
% bb000000000000000000000000000000000000000000000000001188000000000000bb00000000bb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000bb000000bb0000
% 00447711440044990022220000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000cc0044003388558800bb0000bb44770000000000000022ee2200000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000888800ff5511770000118899220000000022995500113344
% bb000000000000000000000000000000000000000000000000229955000000000000bb00000000bb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000bb000000bb0000
% 0011cccc88000088cc99000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000099445500aa4444cc00bb00005544cc000000000000006655aa00000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000033880000ff1100880000000055dd000000000033ee00550044
% bb0000000000000000000000000000000000000066888800000033ee000000000000bb00000000bb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000bb000000bb0000
% 00993366dd66558844cc660000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000033aa3300aa00001100bb00008800bb002200000000334400aa55000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000001188003300aa22008800dd000000ee000000dd0000ee00444444
% cc2200000000000000000000000000000000000000000000dd0000ee000000000000bb00000000bb
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000077220022770000
% 00770000117777000011770000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000bb00003366445511cc4400665599552200000055aa220066dd440000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000ccccbb99003388445500666644663300bb006644776600001144
% cc2200000000000000000000000000000000000000000000664477660000bb002255cc33002255cc
% 33000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000117744771100bb
% 00554444551111664455110000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000556644668844000000000000000000000000000000000000000000000000000000
% 00000000000000000000009900000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000007755667700117766330033884499110000002244004400556688
% 66000000000000000000000000000000000000002288000033884433000000000000880000444488
% 66000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00002288000011774477110000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055880000008844000000000000000000004400000000000000000000000000000000
% 0000000000000000000011cc55000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ff008811008800bb660088990000004499992200aa0011
% ee0000000000000000000000000000000000001133bb0000dd220077000000000022dd0000770011
% ee000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 001133bb000077220022770000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000dd11000000223300000000000000000000aa00000000000000000000000000000000
% 00000000000000000000663399000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000118800bb0000bb00ff440055ee0000004422330000dd0011
% ee0000000000000000000000000000000000000000bb0000ff000088000000000088880000cc0011
% ee000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000bb0000bb000000bb0000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000ff0000000000005555667722cc66558811cc443300bb4477002299886622cc0033bb
% 008844770000000000007700bb110000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000022995500bb0000bb00bb660088ff0000003322448800000088
% 880000000000000000000000000000000000000000bb0000dd2211bb000000004422880000000088
% 77000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000118844000000220000
% 000000bb0000bb000000bb0000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000dd110000000022bb4444cc00bb0000bb00bb0000005544cc0000bb110000bb0000bb
% 00aa88330000000000228844aa660000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000033ee00bb0000bb0033884466dd000000000000ff00003388
% 000000000000000000000000000000000000000000bb0000558855dd000000115500880000003388
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000770044882211660000
% 000000bb0000bb000000bb0000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055880000003311bb00001100bb0000bb00bb0044008800bb0022bb000000bb0000bb
% 00442266770000000066000044aa0000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ee0088110088000000004488000000dd0000dd00118800
% 330000000000000000000000000000000000000000bb000000002288000000114444cc4411116600
% 33000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000220000006677000000
% 000000bb000077220022770000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000005566444444003366445522cc3333cc2277775500665599553fcc440000775566cc
% 229944663300000033aa220033ff5500000000000000000000000000000000000000000000000000
% 00000000000000000000000000006644776600117766330000dd55771100bb006655883300ccccbb
% 990000000000000000000000000000000000001144cc4400cc4466110000bb000022cc4411ccbbbb
% 99000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 001144cc440011774477110000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055dd2211999911119944556688660011665577000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000775555000000002233114400117766
% 3300000000000000000000000000000000000000000000001177663300000000444488660088bbbb
% bb220000000000000000000000003366771100000000000088000044778800000000000000880000
% 00000000336677110000001177447711003344996600000000008800000000000011774477110000
% 00117766330000447788000000000000000000000000000000000000002288000077556677005566
% 8866000000119900000000116655770000000000000000000000000000002288000088bbbbbb5588
% bbbbbb55000000000011990000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330000228800000000000000000000000000000000000000000000000000
% 00000000000000002244004400116644772200000011776633000000000000880000000000000022
% 88000000000055445566000000000000000000000000004444886600000000006655990044447777
% 000000000000880000000000003366771100000000336677110044447777000000000000
% 00000000000000dd110055aa00004400aa0011ee0088000088000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000885500cc0000000044aa991100881100
% 8800000000000000000000000000000000000000000000008811008800000000770011ee00440000
% 660000000000000000000000000088001188000000000066bb0000cc00ff00000000000000880000
% 0000000088001188000000772200227711330011ee00000000008800000000000077220022770000
% 00881100880000cc00ff0000000000000000000000000000000000001133bb0000dd0000ff00aa00
% 11ee00000077bb000000008800008800000000000000000000000000001133bb0000440000550044
% 00005500000000000077bb0000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088001133bb00000000000000000000000000000000000000000000000000
% 00000000000000004499992200880000118800000088110088000000000000880000000000001133
% bb00000000008800008800000000000000000000000000770011ee00000000885500dd00cc0000ff
% 0000000000008800000000000088001188000000008800118800cc0000ff000000000000
% 0000000000000088660055dd00004400dd0011ee0044771144000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000dd113300000000004422330000bb0000
% bb0000000000000000000000000000000000000000000000bb0000bb00000000cc0011ee00110066
% 0000000000000000000000000000bb0000bb000000002244bb000000119900000000000000880000
% 00000000bb0000bb000000bb000000bb00cc0011ee000000000088000000000000bb000000bb0000
% 00bb0000bb00000011990000000000000000000000000000000000000000bb00000000118800dd00
% 11ee00003355bb000000004477114400000000000000000000000000000000bb0000110044110011
% 00441100000000003355bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 000000000000000044223300004499002222000000bb0000bb000000000000880000000000000000
% bb0000000000aa33004400000000000000000000000000cc0011ee00000000dd3333000000002266
% 00000000000088000000000000bb0000bb00000000bb0000bb0000002266000000000000
% 00000000000000339900559955440000000088880011cccc88000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000ff551177000000003322448800bb0000
% bb0000000000000000000000000000000000000000000000bb0000bb000000000000887700004455
% 0000000000000000000000000000bb0000bb000000005500bb000011889922000022888888bb8888
% 44000000bb0000bb000000bb000000bb00000088660000448888bb888888220000bb000000bb0000
% 00bb0000bb00001188992200000000000000000000000000000000000000bb000000229955000000
% 888800113344bb0000000011cccc8800000000000000000000000000000000bb0000002266000000
% 22660000000000113344bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 000000000000000033224488000088cc9900000000bb0000bb000000668888bb8888880000000000
% bb000000000011eebb33000000000000000000000000000000887700000000dd337788000044aa33
% 000000888888bb888866000000bb0000bb00000000bb0000bb000044aa33000000000000
% 0000000000000000cc331155994400000033880000993366dd660000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000ff11008800000000000000ff00bb0000
% bb0000000000000000000000000000000000000066888800bb0000bb000000000033880000009911
% 0000000000000000000000000000bb0000bb000000551100bb0000000055dd000000000000880000
% 00000000bb0000bb000000bb000000bb0000225500000000000088000000000000bb000000bb0000
% 00bb0000bb0000000055dd00000000000000000000000000000000000000bb0000000033ee000033
% 880000550044bb00000000993366dd66000000000000000000000000000000bb0000009911000000
% 99110000000000550044bb00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000000000ff00558844cc66000000bb0000bb000000000000880000000000000000
% bb0000000000aa3388dd000000000000000000000000000033880000000000880000ff00000055dd
% 00000000000088000000000000bb0000bb00000000bb0000bb00000055dd000000000000
% 000000000000000088880000cc440000118800330077000011770000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000aa22008800000000cc0000dd00881100
% 8800000000000000000000000000000000000000000000008811008800000000116600330000ee00
% 000000000000000000000000000088001188000000334444cc33dd000000ee000000000000880000
% 00000000880011880000007722002277002222004400000000008800000000000077220022770000
% 008811008800dd000000ee00000000000000000000000000000000000000bb0000dd0000ee001188
% 003300444444cc220000007700001177000000000000000000000000000000bb000000ee00000000
% ee000000000000444444cc2200000000000000000000000000000000000000000000000000000077
% 2200227700000088110088000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000dd0000dd00770000117700000088110088000000000000880000000000000000
% bb000000000077000088000000000000000000000000001166003300000000550011ee00cc0000ee
% 0000000000008800000000000088001188000000008800118800cc0000ee000000000000
% 00000000000000003366000088000000ccccbb990055444455110000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000338844550000bb004444883300117766
% 330000000000000000000000000000000000000000000000117766330000bb00ccbbbb990000dd00
% 00000000000000000000000000003366771100bb00000044cc336666446633000022888888bb8888
% 440000003366771100bb00117744771100bbbbbb990000448888bb888888220000117744771100bb
% 001177663300666644663300000000000000000000000000000000001144cc44006644776600cccc
% bb9900001144cc2200bb005544445511000000000000000000000000001144cc440000dd00000000
% dd00000000bb00001144cc2200000000000000000000000000000000000000000000000000000011
% 7744771100bb0011776633001144cc44000000000000000000000000000000000000000000000000
% 00000000000000006655883300116644551100bb0011776633000000668888bb8888880000001144
% cc440000bb005544444400000000000000000000000000ccbbbb9900bb0000224488660044448866
% 000000888888bb8888660000003366771100bb0000336677110044448866000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055dd2211999911119944775566770011776633000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000011665577000000000066558800002288
% 00000000000000000000000000000000000000000000000011776633000000004444886600336666
% 33000000000000000000000000003366771100000000447788000088555500000000000000880000
% 00000000336677110000001177447711003344996600000000008800000000000011774477110000
% 00117766330000334499660000000000000000000000000000000000000000000000001199000077
% 5555002244004400000000000011990000000000000000000000000000000000000088bbbbbb5577
% 55667700000000664477770000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330055668866000000000000000000000000000000000000000000000000
% 00000000000000007755667700117744771100000088bbbbbb550000000000880000000000000022
% 88000000000000665588000000000000000000000000004444886600000000660044220022449933
% 000000000000880000000000003366771100000000336677110000008800000000000000
% 00000000000000dd110055aa00004400dd0000ff0088110088000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000008800008800000000885500dd001133bb
% 0000000000000000000000000000000000000000000000008811008800000000770011ee00880000
% 88000000000000000000000000008800118800000000cc00ff00886600cc00000000000000880000
% 0000000088001188000000772200227711330011ee00000000008800000000000077220022770000
% 00881100880011330011ee00000000000000000000000000000000000000000000000077bb008855
% 00cc004499992200000000000077bb000000000000000000000000000000000000004400005500dd
% 0000ff00000000dd0000ff0000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800aa0011ee000000000000000000000000000000000000000000000000
% 0000000000000000dd0000ff00772200227700000044000055000000000000880000000000001133
% bb0000000000885500dd00000000000000000000000000770011ee00000000aabb550000880044aa
% 00000000000088000000000000880011880000000088001188000044dd00000000000000
% 0000000000000088660055dd000044000000118800bb0000bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000004477114400000000dd223300000000bb
% 000000000000000000000000000000000000000000000000bb0000bb00000000cc0011ee00bb0000
% bb00000000000000000000000000bb0000bb0000000000119900dd11442200000000000000880000
% 00000000bb0000bb000000bb000000bb00cc0011ee000000000088000000000000bb000000bb0000
% 00bb0000bb0000cc0011ee00000000000000000000000000000000000000000000003355bb00dd11
% 3300004422330000000000003355bb00000000000000000000000000000000000000110044110000
% 001188000000000000228800000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00dd0011ee000000000000000000000000000000000000000000000000
% 00000000000000000000118800bb000000bb00000011004411000000000000880000000000000000
% bb0000000000dd22330000000000000000000000000000cc0011ee000000004444220000880011ff
% 00000000000088000000000000bb0000bb00000000bb0000bb000066bb00000000000000
% 000000000000003399005599554400000022995500bb0000bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000011cccc8800000000ff333388000000bb
% 000000000000000000000000000000000000000000000000bb0000bb000000000000887700bb0000
% bb00000000000000000000000000bb0000bb0000000011889922ff8800aa66000022888888bb8888
% 44000000bb0000bb000000bb000000bb00000088660000448888bb888888220000bb000000bb0000
% 00bb0000bb00000000886600000000000000000000000000000000000000000000113344bb00ff55
% 1177003322448800000000113344bb00000000000000000000000000000000000000002266000000
% 229955000000000033993300000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0000008888000000000000000000000000000000000000000000000000
% 00000000000000000022995500bb000000bb00000000226600000000668888bb8888880000000000
% bb0000000000ff3333880000000000000000000000000000008877000000008800666600880044ff
% 000000888888bb888866000000bb0000bb00000000bb0000bb005500bb00000000000000
% 0000000000000000cc33115599440000000033ee00bb0000bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000993366dd66000000cc0000bb000000bb
% 000000000000000000000000000000000000000066888800bb0000bb000000000033880000bb0000
% bb00000000000000000000000000bb0000bb00000000000055ddee550044ee000000000000880000
% 00000000bb0000bb000000bb000000bb0000225500000000000088000000000000bb000000bb0000
% 00bb0000bb00000022550000000000000000000000000000000000000000000000550044bb00ff11
% 008800000000ff00000000550044bb00000000000000000000000000000000000000009911000000
% 0033ee00000000000044dd00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0000338800000000000000000000000000000000000000000000000000
% 0000000000000000000033ee00bb000000bb00000000991100000000000000880000000000000000
% bb0000000000cc0000bb000000000000000000000000000033880000000000000000ee00444455dd
% 00000000000088000000000000bb0000bb00000000bb0000bb333300bb00000000000000
% 000000000000000088880000cc440000dd0000ee0088110088000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000007700001177000000880000bb000000bb
% 00000000000000000000000000000000000000000000000088110088000000001166003300880000
% 880000000000000000000000000088001188000000dd000000ee99660055dd000000000000880000
% 00000000880011880000007722002277002222004400000000008800000000000077220022770000
% 008811008800002222004400000000000000000000000000000000000000000000444444cc22aa22
% 008800dd0000dd00000000444444cc2200000000000000000000000000000000000000ee000000dd
% 0000ee00000000cc0000ee0000000000000000000000000000000000000000000000000000000077
% 22002277000000881100880011880033000000000000000000000000000000000000000000000000
% 0000000000000000dd0000ee00772200227700000000ee0000000000000000880000000000000000
% bb0000000000880000bb000000000000000000000000001166003300000000cc0011dd0000003388
% 00000000000088000000000000880011880000000088001188224444cc44000000000000
% 00000000000000003366000088000000664477660011776633000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000554444551100bb0033556666001144cc
% 440000000000000000000000000000000000000000000000117766330000bb00ccbbbb9900336666
% 33000000000000000000000000003366771100bb0066664466331188449933000022888888bb8888
% 440000003366771100bb00117744771100bbbbbb990000448888bb888888220000117744771100bb
% 00117766330000bbbbbb9900000000000000000000000000000000000000000000001144cc223388
% 445500665588330000bb00001144cc2200000000000000000000000000000000000000dd00000066
% 4477660000bb00444477660000000000000000000000000000000000000000000000000000000011
% 7744771100bb001177663300ccccbb99000000000000000000000000000000000000000000000000
% 00000000000000006644776600117744771100bb0000dd0000000000668888bb8888880000001144
% cc440000bb003355666600000000000000000000000000ccbbbb9900bb00004444883300cc447711
% 000000888888bb8888660000003366771100bb000033667711000033cc44000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055dd2211999911119944000011990000001199000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000004477880000000088000000000077555500338844
% 33000000000000000000000000000000000000000000000011776633000000006644777700554455
% 66000000000000000000000000003366771100000000447788000088555500000000000000880000
% 00000000336677110000001177447711001199000000000000008800000000000011774477110000
% 00117766330000334499660000000000000000000000000000000000002288000033884433001177
% 66330077556677000000007755667700000000000000000000000000005566886600002288000088
% bbbbbb5500000088bbbbbb5500000000000000000000000000000000000000000000000000000011
% 77447711000000117766330000228800000000000000000000000000000000000000000000000000
% 000000000000000088bbbbbb55004477880000000000775555000000000000880000000000000022
% 88000000000055445566000000000000000000000000004444886600000000006655990044558822
% 000000000000880000000000003366771100000000336677110033448866000000000000
% 00000000000000dd110055aa00004400000077bb00000077bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000cc00ff00000066bb00000000885500cc00dd2200
% 7700000000000000000000000000000000000000000000008811008800000000dd0000ff00880000
% 88000000000000000000000000008800118800000000cc00ff00886600cc00000000000000880000
% 000000008800118800000077220022770044bb000000000000008800000000000077220022770000
% 00881100880011330011ee00000000000000000000000000000000001133bb0000dd220077008811
% 008800dd0000ff00000000dd0000ff0000000000000000000000000000aa0011ee001133bb000044
% 00005500000000440000550000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088001133bb00000000000000000000000000000000000000000000000000
% 0000000000000000440000550000cc00ff00000000885500cc000000000000880000000000001133
% bb00000000008800008800000000000000000000000000770011ee00000000885500dd0088000088
% 0000000000008800000000000088001188000000008800118800440011ee000000000000
% 0000000000000088660055dd00004400003355bb00003355bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000119900002244bb00000000dd11330000ff0000
% 880000000000000000000000000000000000000000000000bb0000bb000000000000228800aa3300
% 4400000000000000000000000000bb0000bb0000000000119900dd11442200000000000000880000
% 00000000bb0000bb000000bb000000bb0000bb0000000000000088000000000000bb000000bb0000
% 00bb0000bb0000cc0011ee00000000000000000000000000000000000000bb0000ff00008800bb00
% 00bb000000118800000000000011880000000000000000000000000000dd0011ee000000bb000011
% 004411000000001100441100000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 000000000000000011004411000000119900000000dd113300000000000000880000000000000000
% bb0000000000aa33004400000000000000000000000000cc0011ee00000000dd3333000099113322
% 00000000000088000000000000bb0000bb00000000bb0000bb00cc0011ee000000000000
% 00000000000000339900559955440000113344bb00113344bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000011889922005500bb00000000ff55117700dd2211
% bb0000000000000000000000000000000000000000000000bb0000bb00000000003399330011eebb
% 3300000000000000000000000000bb0000bb0000000011889922ff8800aa66000022888888bb8888
% 44000000bb0000bb000000bb000000bb0000bb00000000448888bb888888220000bb000000bb0000
% 00bb0000bb00000000886600000000000000000000000000000000000000bb0000dd2211bb00bb00
% 00bb00002299550000000000229955000000000000000000000000000000008888000000bb000000
% 226600000000000022660000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 000000000000000000226600000011889922000000ff551177000000668888bb8888880000000000
% bb000000000011eebb33000000000000000000000000000000887700000000dd3377880066eeaa33
% 000000888888bb888866000000bb0000bb00000000bb0000bb0000008866000000000000
% 0000000000000000cc33115599440000550044bb00550044bb000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000055dd551100bb00000000ff11008800558855
% dd0000000000000000000000000000000000000066888800bb0000bb00000000000044dd00aa3388
% dd00000000000000000000000000bb0000bb00000000000055ddee550044ee000000000000880000
% 00000000bb0000bb000000bb000000bb0000bb0000000000000088000000000000bb000000bb0000
% 00bb0000bb00000022550000000000000000000000000000000000000000bb0000558855dd00bb00
% 00bb00000033ee00000000000033ee000000000000000000000000000000338800000000bb000000
% 991100000000000099110000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000009911000000000055dd000000ff110088000000000000880000000000000000
% bb0000000000aa3388dd000000000000000000000000000033880000000000880000ff44882299dd
% 00000000000088000000000000bb0000bb00000000bb0000bb0000335500000000000000
% 000000000000000088880000cc440000444444cc22444444cc220000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000dd000000ee334444cc33000000aa22008800000022
% 8800000000000000000000000000000000000000000000008811008800000000cc0000ee00770000
% 880000000000000000000000000088001188000000dd000000ee99660055dd000000000000880000
% 000000008800118800000077220022770000bb000000000000008800000000000077220022770000
% 008811008800002222004400000000000000000000000000000000000000bb000000002288008811
% 008800dd0000ee00000000dd0000ee000000000000000000000000000011880033000000bb000000
% ee00000000000000ee00000000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088000000bb00000000000000000000000000000000000000000000000000
% 000000000000000000ee000000dd000000ee000000aa220088000000000000880000000000000000
% bb000000000077000088000000000000000000000000001166003300000000550011ee7700000088
% 000000000000880000000000008800118800000000880011880011550044000000000000
% 00000000000000003366000088000000001144cc22001144cc220000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000006666446633000044cc3300bb003388445500cc4466
% 110000000000000000000000000000000000000000000000117766330000bb004444776600554444
% 44000000000000000000000000003366771100bb0066664466331188449933000022888888bb8888
% 440000003366771100bb0011774477110044cc44110000448888bb888888220000117744771100bb
% 00117766330000bbbbbb9900000000000000000000000000000000001144cc4400cc446611001177
% 663300664477660000bb00664477660000000000000000000000000000ccccbb99001144cc440000
% dd00000000bb0000dd00000000000000000000000000000000000000000000000000000000000011
% 7744771100bb0011776633001144cc44000000000000000000000000000000000000000000000000
% 000000000000000000dd000000666644663300bb0033884455000000668888bb8888880000001144
% cc440000bb005544444400000000000000000000000000ccbbbb9900bb0000224488661166444444
% 000000888888bb8888660000003366771100bb00003366771100bbbbbb99000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000055dd2211999911119944224400440000228800000055664466884400000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000880033884499110000000022880000775566
% 77000000000000000000000000000000000000000000000011776633000000000000880000223311
% 44000000000000000000000000003366771100000000334499661166447722000000000000880000
% 00000000336677110000001177447711003344996600000000008800000000000011774477110000
% 00117766330000660044000000000000000000000000000000000000002288000011665577000022
% 88000033884433000000002244004400000000000000000000000000000022880000002288000022
% 4400440000000088bbbbbb5500000000000000000000000000000000000000000000000000000011
% 77447711000000117766330000228800000000000000000000000000000000000000000000000000
% 00000000000000007755667700338844991100000077556677000000000000880000000000000022
% 88000000000066447777000000000000000000000000004444886600000000444477770066004422
% 000000000000880000000000003366771100000000336677110044447777000000000000
% 00000000000000dd110055aa0000440044999922001133bb00005588000000884400000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000066bb00bb660088990000001133bb0000dd0000
% ff000000000000000000000000000000000000000000000088110088000000000022dd000044aa99
% 11000000000000000000000000008800118800000011330011ee8800001188000000000000880000
% 0000000088001188000000772200227711330011ee00000000008800000000000077220022770000
% 00881100880000aaaa440000000000000000000000000000000000001133bb000088000088001133
% bb0000dd220077000000004499992200000000000000000000000000001133bb00001133bb000044
% 99992200000000440000550000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088001133bb00000000000000000000000000000000000000000000000000
% 0000000000000000dd0000ff00bb66008899000000dd0000ff000000000000880000000000001133
% bb0000000000dd0000ff00000000000000000000000000770011ee00000000cc0000ff00aabb5500
% 0000000000008800000000000088001188000000008800118800cc0000ff000000000000
% 0000000000000088660055dd0000440044223300000000bb0000dd11000000223300000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000002244bb00ff440055ee0000000000bb0000000011
% 880000000000000000000000000000000000000000000000bb0000bb000000000088880000442233
% 0000000000000000000000000000bb0000bb00000000cc0011ee4499002222000000000000880000
% 00000000bb0000bb000000bb000000bb00cc0011ee000000000088000000000000bb000000bb0000
% 00bb0000bb00004444220000000000000000000000000000000000000000bb000044771144000000
% bb0000ff000088000000004422330000000000000000000000000000000000bb00000000bb000044
% 223300000000001100441100000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 00000000000000000000118800ff440055ee00000000001188000000000000880000000000000000
% bb00000000000000228800000000000000000000000000cc0011ee00000000000022660044442200
% 00000000000088000000000000bb0000bb00000000bb0000bb0000002266000000000000
% 0000000000000033990055995544000033224488000000bb0000ff00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000005500bb00bb660088ff0000000000bb0000002299
% 550000000000000000000000000000000000000000000000bb0000bb000000004422880000332244
% 8800000000000000000000000000bb0000bb00000000000088660088cc9900000022888888bb8888
% 44000000bb0000bb000000bb000000bb00000088660000448888bb888888220000bb000000bb0000
% 00bb0000bb00008800666600000000000000000000000000000000000000bb000011cccc88000000
% bb0000dd2211bb000000003322448800000000000000000000000000000000bb00000000bb000033
% 224488000000000022660000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 00000000000000000022995500bb660088ff00000000229955000000668888bb8888880000000000
% bb0000000000003399330000000000000000000000000000008877000000000044aa330088006666
% 000000888888bb888866000000bb0000bb00000000bb0000bb000044aa33000000000000
% 0000000000000000cc33115599440000000000ff000000bb0000dd11000000002200000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000551100bb0033884466dd0000000000bb0000000033
% ee0000000000000000000000000000000000000066888800bb0000bb000000115500880000000000
% ff00000000000000000000000000bb0000bb0000000000225500558844cc66000000000000880000
% 00000000bb0000bb000000bb000000bb0000225500000000000088000000000000bb000000bb0000
% 00bb0000bb0000000000ee00000000000000000000000000000000000000bb0000993366dd660000
% bb0000558855dd00000000000000ff00000000000000000000000000000000bb00000000bb000000
% 0000ff000000000099110000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000000033ee0033884466dd000000000033ee000000000000880000000000000000
% bb0000000000000044dd000000000000000000000000000033880000000000000055dd00000000ee
% 00000000000088000000000000bb0000bb00000000bb0000bb00000055dd000000000000
% 000000000000000088880000cc440000dd0000dd000000bb00005588000000331100000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000334444cc3300000044880000000000bb0000dd0000
% ee000000000000000000000000000000000000000000000088110088000000114444cc4411cc0000
% dd000000000000000000000000008800118800000000222200447700001177000000000000880000
% 00000000880011880000007722002277002222004400000000008800000000000077220022770000
% 008811008800dd000011dd00000000000000000000000000000000000000bb000077000011770000
% bb00000000228800000000dd0000dd00000000000000000000000000000000bb00000000bb0000dd
% 0000dd0000000000ee00000000000000000000000000000000000000000000000000000000000077
% 2200227700000088110088000000bb00000000000000000000000000000000000000000000000000
% 0000000000000000dd0000ee000000004488000000dd0000ee000000000000880000000000000000
% bb0000000000cc0000ee000000000000000000000000001166003300000000cc0000ee00cc0011dd
% 0000000000008800000000000088001188000000008800118800cc0000ee000000000000
% 0000000000000000336600008800000066558833001144cc44000055664444440000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000044cc3300dd55771100bb001144cc4400664477
% 660000000000000000000000000000000000000000000000117766330000bb000022cc4411444488
% 33000000000000000000000000003366771100bb0000bbbbbb991166445511000022888888bb8888
% 440000003366771100bb00117744771100bbbbbb990000448888bb888888220000117744771100bb
% 001177663300667744773300000000000000000000000000000000001144cc440055444455111144
% cc4400cc4466110000bb006655883300000000000000000000000000001144cc44001144cc440066
% 5588330000bb0000dd00000000000000000000000000000000000000000000000000000000000011
% 7744771100bb0011776633001144cc44000000000000000000000000000000000000000000000000
% 0000000000000000664477660000dd55771100bb0066447766000000668888bb8888880000001144
% cc440000bb004444776600000000000000000000000000ccbbbb9900bb0000444488660044448833
% 000000888888bb8888660000003366771100bb0000336677110044448866000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000556644668844000000000000000000000000000000000000000000000000000000
% 0033ff55220000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000088bbbbbb5500000088000000005566886600556688
% 66000000000000000000000000000000000000000000000055445566000000000000880000006655
% 88000000000000000000000000001199000000000000bbbbbb880033449966000000000000880000
% 00000000336677110000001177447711006600440000000000008800000000000011774477110000
% 00117766330000bbbbbb880000000000000000000000000000000000000000000077556677002244
% 00440000775555000000002244004400000000000000000000000000007755667700224400440000
% 77555500000000224400440000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330000775555000000000000000000000000000000000000000000000000
% 00000000000000000022880000001199000000000000228800000000000000880000000000001177
% 66330000000088bbbbbb220000000000000000000000004444886600000000660044220044447777
% 000000000000880000000000003366771100000000119900000011990000000000000000
% 00000000000055880000008844000000000000000000000000000000000000000000000000000000
% 0000ff00000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000004400005500000066bb00000000aa0011ee00aa0011
% ee000000000000000000000000000000000000000000000088000088000000000022dd0000885500
% dd0000000000000000000000000033bb0000000000222200444411330011ee000000000000880000
% 0000000088001188000000772200227700aaaa440000000000008800000000000077220022770000
% 008811008800222200444400000000000000000000000000000000000000000000dd0000ff004499
% 992200885500cc00000000449999220000000000000000000000000000dd0000ff00449999220088
% 5500cc00000000449999220000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800885500cc000000000000000000000000000000000000000000000000
% 00000000000000001133bb00000044bb00000000001133bb00000000000000880000000000008811
% 0088000000004400006600000000000000000000000000770011ee00000000aabb550000cc0000ff
% 00000000000088000000000000880011880000000033bb00000033bb0000000000000000
% 000000000000dd110000002233000000000000000022550000000000000000000000000000000000
% 0000ff00000000000000000000000000000000004400000000000000000000000000000000000000
% 000000000000000000000000000000000000001100441100002244bb00000000dd0011ee00dd0011
% ee0000000000000000000000000000000000000000000000aa330044000000000088880000dd2233
% 000000000000000000000000000000bb0000000000110000770000cc0011ee000000000000880000
% 00000000bb0000bb000000bb000000bb0044442200000000000088000000000000bb000000bb0000
% 00bb0000bb0011000077000000000000000000000000000000000000000000000000001188004422
% 330000dd1133000000000044223300000000000000000000000000000000001188004422330000dd
% 113300000000004422330000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00dd113300000000000000000000000000000000000000000000000000
% 00000000000000000000bb00000000bb00000000000000bb0000000000000088000000000000bb00
% 00bb000000001100660000000000000000000000000000cc0011ee00000000444422000000002266
% 00000000000088000000000000bb0000bb0000000000bb00000000bb0000000000000000
% 000000000000ff00000000000066aa008844665555992233dd55558822cc0033bb00884477000000
% 0000ff000000001177446633006655556611cc550055330000000000000000000000000000000000
% 000000000000000000000000000000000000000022660000005500bb000000000000888800000088
% 88000000000000000000000000000000000000000000000011eebb33000000004422880000ff3333
% 880000000000000000000000000000bb000000000000006644000000008866000022888888bb8888
% 44000000bb0000bb000000bb000000bb00880066660000448888bb888888220000bb000000bb0000
% 00bb0000bb0000006644000000000000000000000000000000000000000000000000229955003322
% 448800ff5511770000000033224488000000000000000000000000000000229955003322448800ff
% 551177000000003322448800000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00ff551177000000000000000000000000000000000000000000000000
% 00000000000000000000bb00000000bb00000000000000bb00000000668888bb888888000000bb00
% 00bb000000000044550000000000000000000000000000000088770000000088006666000044aa33
% 000000888888bb888866000000bb0000bb0000000000bb00000000bb0000000000000000
% 000000000000dd11000000002200bb004400bb2222880000bb0000bb00bb0000bb00aa8833000000
% 0000ff00000044990000009900aa0000aa00bb000000aa0000000000000000000000000000000000
% 000000000000000000000000000000000000000099110000551100bb000000000033880000003388
% 000000000000000000000000000000000000000066888800aa3388dd000000115500880000cc0000
% bb0000000000000000000000000000bb00000000000000aa00000000225500000000000000880000
% 00000000bb0000bb000000bb000000bb00000000ee000000000088000000000000bb000000bb0000
% 00bb0000bb000000aa000000000000000000000000000000000000000000000000000033ee000000
% 00ff00ff11008800000000000000ff0000000000000000000000000000000033ee00000000ff00ff
% 11008800000000000000ff00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00ff110088000000000000000000000000000000000000000000000000
% 00000000000000000000bb00000000bb00000000000000bb0000000000000088000000000000bb00
% 00bb0000000000991100000000000000000000000000000033880000000000000000ee00000055dd
% 00000000000088000000000000bb0000bb0000000000bb00000000bb0000000000000000
% 000000000000558800000033110066883300775533000000bb0000bb00bb0000bb00442266770000
% 0000ff00000066aa000000bb00aa0000aa00bb000022aa0000000000000000000000000000000000
% 0000000000000000000000000000000000000000ee000000334444cc330000001188003300118800
% 33000000000000000000000000000000000000000000000077000088000000114444cc4411880000
% bb0000000000000000000000000000bb00000000000000ee00000022220044000000000000880000
% 00000000880011880000007722002277dd000011dd00000000008800000000000077220022770000
% 0088110088000000ee000000000000000000000000000000000000000000000000dd0000ee00dd00
% 00dd00aa22008800000000dd0000dd0000000000000000000000000000dd0000ee00dd0000dd00aa
% 22008800000000dd0000dd0000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800aa220088000000000000000000000000000000000000000000000000
% 00000000000000000000bb00000000bb00000000000000bb00000000000000880000000000008811
% 00880000000000ee0000000000000000000000000000001166003300000000cc0011dd00cc0000ee
% 00000000000088000000000000880011880000000000bb00000000bb0000000000000000
% 000000000000005566444444000011990000779988660033cc2244cc11775566cc22994466330000
% 0033ff444488bb1177446633006655666600bb554488110000000000000000000000000000000000
% 0000000000000000000000000000000000000000dd000000000044cc3300bb00ccccbb9900ccccbb
% 990000000000000000000000000000000000000000000000554444440000bb000022cc4411335566
% 660000000000000000000000000033cc442200bb000000dd000000bbbbbb99000022888888bb8888
% 440000003366771100bb00117744771166774477330000448888bb888888220000117744771100bb
% 0011776633000000dd00000000000000000000000000000000000000000000000066447766006655
% 883300338844550000bb006655883300000000000000000000000000006644776600665588330033
% 8844550000bb00665588330000000000000000000000000000000000000000000000000000000011
% 7744771100bb00117766330033884455000000000000000000000000000000000000000000000000
% 00000000000000001144cc44000044cc441100bb001144cc44000000668888bb8888880000001177
% 66330000bb0000dd000000000000000000000000000000ccbbbb9900bb0000444488330044448866
% 000000888888bb8888660000003366771100bb000033cc44220033cc4422000000000000
% 00000000000000000000000000001155000088110033770000000000000000000000000000000000
% 000000000000000000000000000000000000bb000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000aa7700000033664466330000000000000000000000000000000000
% 000000000000000000000000000000000011cc440000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000088bbbbbbbbbb
% 0000000000000000000022880000117766330000000000556644448800000000000055ee33000099
% 66000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00000088
% 2200000000000000001133bb000088110088000000005577000000aa00000000000000aa33000055
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00113300
% 2200667711000000000000bb0000bb0000bb00000000dd1100000044000000000000006688000055
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000ff44774400
% 0000000066884400000000bb0000bb0000bb00000000ff00000000000000555566770000cc004400
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00003300
% 2200000000008899000000bb0000bb0000bb00000000dd11000033ff4400bb4444cc000099445500
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000ff00000044
% 1100000066884400000000bb000088110088000000005577000000ff0000bb000011000033aa3300
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000033ff444455bb
% 0000667711000000001144cc440011776633000000000055664488aa000033664455000000bb0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000001144ee11000000ee441133774466442244ff2222ff4422000000448800002233114400
% 00000000000000006600442200334488660000000000000000000000000000000000000000000000
% 00000000000000000000000000007755667700003344996611774477110000007755667700116655
% 77000000000000000000000000000000000000000000000000228800000000004444886600444488
% 66000000000000000000000000003366771100000000334499661177447711000000000000880000
% 00000000336677110000001177447711000000880000000000008800000000000011774477110000
% 001177663300004477880000000000000000000000000000000000000000000000000000000088bb
% bbbb5500775555000000004444886600000000000000000000000000000000000000000000000000
% 77555500000000223311440000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330077556677000000000000000000000000000000000000000000000000
% 00000000000000000000000000117744771100000000775555000000000000880000000000001177
% 66330000000088bbbbbb2200000000000000000000000044448866000000003344886600bbbbbbaa
% 000000000000880000000000003366771100000000bbbbbbaa0044447777000000000000
% 000000000000009966000044bb0000aa000033440000ff0000ff000000002233bb000044aa991100
% 0000000000000000aabb550000440011ee0000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ff0011330011ee7722002277000000dd0000ff00880000
% 8800000000000000000000000000000000000000000000001133bb0000000000770011ee00770011
% ee000000000000000000000000008800118800000011330011ee7722002277000000000000880000
% 00000000880011880000007722002277000066bb0000000000008800000000000077220022770000
% 00881100880000cc00ff000000000000000000000000000000000000000000000000000000004400
% 005500885500cc00000000770011ee00000000000000000000000000000000000000000000000088
% 5500cc0000000044aa99110000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800dd0000ff000000000000000000000000000000000000000000000000
% 000000000000000000000000007722002277000000885500cc000000000000880000000000008811
% 0088000000004400006600000000000000000000000000770011ee00000000440011ee2222001166
% 0000000000008800000000000088001188000000222200116600cc0000ff000000000000
% 0000000000000055bb000044bb000099882200220000ff0000ff000000000000bb00004422330000
% 00000000000000004444220000cc0011ee0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000011880000cc0011eebb000000bb0000000000118800447711
% 4400000000000000000000000000000000000000000000000000bb0000000000cc0011ee00cc0011
% ee00000000000000000000000000bb0000bb00000000cc0011eebb000000bb000000000000880000
% 00000000bb0000bb000000bb000000bb002244bb00000000000088000000000000bb000000bb0000
% 00bb0000bb0000001199000000000000000000000000000000000000000000000000000000001100
% 441100dd11330000000000cc0011ee000000000000000000000000000000000000000000000000dd
% 113300000000004422330000000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0000001188000000000000000000000000000000000000000000000000
% 00000000000000000000000000bb000000bb000000dd11330000000000000088000000000000bb00
% 00bb000000001100660000000000000000000000000000cc0011ee00000000cc0011ee1100007700
% 00000000000088000000000000bb0000bb00000011000077000000002266000000000000
% 000000000000004499222222bb00001199dddd330000ff4444ff000000000000bb00003322448800
% 00000000000000008800666600000088660000000000000000000000000000000000000000000000
% 000000000000000000000000000000229955000000008866bb000000bb000000002299550011cccc
% 8800000000000000000000000000000000000000000000000000bb00000000000000887700000088
% 7700000000000000000000000000bb0000bb0000000000008866bb000000bb000022888888bb8888
% 44000000bb0000bb000000bb000000bb005500bb000000448888bb888888220000bb000000bb0000
% 00bb0000bb0000118899220000000000000000000000000000000000000000000000000000000022
% 660000ff5511770000000000008877000000000000000000000000000000000000000000000000ff
% 551177000000003322448800000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0000229955000000000000000000000000000000000000000000000000
% 00000000000000000000000000bb000000bb000000ff551177000000668888bb888888000000bb00
% 00bb0000000000445500000000000000000000000000000000887700000000000088660000445500
% 000000888888bb888866000000bb0000bb0000000000445500000044aa33000000000000
% 000000000000004455884400bb000011000066aa0000ff0000ff000000000000bb0000000000ff00
% 8888888888880000000000ee00003355000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000033ee000000225500bb000000bb000000000033ee00993366
% dd66000000000000000000000000000000000000668888000000bb00000000000033880000003388
% 0000000000000000000000000000bb0000bb0000000000225500bb000000bb000000000000880000
% 00000000bb0000bb000000bb000000bb551100bb00000000000088000000000000bb000000bb0000
% 00bb0000bb0000000055dd0000000000000000000000000000000000000000000000000000000099
% 110000ff1100880000000000338800000000000000000000000000000000000000000000000000ff
% 11008800000000000000ff00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00000033ee000000000000000000000000000000000000000000000000
% 00000000000000000000000000bb000000bb000000ff11008800000000000088000000000000bb00
% 00bb0000000000991100000000000000000000000000000033880000000000003355000000aa1100
% 00000000000088000000000000bb0000bb0000000000aa110000000055dd000000000000
% 000000000000004400cc4400bb000066000000aa0000ff0000ff000000000000bb0000cc0000dd00
% 0000000000000000cc0011dd00115500440000000000000000000000000000000000000000000000
% 0000000000000000000000000000dd0000ee0000222200447722002277000000dd0000ee00770000
% 1177000000000000000000000000000000000000000000000000bb00000000001166003300116600
% 33000000000000000000000000008800118800000000222200447722002277000000000000880000
% 00000000880011880000007722002277334444cc3300000000008800000000000077220022770000
% 008811008800dd000000ee00000000000000000000000000000000000000000000000000000000ee
% 000000aa2200880000000011660033000000000000000000000000000000000000000000000000aa
% 22008800000000cc0000dd0000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800dd0000ee000000000000000000000000000000000000000000000000
% 000000000000000000000000007722002277000000aa220088000000000000880000000000008811
% 00880000000000ee0000000000000000000000000000001166003300000000115500440000ee0000
% 00000000000088000000000000880011880000000000ee000000cc0000ee000000000000
% 000000000011558811881122cc441188554488332244ff2222ff442200002255cc33004444883300
% 00000000000000004444883300bbbbbb990000000000000000000000000000000000000000000000
% 0000000000000000000000000000664477660000bbbbbb99117744771100bb006644776600554444
% 5511000000000000000000000000000000000000000000001144cc440000bb00ccbbbb9900ccbbbb
% 99000000000000000000000000003366771100bb0000bbbbbb991177447711000022888888bb8888
% 440000003366771100bb001177447711000044cc330000448888bb888888220000117744771100bb
% 001177663300666644663300000000000000000000000000000000000000000000000000000000dd
% 000000338844550000bb00ccbbbb9900000000000000000000000000000000000000000000000033
% 8844550000bb00444488330000000000000000000000000000000000000000000000000000000011
% 7744771100bb00117766330066447766000000000000000000000000000000000000000000000000
% 00000000000000000000000000117744771100bb0033884455000000668888bb8888880000001177
% 66330000bb0000dd000000000000000000000000000000ccbbbb9900bb0000bbbbbb990000dd0000
% 000000888888bb8888660000003366771100bb000000dd00000044448866000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000001144ff331144ff3388bbbbbbbbbb00337744664400665544880000000033cc44110022
% 88000011665577005566886600224400440000000000000000000022880000775566770088bbbbbb
% 55000000000000000000000000000000000000001199000000bbbbbb880000002244004400007755
% 55000000000000000000000000000000000000000000000011776633000000000000880000006655
% 88000000000000000000000000003366771100000000885555000066004400000000000000880000
% 00000000336677110000001177447711004477880000000000008800000000000011774477110000
% 00117766330000119900000000000000000000000000000000000000000000000000000000001166
% 55770077556677000000000066558800000000000000000000000000000000000000224400440022
% 44004400000000336677330000000000000000000000000000000000000000000000000000000011
% 77447711000000117766330022440044000000000000000000000000000000000000000000000000
% 00000000000000000000000000001199000000000011665577000000000000880000000000001177
% 66330000000044448866000000000000000000000000000044880000000000bbbbbbaa0000008800
% 000000000000880000000000003366771100000000119900000022449933000000000000
% 00000000000000ff000000ff0000ff0000008822aa0000334400aa0000770000000000bb00001133
% bb00008800008800aa0011ee00449999220000000000000000001133bb0000dd0000ff0044000055
% 000000000000000000000000000000000000000044bb000022220044440000004499992200885500
% cc000000000000000000000000000000000000000000000088110088000000000022dd0000885500
% dd0000000000000000000000000088001188000000886600cc0000aaaa4400000000000000880000
% 0000000088001188000000772200227700cc00ff0000000000008800000000000077220022770000
% 0088110088000044bb00000000000000000000000000000000000000000000000000000000008800
% 008800dd0000ff00000000885500dd00000000000000000000000000000000000000449999220044
% 99992200000000bb0000aa0000000000000000000000000000000000000000000000000000000077
% 22002277000000881100880044999922000000000000000000000000000000000000000000000000
% 000000000000000000000000000044bb000000000088000088000000000000880000000000008811
% 008800000000770011ee000000000000000000000000002233bb000000002222001166000044dd00
% 00000000000088000000000000880011880000000033bb000000880044aa000000000000
% 00000000000000ff000000ff0000ff0011330022998822002200dd5500220000000000bb00000000
% bb00004477114400dd0011ee00442233000000000000000000000000bb0000000011880011004411
% 000000000000000000000000000000000000000000bb000011000077000000004422330000dd1133
% 000000000000000000000000000000000000000000000000bb0000bb000000000088880000dd2233
% 0000000000000000000000000000bb0000bb000000dd114422000044442200000000000000880000
% 00000000bb0000bb000000bb000000bb0000119900000000000088000000000000bb000000bb0000
% 00bb0000bb000000bb00000000000000000000000000000000000000000000000000000000004477
% 1144000000118800000000dd22330000000000000000000000000000000000000000442233000044
% 22330000000000bb0000cc00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0044223300000000000000000000000000000000000000000000000000
% 000000000000000000000000000000bb00000000004477114400000000000088000000000000bb00
% 00bb00000000cc0011ee000000000000000000000000000000bb000000001100007700000066bb00
% 00000000000088000000000000bb0000bb0000000000bb000000880011ff000000000000
% 00000000000000ff444444ff0000ff44774400001199dddd330033bbff660000000000bb00000000
% bb000011cccc88000000888800332244880000000000000000000000bb0000002299550000226600
% 000000000000000000000000000000000000000000bb000000006644000000003322448800ff5511
% 770000000000000000000000000000000000000000000000bb0000bb000000004422880000ff3333
% 8800000000000000000000000000bb0000bb000000ff8800aa660088006666000022888888bb8888
% 44000000bb0000bb000000bb000000bb00118899220000448888bb888888220000bb000000bb0000
% 00bb0000bb000000bb000000000000000000000000000000000000000000000000000000000011cc
% cc88000022995500000000ff33338800000000000000000000000000000000000000332244880033
% 22448800000000bb0011ff00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb0033224488000000000000000000000000000000000000000000000000
% 000000000000000000000000000000bb000000000011cccc88000000668888bb888888000000bb00
% 00bb0000000000008877000000000000000000000000000000bb000000000000445500005500bb00
% 000000888888bb888866000000bb0000bb0000000000bb000000880044ff000000000000
% 00000000000000ff000000ff0000ff000033002211000066aa00110011dd0000000000bb00000000
% bb0000993366dd660033880000000000ff0000888888888888000000bb0000000033ee0000991100
% 000000000000000000000000000000000000000000bb00000000aa0000000000000000ff00ff1100
% 880000000000000000000000000000000000000066888800bb0000bb000000115500880000cc0000
% bb00000000000000000000000000bb0000bb000000ee550044ee00000000ee000000000000880000
% 00000000bb0000bb000000bb000000bb00000055dd000000000088000000000000bb000000bb0000
% 00bb0000bb000000bb00000000000000000000000000000000000000000000000000000000009933
% 66dd66000033ee00000000cc0000bb00000000000000000000000000000000000000000000ff0000
% 0000ff00000000556655dd00000000000000000000000000000000000000000000000000000000bb
% 000000bb000000bb0000bb00000000ff000000000000000000000000000000000000000000000000
% 000000000000000000000000000000bb0000000000993366dd66000000000088000000000000bb00
% 00bb0000000000338800000000000000000000000000000000bb000000000000aa1100333300bb00
% 00000000000088000000000000bb0000bb0000000000bb000000444455dd000000000000
% 00000000000000ff000000ff0000ff000000441166000000aa00660000aa000000cc00bb00000000
% bb000077000011771188003300dd0000dd0000000000000000000000bb0000dd0000ee0000ee0000
% 000000000000000000000000000000000000000000bb00000000ee0000000000dd0000dd00aa2200
% 88000000000000000000000000000000000000000000000088110088000000114444cc4411880000
% bb000000000000000000000000008800118800000099660055dddd000011dd000000000000880000
% 00000000880011880000007722002277dd000000ee00000000008800000000000077220022770000
% 0088110088000000bb00000000000000000000000000000000000000000000000000000000007700
% 001177dd0000ee00000000880000bb00000000000000000000000000000000000000dd0000dd00dd
% 0000dd00000000000033880000000000000000000000000000000000000000000000000000000077
% 220022770000008811008800dd0000dd000000000000000000000000000000000000000000000000
% 000000000000000000000000000000bb000000000077000011770000000000880000000000008811
% 00880000000011660033000000000000000000000000000000bb000000000000ee0000224444cc44
% 00000000000088000000000000880011880000000000bb00000000003388000000000000
% 00000000001144ff331144ff3333ff444455bb00885544883300aa55556600000066558800001144
% cc44005544445511ccccbb9900665588330000000000000000001144cc4400664477660000dd0000
% 000000000000000000000000000000000000000044cc44110000dd000000bb006655883300338844
% 550000000000000000000000000000000000000000000000117766330000bb000022cc4411335566
% 66000000000000000000000000003366771100bb0011884499336677447733000022888888bb8888
% 440000003366771100bb00117744771166664466330000448888bb888888220000117744771100bb
% 0011776633000044cc44110000000000000000000000000000000000000000000000000000005544
% 445511664477660000bb003355666600000000000000000000000000000000000000665588330066
% 5588330000bb00cc4477110000000000000000000000000000000000000000000000000000000011
% 7744771100bb00117766330066558833000000000000000000000000000000000000000000000000
% 000000000000000000000000000044cc441100bb0055444455110000668888bb8888880000001177
% 66330000bb00ccbbbb99000000000000000000000000002255cc3300bb000000dd0000000033cc44
% 000000888888bb8888660000003366771100bb000033cc442200cc447711000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice /pop load def
%%EndProlog
%%Page 1 1
%ADO_DSC_Encoding: MacOS Roman
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
currentglobal true setglobal
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
setglobal
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
currentglobal true setglobal
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 472 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreateDate="2011-08-28T06:30:15Z"
   xmp:ModifyDate="2011-08-28T06:30:15Z"
   pdf:Producer="Mac OS X 10.6.8 Quartz PDFContext"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [612 792 ] >> setpagedevice
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginSubsetFont: JHABAA+CMR12 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JHABAA+CMR12 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {-34 -251 988 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 431 446 665 675 683 704] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437927 def
/StdHW [29] def
/StdVW [65] def
/StemSnapH [20 29] def
/StemSnapV [65 81] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMJ+CMR12 /JHABAA+CMR12 findfont ct_VMDictPut
%ADOBeginSubsetFont: GONAAA+CMR10 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /GONAAA+CMR10 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -250 1009 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 431 448 666 677 683 705] def
/OtherBlues [-206 -194] def
/BlueScale 0.0437927 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMK+CMR10 /GONAAA+CMR10 findfont ct_VMDictPut
%ADOBeginSubsetFont: ZFNBAA+CMMI10 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /ZFNBAA+CMMI10 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -215 694 540} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 431 442 453 466 683 705] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437927 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/StemSnapV [72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWML+CMMI10 /ZFNBAA+CMMI10 findfont ct_VMDictPut
%ADOBeginSubsetFont: JLBBAA+CMR7 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JLBBAA+CMR7 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -249 822 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 431 446 664 674 683 703] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437927 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMM+CMR7 /JLBBAA+CMR7 findfont ct_VMDictPut
%ADOBeginSubsetFont: JNNAAA+CMMI7 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JNNAAA+CMMI7 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -10 571 441} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 431 441 451 463 683 703] def
/OtherBlues [-204 -194] def
/BlueScale 0.0437927 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/StemSnapV [81] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMN+CMMI7 /JNNAAA+CMMI7 findfont ct_VMDictPut
%ADOBeginSubsetFont: RFJBAA+CMSY7 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /RFJBAA+CMSY7 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 0 784 275} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 708] def
/OtherBlues [-139 -127] def
/BlueScale 0.0396271 def
/StdHW [49] def
/StdVW [49] def
/StemSnapH [49 69] def
/StemSnapV [49 69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMO+CMSY7 /RFJBAA+CMSY7 findfont ct_VMDictPut
%ADOBeginSubsetFont: OUOBAA+CMMI10 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /OUOBAA+CMMI10 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -215 694 540} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 431 442 453 466 683 705] def
/OtherBlues [-205 -194] def
/BlueScale 0.0437927 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/StemSnapV [72] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMP+CMMI10 /OUOBAA+CMMI10 findfont ct_VMDictPut
%ADOBeginSubsetFont: ORHBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /ORHBAA+CMSY10 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -960 944 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 705] def
/OtherBlues [-135 -124] def
/BlueScale 0.0416718 def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 56] def
/StemSnapV [40 56] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMQ+CMSY10 /ORHBAA+CMSY10 findfont ct_VMDictPut
%ADOBeginSubsetFont: VULAAA+CMSY10 Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /VULAAA+CMSY10 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 0 def
/FontBBox {0 -960 944 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 705] def
/OtherBlues [-135 -124] def
/BlueScale 0.0416718 def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 56] def
/StemSnapV [40 56] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PERWMR+CMSY10 /VULAAA+CMSY10 findfont ct_VMDictPut
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 261.024 li
523.686 261.024 li
523.686 0 li
cp
clp
[1 0 0 1 -119.959 0 ]ct
gsave
0 496.969 mo
792 496.969 li
792 -115.031 li
0 -115.031 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: JHABAA+CMR12 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMJ+CMR12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B613326598F7657C1643B36DF4E6D431FD668445BB11FE3980
88DEE5A41C4AFFA403F0B7993B417EB7B3B15FEBEFE16C348F00B50710577245
EC5725E9F7A6AAD22231B018526DFA67DBA7FB9A721F767D3ACD10D72F32D53B
38D4ABB201E09E6F027C714F91F99425AAFDD762AAF18CF265F105D8EFB608F6
715CBA54F412965937F206A97D76A83E24CEECA3EF6DFFED913B8A8C5BAFEAC7
265BC56D1F6D1BA43E0BCCDCBA7B1982A76772F66F244B6DC5AE7E4FE4D33217
F407CABB06> |-
/n <1C60D8A8C9B79C5F9DD058B93AC6789F3CBB814BFC1F00EDB54718B73939
28D3B2265CD93D424660C039425CBA4398983D3A3E0B2F08E4ECAAC3A11CEE6A
A91394591D10563F18B25C1714DF0FF3721666094230FA4F024DEE11AC8130DA
2FCE9082EBB1BDBAD74BEA1646226506565238B4B08B6317D554CCC162155DA4
CAC5F0A99B2D53A7B6A1D2819C65F282360783E5114E4B70FA9BB0E38436A61E
F9BC341E7A8D15474081F3D30667FD4E969668F84544C7B939C80D37CF321730
8F8868> |-
/o <1C60D8A8C9B752AB3DFB68D30F19F1CA9272CDB5ACB821A6F71A9CC34429
38CF6346EFA7660C66DA069F5EBDC24067D57DFFC05D80799E177A95094BFCA6
7A276154D6CBA4C1E5D133279DB5B2E0A865041C00DB37E8AF5290A042E49141
2C351C8C067D23CD2917758C0BCC7C9DAFE0DE1029A6C28786> |-
/r <1C60D8A8C9B73F59AC4C5EA853B4E2F03C64C0C05FD52BC33122FCCA4BFD
51EB9E09AC5195D025A282E25ADC995FA462E62BFD3FBB78FCF4F94F52F42782
F1036F93757E7816AB901DD476C8DB29DFD76A8F977E55D47316848B4CBB9C2E
9C231E1377AEA3E4ABB6343871DED0448700F525D58C2DDE58DACF835ADC433B
D339598286578A85E865AA10027CFEFDE957> |-
/F <1C60D8A8C9B672D450D6DAA518819E227C353EA137D1B3E0FADF23EFEEBA
912CEE2D2ECB468D04F2FDFFABE14B32446731B810B773BCF7B2671BF3E13094
5DC57674292BE961FE5669AD0098B97F02363FDCB6541824BD6C856BA7928C1A
3CB8ECCBADD83C2D41263258AC3CED3F6F639528E79972376E491309F4F09D95
FCD70D55BB7A7452C313E6B7B87F22FE09B9180501A4F1C63DF08E> |-
/s <1C60D8A8C9B7397095546C4A386811A909F264178C102E37E91BC31B924D
9B3178CC879F813C9FBB28DDFAFB5E4DB00AB47969517F6CA9E4D009805CCA02
704F29F1D897E47248614C06B38AB9A6CC2CEE2ABD4589B792535C94946347E1
92BCD5837CE43D7ADDA9D020C9042E829DE580CEC30A08C16AC2D87AF6B276C3
A330306CED37BE405496AC7E42FA5ED43499AD61FCD13817A426BD247F0B326A
A7AE4D4BC1AB9BB25568BB7CBC493F05A0BA6E2659752A4C90130ADF1F0C148F
A36155> |-
/G <1C60D8A8C9B6F57665638726699F50A7578A54CEA9006C25AD570C65B411
C72DC94423125D648F92EA391D7E6CB19C13370673E23571EF00B0DE03F34FBF
493CA0FB8EF3B0B284254A8F6DD169F87B9B8589035F2556396C31EB3C9CDE11
43FE2D20C5E41E64C1239B4813F0A161E029F6B7142D83C12CE556FC04B4D9B3
6D1A58E070204A489570B9270A5D9898B68E364940BA2B790E6C62ADBE92355E
111B9AF6CD9299373BCCEDB15D5563224757497BB610921AD3847B820793AEB0
3A6DE454> |-
/t <1C60D8A8C9B73F59A6AC2B53C00F251FAA3807B287449C6CE7B1D574F127
75168A2081C70118BD346A2CBA3F46FA00F6475C5B747F4FFE0350AC63B6F034
A86CAAC4C0E72D751CC6FA6AAFAF7EEB756D424FBA69667E00> |-
/u <1C60D8A8C9B79C5F973E0166279F70672EBC89841EA2F6C6916249FF7730
FDFB878E3685E5C001D8E6D0F7D826F009D3FC8EFCE4B248B62100A438B6E5EB
2E9B4B75853ADF8C25B6B3965D080DC9A3EDBE25DAC5D4D23A3E962A425C4720
2B665CCA8F038084193F908BB9BE29956E> |-
/v <1C60D8A8C9B7B71A3ACC73FAC83C2D25ACEF087890157917D2964E038B48
6372C83793522755C297FCB24415E513C906D62889A36D4326F50C561388E03D
3F2A5E15E278F275546A234452F840E33F6A39738B25E04811953E3E631AF95E
CF8F5A0361C12ED7AF0017887A3964C840B041FA3FFDFDB5036504AEE3696DE5
E08CD4F9C06680C3D0DA69444DD8DD91A47C6C1908E43D4AF65567609F1DC8A2
8098A058A81326BBE0C46AB4CBED12A93154B3E137> |-
/w <1C60D8A8C9B6367591C005587708E42BDE65588BBEC4233514C6BD2ECAD7
D4BC65627304ED240CFB1B08FB1360A88844D55689A2DCE615E7A221F9961F1C
8958C6878E9FF5508472B0AA2859F9DEC7851DA4825686B31704CBF5739C40FC
9E1AF798372D02EBA37F60A600A32D4063D05B3137059FF095670902339BCD15
EDE40EB72AE3B51B80A47C0F1755BF1D6550A1FCFA76C08EA4AB817416E334C6
DFC77AA51C49487259FBBFA82994645FAE998F0F69C7ED0EC5C97DA88BB986CB
90F73BCE1B195B5B43A326286BF2507D0F0A3869D87FDA14B38C67B4F54E9B57
AD8201C9D464DEAE8D97C42B2742539EF8A9E7B94494F38E247E1DAA8ECB3FE5
B07660BF096D3283E9E7483CDDA2F6FB9748A5DF4329D0> |-
/a <1C60D8A8C9B752AB3DC5DF79137F171AB577EC746E9985BD1DE96837CEF1
DEA48D7D27260C7C7322F99E4296B839C62F65A64E636BC474CE2239895BE865
6790A0C5CA6031741B0F7FABFF0A46B85CB2914D6506539949EE96DF76832885
6311BCC165C9E04D0C64F4698152B28ECBF186E6D19CF18C2535D7AFD403DD42
BDCC8DAD14BDCC9C9A4F278509AB5C49AE5DB321EED2831122881D8D62586149
EF7F> |-
/x <1C60D8A8C9B7B71A30F4AAE597D2BC6E943C480392CBE393C8158B0E0D55
CD6AEB88851F7B47CFF473BC5F192599C09172BBC9FFC8858BCE2B4A3439AFCB
72628D658CC887FBEFC56B3F0B79852A127CEE5D6ABA11CA02BFC6538EDED537
01B795459E94DD08D3D62C21EFAF807FF422F47A2F0F96E389E28B406770420E
FD91AFFA2D47C86EA2344793DE85852D13D854CEC729D67651116BCDEB0A62C1
86657BF24028A0FA81F5E0B63BDF0F920576D68461C3FEB8CA73DCED6E8DD683
F48110922D8F157DA8CB21C8E05A717663B6937F1B03D0A195C417BE2289E2D5
70AB61355B641707E483FB54D197C606F6CDE4D3CCB2FE203D08CC27CE013A7B
2645866136466861ED9EA83CED1E81F60F3A4AFBDFE91646A177BC1A8790C862
36D2653ECDF731EE509D1F124BABD68F3E73693512C4E6E296CD9189ECE2C1C7
782A9B> |-
/b <1C60D8A8C9B79C5F973E01663BD36EF6A8BF02D069A7EE989ECF5D0393F4
00A4CC7FFE9B00309A44B53B429855D059F1EB9BD1DBFB0DF9195F931EF7EA54
91C8D43611A22051624BF1706B27EC567B49209039693A163969C46FF4B733DB
455CE95724C0864BD36065B5C636D55BF0A13C932633643B396D215B6D38EC9A
AB9ACE862F66BC4A199E> |-
/L <1C60D8A8C9B7D8BE6A7720908CD7975F30A0327FB3669E6EA89B3C5E3BAF
C4543361DAB5C1C251CE6CB6FBBA59126CBE315D30C095400B410A8307AAD749
A1BBBCDB062758BBB170F051FD5309EAA2E140A8056FD28DF145BC5B079B56EB
FBD61C05DB0307B9F9A303BCA5CDA6F1A73EFA4CEED8AD50DA93> |-
/y <1C60D8A8C9B7B71A402354816A787102A946B87C234C1D555BE26673230F
131F8D9E83D7285569459160FE8B997E3AA5762841C153B7CAE4E64E6614BB3E
44F200846EA6FE1DE38C1AA2ECDCA6EE1BDBA8F7E245B04FBE3465ECD69EB9C2
CECFE144ADAC18522E08B800657079170537209F60E5AB8E4E79C87A60D3293A
042DE87D89290C459B081C317590A95ED6AE48E8D4E6E64C1A8B74528B609180
A7CC544CA7CB6CB18D66021F02D2FA36987A7D8C9C4233344931FCA84B2ECA31
B03711880F3C01772CC49004235570DB7C98BC551C8B06ADB5> |-
/c <1C60D8A8C9B7686E50B91A103C25982F9A302EA4F8141240DCC661C74F88
5E7E26E132F04A32F771AF1E981D85F2F45479CE056A7979B5D31D6ACDE50657
395AA1E0804FC72234B35D73160EC1DB8AC3DC589CD9CD13254678243B8E8AFF
A7C9C49116F9C3FD5CFBBEEBE8EFE08DFB00> |-
/d <1C60D8A8C9B79C5F973E01663BD36EF6A8BF028D4B0A7A4D9A6B1D8F8010
C50CB86E629F9BA29716CB03A29B62B2BC55176F9023051921DDD1ABA12B2D19
31F5305D2F2C6A93A518F54BAB51C13B6E7278B0BF99D06C13B9ED52D0A2FE43
A7DA2672E57649FA06D9304D05278701CCD983A0F2E5F0F077D1FA728F1AFE6F
10AE3152B97E4D2200C0E44E2F1A83> |-
/e <1C60D8A8C9B7686E50B91A10F4C805B90007B8ED9F69CD2ABB860BC6B4C2
4ADD309DD878EF1585F238AE8F9D91356FA3239D5176BBB7DB2E85C191C46227
879B3BF7D3968B6A2DF76C157A7C772E03B2D4C63BD69B1201900C6BD10D61A3
ACE648AF080836F4E237C1FE890558DD8376> |-
/f <1C60D8A8C9B8418669523E84D09FFECF53410DB70379DEC38D02232E0746
4685F3EC78C4446599065FF58DDFB8E548ECFC904A52B6282F09EB547C303AA4
92145B455F05A013C3831043B4015F3586892E8FABEF1DC9D0F105AADC0DC2D8
990057E512587B8BE3CDEB9A7989AB6F6D4F3E13C1AD2A318450BB6E19462D24
D7E11A62477410758B92BFAC5FFDEAB6A843A599C5441B39BC> |-
/h <1C60D8A8C9B79C5F9DD058B93AC67891D0EF62C068BBE0C9778A4B557364
657A2B3EAB237FC048CA9C206978D503894899312F16BD4CBC29CC5BDFD5B339
254228D699CD4175C78CD950F4E4603A391782A54AC11469A046EF0D6D3F5309
C2CDA02F1B4274291B5D220666709FF904C69EB458DC0177486F120A6C94934A
2612EB90583911C0EBFDE4B13B93D4A8398BA491F43100EB77D827E54C705CAB
DA9C3EC30E637394FABD07404DF1CD0153873157B7AD181B1FB8A151CD17A7C3
D021980D71289AB5> |-
/i <1C60D8A8C9B85D12B724967C6CB76D0959368207B4342C19CE1B9EC1C979
AFE39945CDB07DCB68293DEF3F9F5B5DDD81F9245C20D5895AB44AE881F948D9
AA2C98FD220B63C8E09F1AB810D64CA173E795C253747F5788C563CE245C4123
BABA356BA9A298ED2228E0B30341F78270B1D0D1ECB7ED7474C78F> |-
/T <1C60D8A8C9B636759BD93531AB0B3EF3EFDA8DE57E25CF2BD120D247F052
CB5532AD3820C7277E685BF514860F5CDF32B2BD61E2A2E2C448F17D6A1DCFD2
A3FFC51C643B084662CD90DB5293FB713F328DB88F83EFA6473829825049E247
084809068C3BEA0934725D86ADF7341FB9CAFA6ECBBE334D05273A8ADB024991
FD52A37173D8E966AEDCA718E806924108902F455A> |-
/l <1C60D8A8C9B85D12B724967D35F648783331BBC1EE8DB5003079F7430DA4
3E81BBC7468DA6B1B45BE0E5907E1FD60F6A47B1CFDFF488C6309642616C183A
B49CEE81F55EF5087AB0E56404FBB1395EDD51A084257E4A1ADB8135145C> |-
/nine <1C60D8A8C9B752ABCAAA250E6976A0D9A065CEA7CB74BCD7E9A439BC2
F6A15238DEE30DEC62553881D01828A2966DF608D4E9018A0CFF35F9C5C3F0A7
458614F3851D293EBF4B480AA28B6AA543F65B56B0DC545BC4D58FA42D497D6E
7E1335D3DA07D2236EBE19E26C0625FAEA451DCB9FEF5CD1F3A8B0AA58C5DCD9
154FFE64FB37BC559C09DA47E1CA6F60DB08BE4537877006DB3EF7A48FC87F3B
09A175306> |-
/endash <1C60D8A8C9B752AB4B30B52233C610FC5FD25C6A18EFA06ABEBC5A0
7F01E> |-
/period <1C60D8A8C9B85D12B760F96B699981ADCB57A7D673D446BE57B8C9B
CADDF9A80034920FA8DD7ED00> |-
/two <1C60D8A8C9B752AB3751B7115F440B017A800C9966F9D6C8D899B69B53
5555547C6BA24B6E1F046DE16579F205857804134562B1E66D1B74F5C065BE47
58EAA51BE86F23919207272A8508C865B8FC972FA5EECD6D618D03C944A0B510
56C9A643AEE9E15B7819729DCB8546556AE1AA15DC7D1BB3C46B74A340814C18
94F0D8820D897F> |-
/three <1C60D8A8C9B752ABCAAA2553B55F086D1BB58BB32453103A8E6B1FA2
DBDACBE050C48980396DC5ACE2C287ED03971640573BE0208377E56C3C4ED937
B36C95E2F32624AC435B310C6F4355C4117979B156D6CCE3A60ABD1942231ED6
604ECF92CC6EC70A747880800FD5DF0A89C382F8F0F1AFF89650D8A8B7527345
3849878370F47D811AB6FDEDC7EC8C471A34C93185F3EBC8C12B9D9DB8C1C393
3FE33724E01B6FA30C526152E3BAE4A818> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMJ+CMR12 /Encoding get
dup 1 /A put
dup 2 /n put
dup 3 /o put
dup 4 /r put
dup 5 /F put
dup 6 /s put
dup 7 /G put
dup 8 /t put
dup 9 /u put
dup 10 /v put
dup 11 /w put
dup 12 /a put
dup 13 /x put
dup 14 /b put
dup 15 /L put
dup 16 /y put
dup 17 /c put
dup 18 /d put
dup 19 /e put
dup 20 /f put
dup 21 /h put
dup 22 /i put
dup 23 /T put
dup 24 /l put
dup 25 /nine put
dup 26 /endash put
dup 27 /period put
dup 28 /two put
dup 29 /three put
pop
%ADOEndSubsetFont
/PERWMJ+CMR12*1 
[/.notdef /A /n /o /r /F /s /G 
/t /u /v /w /a /x /b /L 
/y /c /d /e /f /h /i /T 
/l /nine /endash /period /two /three 226{/.notdef}rp]
PERWMJ+CMR12 nf
PERWMJ+CMR12*1 [0 11.9552 11.9552 0 0 0 ]msf
709.2 175.369 mo
(\032\035\031\032)
[9.71957 5.88193 9.71954 0 ]ysh
PERWMJ+CMR12*1 [11.9552 0 0 -11.9552 0 0 ]msf
205.08 -11.3507 mo
(\027\014\016\030\023\035\033\001\002\014\030\020\006\026\006\003\024\010\025\023\010\013\023\030\012\023\023\015\010\023\002\022\023\022\006\003\011\004\021\023\006\026\002\021\030\011\022\023\022\026\002\034\005\007\017)
[7.43973 5.87955 6.47972 3.23981 9.1194 5.87955 14.8806 8.75949 6.47971 5.87955 3.23981 6.11996 
4.55972 3.23981 8.75961 5.87952 7.4397 4.55975 6.47974 9.12057 4.19992 8.03989 5.15982 3.23981 
5.76013 9.35968 5.15985 6.11993 4.55975 5.15985 6.47971 6.47971 5.15985 10.56 4.55975 5.87952 
6.47974 4.55975 5.15985 5.15979 8.7608 3.23981 6.47974 5.15979 3.23981 6.47974 6.47974 5.15979 
10.5601 3.23981 10.4404 5.87958 7.32025 9.24023 0 ]xsh
123.588 4.8613 mo
640.068 4.8613 li
640.068 5.34131 li
123.588 5.34131 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 787.139 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
123.588 6.90131 mo
640.068 6.90131 li
640.068 7.38132 li
123.588 7.38132 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 785.099 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: GONAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMK+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741
835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B069F122C69C93C
C84C1E2E5C1EDB186833D9A28F18458A45AD6A7572F00011ECC2E09341FD6937
B43E501C94208386B52881CD9F0C7EE85FC76CF7DFA415F22DB3B2B926D06F49
5CDDAB596E2F022F9C4F3C3961AB08783D379F9901790C33B26D5144056789A9
5EB7D120F2CBD25F8C89DDE84F37EAAE2D7C9D8E52E449BEC2C204B273340CAA
6C0D416A62DDFF217CC15AC6F8> |-
/n <1C60D8A8C9B790A83D946A52D13353207152D3DCC239C62B9F0F0BD9624A
AEAC8EB33D804BC103BF4C84F8FCB252709B3422B4E5F4D698E79D5531B2BC67
6C0D12EEB603C056C169F17DCC9F0F6AC43F292D82458847D2D279D19F466EA8
4C7027B712BFD7C4B4B770C9E0BD2D556C526F95495C91C927B8F7463DFDACF3
970984B31C39C074ECA243D9C8BFA10955B7D910908799AA616A425B937E17FF
6121AD71909EE5D3B89CA2D13AAC585FB6F54A794E7F44844B39E96B6AE21032
D420B68967AC9AC0F0DA0D53B8016F26EED527CB2387F1592BCDB6A91E073E83
C3181BD7505792D4855E> |-
/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4
CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDF
C5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A
96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-
/p <1C60D8A8C9B790A84D73DFE4D381CFD68735E4475645A4E53BCF7DB579C1
AFDD13D1A6F15CA06B47ED1C3E1B244798306364BC5CABD6DA63519493A5C659
BC60B5447F0104F114BE694DF580105735E360631FEECD6EC7A012CC85171828
1D07B0CC157A8E7B5931B7103AE94662442B62C7C336402079CFF632ADA590C0
779C308A1FCAF94180306BE01E5D89C2BD042F11A347AFB582199E7E84F8C797
ABEE0EDBB75C6E1AC5F4E76437DB6ED4E096E1BDAADA422AEEAC70BB94A61E61
EC7C901D077227549E6F61C4273BAEF20A141FBE8FA9A551273E39D70B> |-
/E <1C60D8A8C9B65DE708408E894B780C980FB3CD0F5A2C0BEF23E5114F36C9
09584A712E7AFDDA2F26FF878CC11EDE914164339F97B59F3659C5E3C5144DA7
9350C562BF05A1FC95A59765A840A579FDEA86DCEB7F99647561868501F99D35
BFF4F16CE8CFA6310AD24B7256C45B06ACB6DF245FF3654675E2E019899536DE
4452B0D6D01DB1C11617465A> |-
/r <1C60D8A8C9B734780FC88FD3B21DF573DE0BD8E19ECF409327C58E3627DF
4B64D82C290E296AD12D16F3BDD53C90C5D592551EDF5E8C7E8FE6B97498610F
068FB40EF014C6896F922B40CC34CEEEFE16781389974FD1D8010C3A1B93DA94
23D6C4280D86498AD092998E974DDACA1FA3CA4F3751905AC346A3F69D468219
4D3342733C7CF3000C654F8E9DE159A2316F10B36E49A0996D15FEF4DE5D8433
2102ECD35D818CF4C1F221D14DB48C0FB5BD30A2> |-
/F <1C60D8A8C9B6415B3711EB1374ABAAA5807C9EEF546BB48E20B7C80F2440
A33EBF154406CF8E0357C9FC59A91B81A30E2A6B39737D11C4098B5A80670049
AA0D28AEFFF6CC9623E77045E059C85ED1DEF097E8AD8EB596D92ECDFA245085
2F5239A26C6AE22D6FF2A11E41BB2F0B25F77CCF63F0DFBDCAFB46AB38C0475B
F38716AF7C70011524830AEDECD5FE884C30BE71797C9E6C523F53FAFC27E6> |-
/s <1C60D8A8C9B731071688E37ED9B7C64FA956A3F4F3785F4130685F1AE6EC
B30084C557AE5797D39605F849A2D9ADE2A65CA0927636C7629B25FDC4D569E8
97F36515E172780EBFB2CFAF71CF0EA8B4DD392E776CF20E7204D59F8DC03F56
CB4421E12FE8430EBD29CFDF5F6509E086EB0664E99116F88F2D5E9A8F8E96C8
47773BE6B8B90D0A0CCE846E18C0A1DF77A626724C95EC9E6FDFE55022CAFC89
18AE45838B303979E3A9BFE7F7BDAB73505805005500EF4C5AC6405B1E840CF1
B619C716D89CA7E80EEDEA1B928C67F7A10B24DE3EC254855DAC8B83797B28> |-
/G <1C60D8A8C9B6C5CA50BA1A66B0ED58C9A27CC1684A535A4AAE923AA86946
9B9FB1E98E8E911A6B68D071D9A9C53B9EA692748987A65C86386EDBF1DC70F6
4BF40FA829872071155D2EEF287FA3F412065012D7ECC6A66BEC3F9115F8F2B7
44B6FDCED55D0AA61445F9E82DBD8E663727CBB905C20DD0B57EE3C58C71FBD2
61064D2534E005C7403CDFF8F45F8CA19540B5E742E2C392DF93DEF0F5DEAFD7
7D3EE1270EBF8C86EDAFD0C899763930BDAF6E95FB83A7C6FF21F91FB9F4114A
C07B82F3A2368EBE8C4CF6B8F681F436D5496509EB99DE62F2C39298D13A5FC8
117BF4675C81CBB48E290A6FB33819> |-
/u <1C60D8A8C9B790A8362C570CFB2800E8CBF5A206A67F17BAAE343254C03E
958F83CB5A12ADFA8B4412150589560DDE9B70784A29B02FB60C9645231D13A9
78308E5EE53984B78C9AC2AA2F0EE5269299E66EC0A2F6D2FC9C7C56146B4A2D
450F3E529F72E7D7FD96107695E2148A6B3CC77B93CD510A44599C53106E6043
B1ADA6520148DE> |-
/I <1C60D8A8C9B803802DEC08D98BCB1124DC97CC2168B04A76665CA4085863
C1134DED52EF876B65C467960DD7B14974A90DA32178A8C0201F22E90F10D9F0
4A14033C618CAC17B75F13513FEEAE1D4A0FD6DB8D776D9FCA15F0400DBEA440
D61D7EA23967363EF1098D6D4EAD2578D18D87B764EA14FC1B0329A8B2F96ED6
50C824B7D9FCB004F255C7B9DB4DDDD820C863> |-
/a <1C60D8A8C9B7A73DCB03313BCF7AD8C8EE234E5372D46A65E92A78F4B7E0
2ECC58F71EE6C027AD4D56C5E4DE1AF1031295DC17C0E7AC8D8358634F9A19B0
2A110E5539C10136C68E0D2CBEA6658A501D9D73323861F8C29EB92F9080ACC3
E236C5F14389534682EC2925F59CD4A215569A7BD7B9F7827A30BA75EB840535
B2A2C8F92AD166CE93D277314A4C690C47DB847F73BFE1049631CDDB9124FD76
2753AA8DB187C216ED3005CA929015114EA53826E55872B63FD1FA60DB9883C7
27F137C754792AB823A705DD0DF28293037E1DA5DE4936C6573A1718CA671378
3EC51D8DA977> |-
/x <1C60D8A8C9B78C669F28CFA812DED67DCEB62F17AD12F7D7900E6AD3161B
3BB6A9E88D307B5F8CC0D753B8AC565B099CC0ACAA4A7CA31F2811E297F44D0D
EB72F7C315759FD2E63382EDE3061A24E5309BEE98D8290B6BC9B628BEBD7F7D
73F1B5EA640583D87E4AD24CB7F7908FD9A3DC9303785637F3B203908DF84330
922688D7A03D094D4EF700DA6BD8427088868109E238A57C22F5759A9FC99E5C
3C3F2D6B15D44C534041C741DF56BEDC796180345856EA6BBC1BD98F587E9295
32F631C96BE91F404EF68AE1203A5AD95C9FFBED9A1E5A7A1275795AE7884699
0825436FB611A109B66853254DCAC13E4C6298C531E7AEB98A1184600057B10A
9DAB09484AF36A38858BAF4BD8E53752011A5652B9FACEB6B61F17736A8E4776
835DFBDE552410043F2D535B01DBC3DAA1EA0A782CE3B35114AE12> |-
/L <1C60D8A8C9B66482C0AC2637AE818322843640782B4084B6BCB7EAC5B87B
B576EB951099027BB2082BCC7485557848EF03B40B2EB92530435BB00C45D615
22480C8796A82EF484C18DA82780A6A608D2AF86DBDD9D897934B97F7994CA6E
17FD38486E39BD34B7586F9E2776CCA87540F517999D98A29B36F10CD04369FA
A3B4> |-
/c <1C60D8A8C9B77FE2B98B448AAC15CD6088822B1EF090F0AF6EBCC9DDBBDB
F65EF50E59DA466BEF0FA242351362893C7564E99AEB6F42CD9ABC234329EBDD
53E590403FF06858A28FE170B71597883CA2148468202C6DAD0EC83B55607026
EDF229F6C24FEC7F46E5F53E3632239AC20591F5D1A939BB80017E6C55D3D867
51973D2E06541F43DD3086EAE96863ECE0301F79F72109AFDFA112C3A8> |-
/d <1C60D8A8C9B790A8362C570CE7DC14ED8339A5DD8D37983A5A2D0B4F515E
B70692477F5F548E28F1DCAB41EDF4BA0728DAF245495BE02E394B0DD240B5D5
5EE51A3675003CB15BB911F900B1E5DDC9F583E654C623831C440B91AF47A14F
90BB1788AEF8D63BB1C09A0DFFCC46AF6B9E95BF92169FAA4D5042B81ADB2768
FDD695BCD7BA015B086BADFFD844444D05A45C7E170A2C8460474939E15E0EBA
BF1131915EE0697E92536E40A464505CA536EC3A6940E2FEEC193EC0EB65C183
99A9D9> |-
/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F9
4973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B84
3B86074DC79A6CD0050A641BBD3D76F6A280A01B662CF540DC44B0244BA42328
D0C0AD1033AC62F401A3DED6A2DEA6245CB4859932AF05637597C673C1E4554E
6D1A85B9A271FFDD6802EE1900EEE3BF3FB1C692903A5561AF31F20EADA5B95C
F7CED21BCF0DCD198120A75B66796A207B4ED846B6C8BCEB6AFE688E2BBAFBC7
E620BB69A3B9327CE86F09F7F62A63> |-
/e <1C60D8A8C9B77FE2B98B448A6D851DB2CAC9451BC5A778A9834F3ED148EF
8C2095ABE60FC1B26DBB94057B63BED2BEE770D96BCB613AAAF017CD18C97CCA
61C46589119EDD299B58A1852EFEBDB7EF2A6D8606D19DEFCD13B1531BE3098F
0C00520EFD32FA435A0514B86269DFF5EE650657E526962BA2F3447589A03D4D
A2371542253C2A1E1B028917A1E5> |-
/O <1C60D8A8C9B6FC2D1A57C75D245B70BE97404F13CE569FC422D9D09438E7
1013F439099D7D1EDC655B119E118302674ABD7D84DACED31CA7555EFEA38630
36A42A3B6E915F562C999DD49FE5D9B5063789DDDB66696771EDD533333BB57A
5D6AC1A9E3> |-
/P <1C60D8A8C9B65DE708408E897D8681FFF528127AC4B20DABDE3694037FF5
C7CFF0F66599746818E44A88AE051EAA2ECC64A7F63066296DF5B94E5374A791
01894F634254EBF61BB4676A0F5F95AD513AF7507835F91BBF2F6DB05C191360
2214DC0C07048AC9F398A5400FC635BC3D7BE839FD2C9EAE0EFA08945ECA8DA2
3D80132909A7B4597A38120CAB750515AE457C3E49AB6D8454> |-
/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A1
63CFC67672A34CC74B0AEAADF24229DF1CCAA1488AE3E348FE2ACD572EA487EC
9D77FBB0710AB421B03DD5B8AE5519B5C269E9648E819E7ECE806EEF16A6618D
07D9AAB350E57F26F5259E8FCF9E5C2D96BBEAD16502F9E7819E854042DDB2BC
674C39681CC2E5224219582BC7B59BBAEF869C9DF91CA7770A97BAD53C3C3A99
175BA8F0A5744B5969D3BC15831A95918F7C707E41F5D87B8DB2D57378BC9C29
7DAE69E4BF438246E63F565B22D86CBE28DEF748262FB9FF82A88935451D6280
A28F1AD964E6E476D5779321E42D3A86BE41122F1BED36C3DC47E1E01C225345
98D0431873197ABE1C8EC03B4011E4B26D249635BDBABB8E5B69BE07AFA65F88
EAF6> |-
/h <1C60D8A8C9B790A83D946A52D133532E9DDB252C41638FA043533341FF45
F4E0EEA3BF171DE971DA044D93815FABEAC6A961DE24CD8980B97FCA250A2CD3
DBC1C9175E22BC18E41FEAAE3FDFFC1EC461872FCD8D617F792306109E6C32D9
EEF5544F9D280B7D28E77406A0CD8B488898A862DE88999A354709E3D3907517
0B03FDE60F1E3F7008331FFBCAD1B838829FBE76742914B50EBA96CF0A9BFB36
10334BBAB609B960E9922A4587A5710F25CDF35D8C915B99DCE5DB414BDFAE70
7D88DDA35DD290F04B> |-
/S <1C60D8A8C9B790A8C3E1550ACC8DA9C9FBD3A5CF2194CD2B8642D81A716B
D00E790683F96881FACDE1F9315D62E9690B60701D527468B87CDFB0F4764C55
97556AE6A1AC77EAC949F9287197658BC350D110E467DE690E505B49A0B78B79
E2357C1B06B49C46DBCFC093C8FD052BE36FB8FD34081A4086AA2F339D541A84
930A281511E0A17B9869F6AA55371F1C0D54B13DC306CE1AA830A9CC533AF6BD
85406DAA830F9B2385417AD4B282844721D0D07F3AC31F2E4FAB062DE1D98E9B
B1ADDC8425AA1837400BB1FE64042CEA44886B96F0827BA19AA957D2008F38EA
9B013399E5BDAC4F2A> |-
/T <1C60D8A8C9B6079F1E7C72A986CAA37AA7098C99AF0AF69B4A41FC4A68F1
E13FE7823CB14087D1A03D6BFDE96D0070A345145633BA7CEFA8D419E4B3D53F
3ADD4AFFBF58183F1DBEF117F5DA2182D1339AE0D68A7AE8CA1EE41AF8BD41A3
51EC8A2430F7755B61B26BC5EB1AA644C085DEE637125F5B22BE10C6D86DE87E
0F1819F7C2FBA63DE9C720513FB0A1601F05E184CBD6E137BC266718B83D2495> |-
/l <1C60D8A8C9B8574464F1B434E924E8E17F47A16A389514CB900F56482ADF
B78CE880D41A1EAC41DBDDDAD723AAD75825AFFB2E5AD2853D684AACA377F4CF
F61F8762E467D7432F03C259012AF7AA821CB502C120A1BA693F9CB4DA4BB1D3
2A> |-
/m <1C60D8A8C9B6B41CC7B459B6536767B373D430A0825AAF7F773A561A7086
85F0ADC4DCB9E0E589E1CAAE041E74610D0912668FFE67D85ABFB6E9711A1BAF
6F79493EB629ED4D3069526CA46405DD9F73AD135427553F5CDC8070A373FDB5
F5A7AD8D914FF454B75B35631947B95DC641889F912441897F121AE16882579B
CC53B16D47CA54C4908CBE037FBF67C528547181A184312131D4D65FF7959C28
CA395660C25E9C563755BC71DCFA28B59C3A13B5E81DB9FACCD1252B7053BB33
D50418E59EE521DC7525ADB81394AB30A35828C200015E3FE5BE852ED4AB6ACC
F3B9F483FFA6386BF5C3D4796E775B9756A63267B38CC586E602C79FEC3D829B
D73DEA28076EBF772DD2FA9C3C2744EA327CB7C4D34C562F1F21313655866C2A
7572FC9154DAD1B72C2E50CD60B58A8D1B86850C2CBABDC131A290C26EAFCCE4
803F5EE2ECB4CA746831B1> |-
/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164
F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02
A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598
A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-
/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A
0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF397
16A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB9
9C4AAA689F9E967FCE15709E3204C4D> |-
/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D
239BCB61DC78D83A8F223F832> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMK+CMR10 /Encoding get
dup 1 /A put
dup 2 /n put
dup 4 /o put
dup 6 /p put
dup 7 /E put
dup 8 /r put
dup 9 /F put
dup 10 /s put
dup 11 /G put
dup 14 /u put
dup 15 /I put
dup 19 /a put
dup 20 /x put
dup 22 /L put
dup 24 /c put
dup 26 /d put
dup 27 /N put
dup 28 /e put
dup 29 /O put
dup 31 /P put
dup 32 /g put
dup 33 /h put
dup 35 /S put
dup 36 /T put
dup 37 /l put
dup 39 /m put
dup 46 /parenleft put
dup 47 /parenright put
dup 50 /period put
pop
%ADOEndSubsetFont
/PERWMK+CMR10*1 
[/.notdef /A /n /.notdef /o /.notdef /p /E 
/r /F /s /G 2{/.notdef}rp /u /I 3{/.notdef}rp 
/a /x /.notdef /L /.notdef /c /.notdef /d 
/N /e /O /.notdef /P /g /h /.notdef 
/S /T /l /.notdef /m 6{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /period 205{/.notdef}rp]
PERWMK+CMR10 nf
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
154.32 22.3693 mo
(\033\023'\034\013\026\035\033\013\026\001$)
[7.44009 5.03911 8.27689 41.1636 7.79872 6.24458 7.79869 19.3255 7.79874 6.24457 6.60321 0 
]xsh
%ADOBeginSubsetFont: ZFNBAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWML+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/sigma <1C60D8A8C9B7E02ADD9A9645B6EFEFDAF8223441C504B97557ED1331
4FE544C9EC1A4406DB0721B939B9558B16716B0F0FF7B06C03D0B74C12F5C9EA
F2F3F5230C06C2BA0F17D29505064C824CF331A94AFFDE518E68EA269F3BD5D5
CAB13DA3DA4393C4E631DAFE8831AF656D23D2065E3B2DD1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWML+CMMI10 /Encoding get
dup 1 /sigma put
pop
%ADOEndSubsetFont
/PERWML+CMMI10*1 
[/.notdef /sigma 254{/.notdef}rp]
PERWML+CMMI10 nf
PERWML+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
333 22.3693 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
396.72 22.3693 mo
($#$#)
[7.20001 27.3643 7.20001 0 ]xsh
%ADOBeginSubsetFont: JLBBAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMM+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B77D5FE26A5467FC865D4E3D414F11170BA9D8CE367EDA267A
13B60897D15EE92DB138DA42AAC8717C4F656BDA31D5CE5829E80C5785EE880A
F87B0279DEEE86DAE914DA698DACD1EAA1ABE145473A2B37F2F7> |-
/x <1C60D8A8C9B7C3C99EDA83A925E84FF456FE3834DDAE2BEA479D281469EE
1F33B0F44BCE831370ABD11DFA002853B995547789B70AFA395AA699CC6474DE
22874A2423AF55562F9C7ACD4799A98DB36F2213E4EC023CE5C0499BF9793A37
8118EE2553BFC62C4B85AB898421E2219477E0BC36990868A2E591BFC5A440EE
66A6B3D9D30E544F147C88E4252C3F5A00A85FFB60E84B0F05F418C60C687A8B
898B4264E283CECA1B43B894276A1DFDC4ED0E1AEF17BEABBD95F5426A3F9DF8
8E0B918B47B107137FEB41639E19335FDF4734ACBEC71B2E2B5EFDA42E43A059
68892E4DFF44A59F4293A34D7A2652D877C7FF4672F6866DF45FD9814A5E35A6
327BBE83740473C906518AA103890A4E371CC0E3C4DAFC4B1A0AB5B80C326BF3
A78006EE0B2607FF2CB3ADAA1243CE49C21C69352FABCB6D67DED1D9D2E7AC29
E4C3418A2AEFDC5B> |-
/e <1C60D8A8C9B7A08673B8E4C5016740B9CC664A426F12588F8D424733F6BD
40DCD01B24ECA00FD6A515E55F17B9B88499014D2674E1A6343304528599E325
0A319A430A458C14DADF26B1BB4DC49CCE1152C3A434CE9E3BE42F001677F888
389928D48B1A2B8D18B30396D2D254C858AEBA6C771096986FB1FA> |-
/parenleft <1C60D8A8C9B77D5F989B950A07335B748C2E59E5D2D6BF1E6051
957DD97CEFF35302EE98FC4B787BCA44229E0EB5B1327789C7E84159A08D8DD6
8C92A07DE5F5A75D5A81EBAB8FA5D1E69836F3FC93F6E29FC5BFCC9DEA3989EC
8EA8AA> |-
/parenright <1C60D8A8C9B77D5F989B950A07335B748CB31A51BDF9FCF02A2
BBCACD13F22BC441A3FF8286B2AF4AFEB0BAC09CB8CFC19F55A315F3EDC1D3B4
CB4181963F3AF6C950ED14D564BDEFFFE139BE1E10473AE6A5D25F9A29D9AC22
23E09CC1DB99271> |-
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
369FC937E51FD440B01114006718C9CD9EDADE925291DDB3291CFBE83284B576
2DA660F3B8EE1736383DFDEEBA0BD582FD6608113CEA73> |-
/two <1C60D8A8C9B7E2CE5B2D2AF3C16D655586ADDFD255F342CC78E0CFD77C
BD9B63EF6E836EA2677FC1E3515560DC8E1709808740B3E922280CDDC6B1DE59
498D3F96D52EB7A68A65E121CBB4EE62A5F7C7620A42A7CFE5CDEB9DCEFA2914
61A983E5129317168388213985652593802B6BD46B323DAA41AA2361FFE1897E
F8609C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMM+CMR7 /Encoding get
dup 1 /t put
dup 2 /x put
dup 3 /e put
dup 4 /parenleft put
dup 5 /parenright put
dup 6 /one put
dup 7 /two put
pop
%ADOEndSubsetFont
/PERWMM+CMR7*1 
[/.notdef /t /x /e /parenleft /parenright /one /two 
248{/.notdef}rp]
PERWMM+CMR7 nf
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
444 23.8091 mo
(\003\002\001)
[3.59991 4.19971 0 ]xsh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
467.4 22.3693 mo
(\037\004\012\007\010\010\011%\016\024)
[6.60019 5.0401 7.07941 6.84027 3.96021 36.5999 6.47961 2.75958 5.5202 0 ]xsh
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
553.56 18.7693 mo
(\004)sh
%ADOBeginSubsetFont: JNNAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMN+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7D04D6EAC82F8236992FC7B075E79E13721E67606CC7CB1C1
341E499C16669F8E832C7BBF92CCCA25441F87E33D4C56566B335F7DB78148D0
11F90B6CBA7B8511ED65A515E66767EA6C6A2593BA18EA27C354755856993C63
64F03C4A44FD9A4EF4B4324F4E9AB0E8015ADA73B8E2196307A0372CDF806D86
713115049ECE43E5C5D5E090805805E0F6406B60A6790A6B4F1D2F7EC7C37DAC
CAD6030DF5A398C693824186C48D669E310E41570649D967796D60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMN+CMMI7 /Encoding get
dup 1 /a put
pop
%ADOEndSubsetFont
/PERWMN+CMMI7*1 
[/.notdef /a 254{/.notdef}rp]
PERWMN+CMMI7 nf
PERWMN+CMMI7*1 [6.97385 0 0 -6.97385 0 0 ]msf
556.68 18.7693 mo
(\001)sh
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
561 18.7693 mo
(\005)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
598.08 22.3693 mo
(\017\002\032\034\024)
[3.59943 5.52222 5.52222 4.43634 0 ]xsh
218.16 35.5693 mo
(.\032\034 2/.\032\034 2/.\032\034 2/.\032\034 2/.\006!\030')
[3.8396 5.52023 4.44035 5.0401 2.75958 18.8403 3.8396 5.52023 4.44034 5.0401 2.75958 43.0805 
3.8396 5.5202 4.44037 5.0401 2.75958 126.36 3.8396 5.52023 4.44034 5.0401 2.75958 19.7997 
3.8396 5.52026 8.87958 4.44037 0 ]xsh
%ADOBeginSubsetFont: RFJBAA+CMSY7 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMO+CMSY7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B5822B08BA53C85EBA70EA458D9E59FCB071DA29DC5EA3
F203E8C9DA6EC8D2806B681223A2D7F9FF329F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMO+CMSY7 /Encoding get
dup 1 /minus put
pop
%ADOEndSubsetFont
/PERWMO+CMSY7*1 
[/.notdef /minus 254{/.notdef}rp]
PERWMO+CMSY7 nf
PERWMO+CMSY7*1 [6.97385 0 0 -6.97385 0 0 ]msf
543.6 31.9693 mo
(\001)sh
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
549.84 31.9693 mo
(\007)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
555.96 35.5693 mo
(\012)sh
PERWMO+CMSY7*1 [6.97385 0 0 -6.97385 0 0 ]msf
559.92 31.9693 mo
(\001)sh
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
566.16 31.9693 mo
(\006)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
570.6 35.5693 mo
(/)sh
123.588 42.4213 mo
640.068 42.4213 li
640.068 42.9013 li
123.588 42.9013 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 749.579 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: GONAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMK+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B6E3FADD48816EB8424E8F57A41D8613F7E968C9BB1B02E143
FC779521473E85AC3FDDB70230FD5AC8A799CC105B900902F681C26F2CF5169E
1D28FA4F6B0C7A570A1EAEDD1568F3815B4073CFD3901DA4DC138D832EA95377
6BC457AFDFF8491C649A0DB6870897DD41335AD9B9589634784946F43BCBBD7A
4581826E0D3C585AA4EFCF9736D89BF657946580134CB715D83D4A12A5D3C2E5
65E9CF92286FED111732FC93E1CA96F815A6B51DE39654A3FF21> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
25DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668
D97ECF27E58978E82B8932F2635747B0D240AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMK+CMR10 /Encoding get
dup 38 /V put
dup 52 /one put
pop
%ADOEndSubsetFont
/PERWMK+CMR10*1 
[/.notdef /A /n /.notdef /o /.notdef /p /E 
/r /F /s /G 2{/.notdef}rp /u /I 3{/.notdef}rp 
/a /x /.notdef /L /.notdef /c /.notdef /d 
/N /e /O /.notdef /P /g /h /.notdef 
/S /T /l /V /m 6{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /period /.notdef /one 203{/.notdef}rp]
PERWMK+CMR10 nf
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
360.48 58.8493 mo
(\007)sh
%ADOBeginSubsetFont: OUOBAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMP+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/greater <1C60D8A8C9B6FC2D0B7AF226145EBD4699910182AA44364E214EF1
81E4EF11F09B1CDF639298183041F70F09788525763201782FEB13E6B9A6E060
7F78254829620D4125185763FF66F3C7816DADE29DCA0BAAC1CEA7127EAA9D5F
75E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMP+CMMI10 /Encoding get
dup 1 /greater put
pop
%ADOEndSubsetFont
/PERWMP+CMMI10*1 
[/.notdef /greater 254{/.notdef}rp]
PERWMP+CMMI10 nf
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
367.32 58.8493 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
375.12 58.8493 mo
(4\013\034&)
[8.1604 7.8017 4.44434 0 ]xsh
123.588 62.7013 mo
640.068 62.7013 li
640.068 63.1813 li
123.588 63.1813 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 729.299 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: GONAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMK+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/X <1C60D8A8C9B6E3FA234780EB1A04777EE97AC072908A4C26FBF31AFD564A
70F486BD167B7C0CFB0631EEF6B9BD977B0B12411BD26D635B514678995EC8C7
2D8BB4D52837EE2DF126B77C29843E3E38DA5C62655C945DAD9E4A17546133B3
380DE4BE2E61669DE10F8A9953C2903B268339ECA020DD0102AAB3B18B909FAD
3BA1A7B0C548F64746E9B5BC431BB25558B15180F60DEC22DE80AFA6A73E1FB6
54D747D7F46391BDD1C584A4D74355B6048BA53C36B33754B84AC142CD249C27
82305C6F3E93089C129E35ABC3B36373A727AF7E201B4FCB8E8ED24237091E2A
2861A59A5BC7B5A282713C4DF05CEBFA94AEF12A4E0751FF0249D4B544344447
2067C0A89FD48C030D81282E845427AA18DEA4F86D6860B0CCFBA4CE3362DB40
74AEB05180B83E3EF6B16801C3395AF4A152B3A01D3091B2EF13B441E993E74B
B1CFA121A79484D5C6C1> |-
/C <1C60D8A8C9B6079FE0EE62D79560027BBBCB170A7709037203D620100C78
000AFC53792FD4192A63CFDE4C7CCFBBF640912DE1EA497F0D0E9CACF7B55459
0931F67EC30C725B283FF8701F318F6A51E9DAFF6E43D2B77ABC7C9D046D0346
C0BC1B195971779D6643699369A8474D056C5265E53617DA697597540B11F476
0D558D2A79BC5EEE54EC8A8FB0679FBAC9400141E54057CB9E273F1EF671A537
9A4BB4B27EBB1E02C7> |-
/t <1C60D8A8C9B737EC5C828C415A21EF65A8DCE4AB75C4F804FD2F74AAED03
32CF1075799E326C4CB510197DA3A668B8EFF3F2CAC89EFC9F1E24EFCBB6E4F7
D58562BB90C45FF297D6656314FD65E690525FFF895AC8C24B58CDA801> |-
/y <1C60D8A8C9B78C66EF659E90818F97757EE825CF655AFC48477B2EBD1F44
99DC02D3D00D2C79F15A6A14FA0E2836DE647DF694EA1CBE5D7DC52383058018
A4A5582F22DA6D7CA5C65B837F7ACE7A37D8295111416CC9542C83315A00DCC5
8E29D7A527B2702A3D42A1DF4479D981119205E9B3AA4589ADB8E455F287AEE9
7EF0B05E9F424581B6FBD77BBF4A2F94CB7C67A1D393F0F92A930746CD86812D
0F3B42F48F3482F4A9EA27C315DF77B6F7CF19EE636DE6A48B0C906553399551
18E2A4E2CE041041FB27A226D9B9C797FB178764482B1E4FE17D6316683F2694
7316> |-
/M <1C60D8A8C9B5BA43AA8567ED4BE2D7FEDF84AA8E4D7C55A5BC42BD34F327
7CCBB834BA74F53382342B0BA2F117A667CBDAF558D8C8C6BB52DFE7A951AC7F
90B65CE73200D87C871483BCDABA867EF53CF58D923A6435A91070A9B8C57E2A
C8D8757C5081292709B14AABF10DF398DAFB85ADC1EBF2FD6188FF6384A9B0EC
88ED9C3C67FD1369FE1E51586F85AE8474F281CA47693B25D9154D6F07941252
F00CFCC0ABAA961F75FE6F08A5C67C2DA703A2BABBD58AEB6A91D6EEBE962740
43928EF3E9FBCB3DB234E95B1AF126B5BCE1E952BBBFAD047E0EA18D4396EBF2
025C72> |-
/W <1C60D8A8C9B505563364AC8BE8AB65E15C6C08AD458A3C49B32AF7A6889C
E67A7C3A7AE930FDF331D78AF6B2774B2E2F9165802F51899041EFBD3924C43E
D76A472FF8E62DD42BB26872119346C8E5FAE87DF4A5B6404CEC1023A1889FE1
14BA5E56D8DAB21B203F5E6D874C0E17030C65A10469C5F86A53A7D1CFDBCD0E
6B94604F94EF6BECF776BD9FD84BFC7AF2D1AA08788921B6CE8FD734B2E9372A
CA3C7D976E4DF8C6EED1CE088EB43DC42B2D6388D9B8E9E4C6FA2D7E84106976
063DE8EEDEDD5065F70DF6158531A23BF77B8F77A74E19614095CB2049840CA4
D0D45F1041ABD9861325F1156E78D91D6A706606395E26954346A8584D3C7D06
B32B91751B6AC28A5309BAC9B774A4A1514E73B9AA13764701722D129040EC> |-
/five <1C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13
CEDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9
B18ADEA5D4AF0261ABF060D3E283C7B3B5EB39FF499721FD51203AE59E3BEA25
7DFD3E472FEF67221488EC8D1F355E2FAD057CA44A8B4BAD6C6C719C164907CB
F9A6CC770DB0C7E58A37D2385E23F576BCFF94FFBFD8ADD4C5E6C32CD83ACEB7
7472D00FE1A4DC66393A99AC6BBD252B04C98B710149EA42B66ACE89D4FC4393
F3A09165DF477ABCB0E8A8DB21E4278CA219EBCC9B067F95E336B85E37D444AD
601D63D5ECEDC6A300696D98ABBC6ACC6E54D428BA49C3B1F> |-
/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273
E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0F
F8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3
B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B
5DC520FCB2B0B7183A59B91F9C6B76BCB8A8CE135881FEEEB2BD853CC29FB7FD
F436E095CF25C0CF3D1030E991D37D2BB2A05DD251695665BEB980DCF70EB0EF
ACB10E78F2D22C879E92110E4963EE6051EA84F4D334> |-
/seven <1C60D8A8C9B7A73D3B2C65B72E385362D3FF7D42FC1474C3A39537FC
E1B11D49C7F4AB33C92C477E32DCC2F1BD151153AF4EE29C83442C1DFE7C2987
EA59B8FDB804F00FC474C14A4DFC5A3D044493631292AC23CA9773EED32B6950
E181E1AF2402423A225C4B964BA7C80C0A352DE0DDD502> |-
/eight <1C60D8A8C9B7A73D3B2B97F1414E4E14F801A059892814FA42E4E2C8
0EFDA659D9BB77F349463F4A00D8ED33975855544E68ADA715C46B48E5214EC1
478071E2CA54580909701967B928DD6D384659775DC9744471AF4209ABE86CCF
54E84B03EB8981900A33E230A5E176029A4F3431D5460DA2A76659C526F48B26
52E37466C39C5889089BE6A19F3137FC6D1B485B848C27C668BF6C2B18756DC9
55F5DB5ABF7A74FD3DEC5789AB27D98224E42837> |-
/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC8
55A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E
982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B60
58F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F08
89C3AE9CB13C1ACCD104A4ADC6B007505E3B778FEDE19DEF83A3068F5B724ADA
3C344D842CC2CBF224CC820F9BF9DFC7E3B557C2AF89D9733BA75FFB6FA3D5E0
9792EE955B766D3FBD4F37E75E41F5A464FD3C1DC7611C4A6> |-
/hyphen <1C60D8A8C9B81F2C3AF48BE1F128682CB71E9BBC932714B7AB24E23
905FE> |-
/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C1
2484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D
1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42
892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18
232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-
/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A07BD51
606BCA866C4BD24CA34E86B9CA5A529B664F3EEDB6B4AF8A2B994DB57B49473E
162231CB943675FE63E9B92B8AEBB62FB22456EC4173C66EF6C2F34FFEC22ACA
E77FFFAAD70F3754CADC0D2CF63CB6D286D930AEA5A613E5AB9CB004BEAEBADD
D070EDAF4FF25FDB6421F540D58D2C7A3FC40290CBCF831BE1B89B7F> |-
/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BA
AE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA539
2FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EF
EEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782E
DC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE
429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F1
6212D1503559B7B1637726D82590655B813B5B489A6AB087D0B93F61541C2082
9B36C95E4A39F5BDDBA400> |-
/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065FCDD01CF53F5
4AF89DAF22339F0A467CEB54960C4097888AD7CBC676C4076733D124E7B4C79B
6D0E020E27E56B7A34848B450E2A23F2DF3103BCB5E75D289FAF3FD67A12C99B
2EB0A8390A7DAB0DD8B7BFBE34B66044D4D46D3CB580B3DAECD8E50CD2549B45
50A6A6B131A61C4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMK+CMR10 /Encoding get
dup 3 /X put
dup 5 /C put
dup 12 /t put
dup 23 /y put
dup 25 /M put
dup 40 /W put
dup 41 /five put
dup 42 /six put
dup 43 /seven put
dup 44 /eight put
dup 45 /nine put
dup 49 /hyphen put
dup 51 /zero put
dup 54 /two put
dup 55 /three put
dup 56 /four put
pop
%ADOEndSubsetFont
/PERWMK+CMR10*1 
[/.notdef /A /n /X /o /C /p /E 
/r /F /s /G /t /.notdef /u /I 
3{/.notdef}rp /a /x /.notdef /L /y /c /M 
/d /N /e /O /.notdef /P /g /h 
/.notdef /S /T /l /V /m /W /five 
/six /seven /eight /nine /parenleft /parenright /.notdef /hyphen 
/period /zero /one /.notdef /two /three /four 199{/.notdef}rp]
PERWMK+CMR10 nf
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
129.48 72.4093 mo
(#\031\0057362*,1882,44)
[5.52023 9.1198 73.6797 5.0401 5.04012 5.0401 2.75958 5.0401 18.6002 3.36035 5.0401 5.0401 
2.75958 5.0401 16.6805 0 ]xsh
%ADOBeginSubsetFont: OUOBAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMP+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D
239BCB61DC78D83A8F223F832> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMP+CMMI10 /Encoding get
dup 2 /period put
pop
%ADOEndSubsetFont
/PERWMP+CMMI10*1 
[/.notdef /greater /period 253{/.notdef}rp]
PERWMP+CMMI10 nf
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.28 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.04 72.4093 mo
(+\))
[5.0401 0 ]xsh
%ADOBeginSubsetFont: ORHBAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMQ+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plusminus <1C60D8A8C9B6FC2DE467850E6669FB2EE08B9722677EFFB5F1ED
CCD2DBBF2945B21E2BDA71CBDD2C34FCEB465210DA319C199F4E294CE83F5620
E3775B22354CF82AD94B736BC60AF880D3E09EA398ABE95EC75C1C24F11BE684
D407F4ABE9772BAFA377A03770F01112CBCAA3A7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMQ+CMSY10 /Encoding get
dup 1 /plusminus put
pop
%ADOEndSubsetFont
/PERWMQ+CMSY10*1 
[/.notdef /plusminus 254{/.notdef}rp]
PERWMQ+CMSY10 nf
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.16 72.4093 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.12 72.4093 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.16 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.92 72.4093 mo
(3+)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.04 72.4093 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357 72.4093 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.04 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.8 72.4093 mo
(36-82,*+2832467)
[5.0401 31.7997 5.0401 5.0401 2.75958 23.1602 5.0401 5.0401 2.75958 32.52 5.04013 2.75955 
5.0401 41.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.92 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.68 72.4093 mo
(7)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.76 72.4093 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 72.4093 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.76 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 72.4093 mo
(86)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.241 72.4093 mo
(84)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.36 72.4093 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 72.4093 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.36 72.4093 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.121 72.4093 mo
(4+)
[5.0401 0 ]xsh
129.481 85.4894 mo
(\026\031\0056+-2431762*44)
[6.23961 9.1198 72.9604 5.0401 5.0401 5.0401 2.75958 5.0401 18.6003 3.36032 5.04013 5.0401 
2.75958 5.0401 16.6804 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.041 85.4894 mo
(+8)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 85.4894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 85.4894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 85.4894 mo
(3\))
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.041 85.4894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.001 85.4894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 85.4894 mo
(47443427,*32\)323\)4\))
[5.0401 21.8401 5.0401 5.0401 5.0401 5.0401 2.75958 18.1201 5.0401 5.0401 5.0401 2.75958 
32.4005 5.0401 2.75958 5.0401 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.921 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 85.4894 mo
(\))sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 85.4894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 85.4894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 85.4894 mo
(*6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.241 85.4894 mo
(8,)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 85.4894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 85.4894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 85.4894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.121 85.4894 mo
(3*)
[5.0401 0 ]xsh
129.481 98.6894 mo
(\017\0058874,-23\)72383)
[3.60042 7.20001 5.0401 5.0401 67.4401 5.0401 5.0401 5.0401 2.75958 5.0401 26.8802 5.0401 
2.75958 5.0401 16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.042 98.6894 mo
(7*)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 98.6894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.122 98.6894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.922 98.6894 mo
(34)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.042 98.6894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.002 98.6894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.042 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.802 98.6894 mo
(3843+4-2,\)43283234*8)
[5.0401 16.9205 5.0401 5.0401 5.0401 5.0401 5.0401 2.75958 18.0005 5.0401 5.0401 5.0401 
2.75958 32.4005 5.0401 2.75958 5.0401 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.922 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.682 98.6894 mo
(,)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.762 98.6894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.722 98.6894 mo
(4)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.762 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.522 98.6894 mo
(66)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.482 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.242 98.6894 mo
(67)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.362 98.6894 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.322 98.6894 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.362 98.6894 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.122 98.6894 mo
(36)
[5.0401 0 ]xsh
129.481 111.889 mo
(&\034%\023\0036*7278172443)
[6.60025 4.44035 2.75958 8.4005 66.12 5.0401 5.0401 5.0401 2.75958 5.0401 23.5198 3.36032 
5.0401 2.75958 5.0401 76.5599 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 111.889 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 111.889 mo
(,,)
[5.0401 0 ]xsh
129.481 124.969 mo
(\005\034\002\014\023\010\016\012\00173-2\)64-286)
[7.2 4.44035 5.28012 3.83961 5.0401 3.96021 5.52023 7.19997 45.8401 5.0401 5.0401 5.0401 
2.75958 5.0401 21.9597 5.0401 5.0401 2.75958 5.0401 0 ]xsh
%ADOBeginSubsetFont: VULAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMR+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/similar <1C60D8A8C9B6FC2D989507181C728F35D6907D6911DF886CED2CBF
A4D7A1ECDD6D7D71EC7CC52F8F82E266C6915C016F352BA997C30BE7E05C9187
D4432E6AC240104D0D5C337395CCB28D2427261DC733493EA1281A1C34D5C1F8
403A690E9FF11D828D7E9FD78AC07A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMR+CMSY10 /Encoding get
dup 2 /similar put
pop
%ADOEndSubsetFont
/PERWMR+CMSY10*1 
[2{/.notdef}rp /similar 253{/.notdef}rp]
PERWMR+CMSY10 nf
PERWMR+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
354.241 124.969 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.802 124.969 mo
(43)
[5.0401 0 ]xsh
129.482 138.169 mo
(\(6,*2\)31326+3)
[10.1997 5.0401 83.0396 5.0401 2.75958 5.0401 23.6404 3.36032 5.0401 2.75958 5.0401 16.8 
0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.042 138.169 mo
(87)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 138.169 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.122 138.169 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.922 138.169 mo
(36)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.042 138.169 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.002 138.169 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.042 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.802 138.169 mo
(3747682,4++283234\),)
[5.0401 21.8401 5.0401 5.0401 5.0401 5.0401 2.75958 18.1201 5.0401 5.0401 5.0401 2.75958 
32.4005 5.04013 2.75955 5.04013 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.922 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.682 138.169 mo
(3)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.762 138.169 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.722 138.169 mo
(4)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.762 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.522 138.169 mo
(,6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.482 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.242 138.169 mo
(*7)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.362 138.169 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.322 138.169 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.362 138.169 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.122 138.169 mo
(37)
[5.0401 0 ]xsh
129.481 151.25 mo
(\(73,2*4132633)
[10.1997 5.0401 83.0396 5.0401 2.75958 5.0401 23.6404 3.36032 5.0401 2.75958 5.0401 16.8 
0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.041 151.25 mo
(7*)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 151.25 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 151.25 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 151.25 mo
(36)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.041 151.25 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.001 151.25 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.802 151.25 mo
(368*\)28+727323673)
[5.0401 26.8802 5.0401 5.0401 5.0401 2.75958 23.0406 5.0401 5.0401 2.75958 32.5201 5.04013 
2.75955 5.04013 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.921 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.682 151.25 mo
(+)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.762 151.25 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.722 151.25 mo
(4)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.762 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.522 151.25 mo
(*6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.482 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.242 151.25 mo
(\)-)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.362 151.25 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.322 151.25 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.362 151.25 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.122 151.25 mo
(38)
[5.0401 0 ]xsh
129.481 164.45 mo
(\(88782*-1327,3)
[10.1997 5.0401 78.1201 5.0401 5.0401 2.75958 5.0401 23.5198 3.36032 5.0401 2.75958 5.0401 
16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.041 164.45 mo
(7*)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 164.45 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 164.45 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 164.45 mo
(34)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.041 164.45 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.001 164.45 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 164.45 mo
(364-372764+2+3234+7)
[5.0401 21.8401 5.0401 5.0401 5.0401 5.0401 2.75958 18.1201 5.0401 5.0401 5.0401 2.75958 
32.4005 5.04013 2.75955 5.04013 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.921 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 164.45 mo
(*)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 164.45 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.722 164.45 mo
(4)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 164.45 mo
(,6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.242 164.45 mo
(*,)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 164.45 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 164.45 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 164.45 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.122 164.45 mo
(36)
[5.0401 0 ]xsh
129.481 177.65 mo
(\(\)4\0058-2471328\)3)
[10.1997 5.0401 5.0401 73.0799 5.0401 5.04012 2.75957 5.04012 23.5198 3.36035 5.0401 2.75958 
5.0401 16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.28 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.041 177.65 mo
(6,)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 177.65 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 177.65 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 177.65 mo
(36)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.041 177.65 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.001 177.65 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 177.65 mo
(3\)4,4-2\)44\)2+32347-)
[5.0401 21.8401 5.0401 5.0401 5.0401 5.0401 2.75958 18.1201 5.0401 5.0401 5.0401 2.75958 
32.4005 5.0401 2.75958 5.0401 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.921 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 177.65 mo
(7)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 177.65 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 177.65 mo
(4)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 177.65 mo
(76)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.241 177.65 mo
(7\))
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 177.65 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 177.65 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 177.65 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.121 177.65 mo
(37)
[5.0401 0 ]xsh
129.48 190.73 mo
(\005\027 \002\016\012\026\004\004\006+82661,28*4)
[7.2 5.28014 5.0401 5.28012 5.52022 7.19998 6.23959 5.28021 5.0401 41.2801 5.0401 5.0401 
2.75958 5.0401 23.5198 3.36032 5.0401 2.75958 5.0401 16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.28 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.04 190.73 mo
(+6)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.16 190.73 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 190.73 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.16 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 190.73 mo
(3\))
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.04 190.73 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357 190.73 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.04 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 190.73 mo
(3+7\)*2\)7\)*2\)323*44)
[5.0401 26.8802 5.0401 5.0401 5.0401 2.75958 18.1201 5.0401 5.0401 5.0401 2.75958 32.4005 
5.0401 2.75958 5.0401 36 5.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.92 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 190.73 mo
(4)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 190.73 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 190.73 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 190.73 mo
(+6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.241 190.73 mo
(\)7)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 190.73 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 190.73 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 190.73 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.121 190.73 mo
(44)
[5.0401 0 ]xsh
123.588 201.061 mo
640.068 201.061 li
640.068 201.541 li
123.588 201.541 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 590.939 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.96 215.329 mo
(\007)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.8 215.329 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
372.6 215.329 mo
(43\013\034&)
[5.0401 8.15842 7.79971 4.44232 0 ]xsh
123.588 222.661 mo
640.068 222.661 li
640.068 223.141 li
123.588 223.141 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 569.339 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: GONAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMK+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6E3FA234780E58B87D2EA5F590A170732E8342AECC9351661
21E62A1070A4510D098032CE86B0487DD79307BBCAC2344B3292DE9A2D8082B8
628F7C6E230EE648567F4904925AA4070E97FCB3EA4C73FA2E3142B18F75EA0E
F5F062D038BAE03BBCF96552C8DD6B5D4B8747E5B552469E1B25986782E0B55D
908AFB4A898DB9902CAE08C84B79FD04167BDD5A9E66D88F539A05377BA988B4
9C7EBFDFA962B967B5AE9DAE2C682A6E00F2705C6A21219B2987EF858D011EED
AA259CB8B502CDC00C7A32E14DD38C7C48E01FF854BF1DF45E706BF71F42F777
A381F06D6C9B4C9EFC6AED73572FAEEB4318476678433B1ED0A51B6532A16AF3
C291E604AD4889551281D976188DBCCE5E87B2250FDAB6DEAB32EBD03994B249
89D9> |-
/J <1C60D8A8C9B7BA8F97139BE3AED72E8C8460038D36000B23539DE66827A7
59AD49EF0BCE2931A11A77BF4584D52C32D31FC2A37C3C7E9CD4A9D94F4A72B9
F566DE66819BB0F2061230AE2263EF18395C3CB084B71074E7A956AC3ED27995
AED6CCC0BECC7D87BEA545D56260E276C657D6EA635C2AE7F33B6D22D208A41C
FC0A830A8DA5776D77F309F589B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMK+CMR10 /Encoding get
dup 13 /H put
dup 17 /J put
pop
%ADOEndSubsetFont
/PERWMK+CMR10*1 
[/.notdef /A /n /X /o /C /p /E 
/r /F /s /G /t /H /u /I 
/.notdef /J /.notdef /a /x /.notdef /L /y 
/c /M /d /N /e /O /.notdef /P 
/g /h /.notdef /S /T /l /V /m 
/W /five /six /seven /eight /nine /parenleft /parenright 
/.notdef /hyphen /period /zero /one /.notdef /two /three 
/four 199{/.notdef}rp]
PERWMK+CMR10 nf
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
129.48 236.809 mo
(\031#\0154\))
[9.1198 5.52322 9.23935 5.04507 0 ]xsh
%ADOBeginSubsetFont: VULAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMR+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B6FC2D98F64FA8A84856380510A8B89CD4DE936C2002F9
CA66334C70459EFC1D8016D52F4ACC8D584A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMR+CMSY10 /Encoding get
dup 1 /minus put
pop
%ADOEndSubsetFont
/PERWMR+CMSY10*1 
[/.notdef /minus /similar 253{/.notdef}rp]
PERWMR+CMSY10 nf
PERWMR+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
163.44 236.809 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
171.24 236.809 mo
(\)676327,142663)
[5.0401 41.5203 5.0401 5.0401 5.0401 2.75958 5.0401 23.5198 3.36035 5.0401 2.75958 5.0401 
16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.28 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.04 236.809 mo
(63)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.16 236.809 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.12 236.809 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.16 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.92 236.809 mo
(38)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.04 236.809 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357 236.809 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.04 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 236.809 mo
(37+*26*2\)32373)
[5.0401 31.7997 5.0401 5.0401 2.75958 28.2003 5.0401 2.75958 32.5201 5.0401 2.75958 5.0401 
41.0401 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.92 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 236.809 mo
(*)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 236.809 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 236.809 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 236.809 mo
(+6)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.241 236.809 mo
(6+)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 236.809 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 236.809 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 236.809 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.121 236.809 mo
(+7)
[5.0401 0 ]xsh
129.481 250.009 mo
(\015\007##\0214,6\))
[7.44009 6.84227 5.51724 7.20091 5.15866 5.03911 5.03911 5.03909 0 ]xsh
PERWMR+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
181.801 250.009 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
189.601 250.009 mo
(47+4+2\)*1328*3)
[5.0401 5.0401 23.1602 5.0401 5.04008 2.75958 5.0401 23.5198 3.36029 5.04013 2.75955 5.04013 
16.8 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
302.281 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
305.041 250.009 mo
(*\))
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
317.161 250.009 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
327.121 250.009 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
332.161 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
334.921 250.009 mo
(37)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
347.041 250.009 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
357.001 250.009 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
362.041 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
364.801 250.009 mo
(34,72*\)\)2-323\)4)
[5.0401 31.7997 5.0401 5.0401 2.75958 23.1602 5.0401 5.0401 2.75958 32.52 5.04013 2.75955 
5.0401 41.0402 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
541.921 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
544.681 250.009 mo
(,)sh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
551.761 250.009 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
561.721 250.009 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
566.761 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
569.521 250.009 mo
(64)
[16.9196 0 ]xsh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
591.481 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
594.242 250.009 mo
(+8)
[5.0401 0 ]xsh
PERWMQ+CMSY10*1 [9.96264 0 0 -9.96264 0 0 ]msf
606.361 250.009 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
616.321 250.009 mo
(3)sh
PERWMP+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
621.361 250.009 mo
(\002)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
624.122 250.009 mo
(4-)
[5.0401 0 ]xsh
123.588 256.861 mo
640.068 256.861 li
640.068 257.341 li
123.588 257.341 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 119.959 792 ]ct
[516.48 0 0 -.48 3.629 535.139 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
img
grestore
np
f
0 0 0 1 cmyk
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
133.56 278.569 mo
(\004)sh
PERWMN+CMMI7*1 [6.97385 0 0 -6.97385 0 0 ]msf
136.68 278.569 mo
(\001)sh
PERWMM+CMR7*1 [6.97385 0 0 -6.97385 0 0 ]msf
141 278.569 mo
(\005)sh
%ADOBeginSubsetFont: GONAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PERWMK+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B78C669403575833C8C1B14674B390D764957989B7FCA39046
F88EAC215F3348F64657FA41BBBD2D5465C3FAEC5C4992D77A70D6D0FF5B9FE8
4D58B8A01F974B26A648270BCBC3DA08E1FB6DCB4BD59931217BAC36EE05C15D
6C9332DAEE553F44B623DA84A3E35E45703CEA683F59CB5D7DC58019327FAA46
90D7E0848C4054F367D2C3BF6371C99CA6751F50C10017AA2754321B985E8B60
B10B9F082539BC1A53136644081D5FD9AE168FC766A25A8946C2> |-
/w <1C60D8A8C9B6079F1534F6C9E4A028DF1A3B0F45C5ED9660DAC93A0D8C3F
14212FFFC33A5BF9F9DD1C33FCCFCA8E96FE6463AF5069DBFBDDA36D99F88520
652F25FDAFA9A8FF2873E3FDAD8A56EC3357F44ECB370CA4BFB8352215DEAFC2
2A0DFA018C56F834AADBF74CAA36536863C75BD9D7A1CEF77767FBD18809BFE6
294ECFE5D3634C7FCBBBF987220663EF315339F3D9AF5AA5B0F66F6EA972A5EE
22BB54794478F89EC6375B180C36468ADC7E7CAF0A17CB4A0ECCE19DAEAC46AD
A738E6EE5AB37B1A9CDCACA6A56A4B556E8FC78C8021B1E08F770EC97987838B
DF3A71E528C5695396142E79124F182E83C76D32BCA38AD1CB77748E00880A04
9F1E82A6C5E7A5A7404A74F28E09F8202A196F8E9F69EAA58A4A3555B55F> |-
/b <1C60D8A8C9B790A83D9E7A6001AC854EF8B943E743E91B99DA29586301CD
D5839823233D99B1C577C1F4DFF0EA0F32BC2086F2707A7DD20AF9B67CEAF2A8
142C0184903C062BCDA3F619B0D53D20F97863BA7527C41ABC984D83E7927537
7BA320AFBB48F48B2D10088BC89EBB9C01D05CB682732B7056131A0BF4F223A4
5FB196C15FF8C20088CC8B4C909F5F0D72D1839A24540D889C90DD68E933DDAD
60B1B6BFBEF9B96EA41D08123BC10ECBE3BFA295FF397E499C14DA43850D7296
20> |-
/f <1C60D8A8C9B83BB81FA130945C39F84E5B6E4A6C9F65F126BAA27979D5DD
24D841AF174619487B50FE2700B1E5283B920CF0C36EBD127A2FB193DC3CC442
CA2E2038702792712AC88F8A95F0FA297EC3B143EBC57B59693CDD3FD2B58E1A
0E615D44B1BC286B802CB88D50954B5E67313CC26D2733BD799245E69ACF97F2
A9BABCDB06A9D69EA77A4D41E95E2A8D3382998D0B0648C54FDA3BC85D30> |-
/i <1C60D8A8C9B8574464F1B435BC57209FEB2C54026A3BBB707C1ACEEAD444
C0BCD7940801068D7665A567CBC52ABA43208AF37F075A1C65586B76611081AB
5310CF42CD496B0F8F59766AFDA0C4BF40BC709402C0DD0AB42B4F3987C50B56
17CF3B4859C86132A1A7E65B42225B2228E50B44DBFBE367ABD36EBF02ACAD4F
B895EE90259DCAEBCEFB9765574F> |-
/fi <1C60D8A8C9B790A83D946A52CDEF806B68BCA69D0F565BD47A313ACE64E
A4C51C4F7E2720AD6426622FF887A9B1CEFB163BC1E0E045B9CF4238406E1235
2EBBD9242E2C49AFC9D86CDEE482C0035CA1CA44CCBB1436642750A1E71B1CD2
88AC28B3D26A164143FCB2C92157FC4CD1F366676BE46E871DBBB1239C9614DC
38DD102B67124FC3D2C144C05DA896465C2DA06004C93D99A6D33F72F04F023B
41A55BAD349B063D76BBE78E5B60101B7FD0DF48C196A450BF7E868A35BEFE7F
5AEE46F6B98A5AEE642C67C9F421CFE1639B9D13BF5EC82D77CC20A4B04492D8
733D54EC758417FF41850C5076FB5C2875D5227FEF9897E31DFBBC49554A2544
AFB8F5D9BAF3452E7> |-
/emdash <1C60D8A8C9B5EE310D9C6BAED29BEE7ECAB2AF71B9AA7B5BCCDC151
47D37> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PERWMK+CMR10 /Encoding get
dup 16 /v put
dup 18 /w put
dup 21 /b put
dup 30 /f put
dup 34 /i put
dup 48 /fi put
dup 53 /emdash put
pop
%ADOEndSubsetFont
/PERWMK+CMR10*1 
[/.notdef /A /n /X /o /C /p /E 
/r /F /s /G /t /H /u /I 
/v /J /w /a /x /b /L /y 
/c /M /d /N /e /O /f /P 
/g /h /i /S /T /l /V /m 
/W /five /six /seven /eight /nine /parenleft /parenright 
/fi /hyphen /period /zero /one /emdash /two /three 
/four 199{/.notdef}rp]
PERWMK+CMR10 nf
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
144.6 282.169 mo
(\017\002\014\034 \010\023\014\034\032"\002\014!\0340\014\034\002\034\010 \027\010\023\002 \034.\034"\014!\034\0104\013\034&433\013\034&\004\01043\013\034&4)
[3.60042 5.28014 3.8396 4.44035 5.0401 3.96022 5.0401 3.8396 4.44035 8.63953 2.75958 8.87962 
3.8396 5.52023 7.79974 5.52023 7.20001 4.44034 5.52023 4.44035 3.96022 5.0401 8.51999 3.96021 
5.0401 5.52023 5.0401 7.55966 3.8396 4.44037 2.75958 3.8396 5.5202 4.44037 7.32062 8.27994 
7.79971 4.44034 10.7995 5.0401 5.04007 8.15942 7.79971 4.44034 10.7995 5.0401 7.20004 5.0401 
8.1604 7.79971 4.44034 10.7995 0 ]xsh
451.559 282.169 mo
(33\013\034&/2)
[5.0401 8.27795 7.79971 4.44235 7.4411 3.83463 0 ]xsh
133.56 314.689 mo
(\033\004\014\03425\001%%\012\004\016\010\030\034\012\022\034\010\0340\014\016\012"\002 \023\012\006\023\014"\023%'\004\032\034%\023\012\012\016'"\002 \023\016\002"\036\004\010')
[7.44009 5.0401 3.83961 4.44035 9.47937 14.1599 7.44011 2.75957 6.95984 3.96011 5.0401 5.52023 
3.96021 4.44037 4.44035 7.79973 6.95988 4.44035 3.96022 8.52007 5.52023 7.92029 5.5202 3.96014 
2.75958 5.5202 9.11981 9.11978 3.96011 5.52023 5.0401 3.8396 2.75958 5.0401 6.83926 8.27991 
5.28021 5.5202 4.44037 6.83926 5.04007 3.96014 3.96011 5.52023 8.27985 2.75958 5.52026 9.00024 
9.11981 5.5202 5.5202 2.75958 2.99969 5.0401 3.96021 0 ]xsh
458.28 314.689 mo
(\010\023\032"\023%%\027\012\027''\034\014\010"\030"\002\014\034\002\012"\014\027\032"\012\014\010"\025\016\014"\004\0022)
[3.96021 5.0401 5.52023 2.75958 5.0401 2.75958 2.75958 9.24026 3.96014 5.28012 8.27988 8.27985 
4.44037 3.8396 3.96021 2.75958 8.52008 2.75958 5.28009 3.83966 4.44031 5.52026 3.96008 2.75958 
3.59955 9.3598 5.5202 2.75958 3.96014 3.8396 3.96021 2.75958 5.5202 5.52026 3.8396 2.75958 
5.0401 5.5202 0 ]xsh
123.6 327.769 mo
(\013\026\035\033\023\002\032\013\026\001$\023\010\034\013\023%\023\030\014"\030%\004\002 "\014\016\032\034\023\002\032%\023\014"\014\016\032\034\004\036\014!\034\025\034\012\0140\014\034\024\014\034)
[7.79972 6.23959 7.79968 10.6799 5.0401 5.52023 8.76007 7.79971 6.23959 6.60025 10.4398 5.04012 
3.96022 7.56064 7.79973 5.04012 2.75957 5.04012 4.44034 3.83963 2.75955 7.68021 2.75958 5.0401 
5.52023 5.0401 2.75958 3.8396 5.52023 5.52023 7.68021 5.0401 5.5202 8.7601 2.75958 5.04007 
3.83963 2.75958 3.8396 5.52023 5.5202 7.68021 5.0401 6.23953 3.8396 5.52023 7.79974 5.76031 
4.44034 3.96011 7.08047 5.52023 7.19998 4.44034 5.28015 3.8396 0 ]xsh
442.8 327.769 mo
(\002\032\034\032\012\004\016\010\030\034\010\034\012\006\034\030\014"\020\034%\0272$!\0340\010\012\014\034\010\010\004\010\004\002)
[5.52023 5.52023 4.44034 8.76007 3.96011 5.0401 5.52023 3.96021 4.44037 7.55966 3.96021 4.44034 
3.96011 5.76031 4.44037 4.44037 3.8396 2.75958 5.04004 4.44037 2.75952 4.44031 7.07941 7.20001 
5.5202 7.68018 5.52026 3.96021 3.96014 7.07941 4.44037 3.96021 3.96021 5.04016 6.95996 5.04004 
0 ]xsh
PERWML+CMMI10*1 [9.96264 0 0 -9.96264 0 0 ]msf
633.96 327.769 mo
(\001)sh
PERWMK+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf
123.6 340.969 mo
("\012\012\014\023\014"\012\014"\030\023%\023\002\032\014!\034\012\034\030\004\002\032"\012\012\027\012\014\034'\023\014"\030.\012\034\034#\034\030\014"\004\002\)26/2\037\004\012\007\010)
[2.75958 7.44007 3.96011 3.83961 5.0401 3.8396 2.75958 3.96011 3.83961 2.75958 4.44035 5.0401 
6.11996 5.0401 5.52023 9.00018 3.8396 5.52023 8.03984 3.96013 4.44034 4.44037 5.0401 5.52023 
8.87961 2.75958 7.44009 3.96011 5.28012 3.96011 3.83963 4.44034 8.27988 5.0401 3.8396 2.75958 
7.92029 3.83963 3.96011 4.44034 7.92032 5.5202 4.44034 4.44037 3.8396 2.75958 5.0401 9.00015 
5.0401 2.75958 4.91956 3.8396 7.79968 6.60016 5.0401 7.3205 6.84027 0 ]xsh
417.48 340.969 mo
(\010"\012\014!\034\034\010\010\004\010\004\002\014!\034\006\004\012"\014"\004\002\004\036\014!\034\012\004\016\010\030\0342&\034%\023\003)
[7.20007 2.75958 7.44006 3.8396 5.52023 8.03986 4.44034 3.96021 3.96024 5.0401 7.20004 5.0401 
9.00018 3.8396 5.52023 7.92032 5.76031 5.0401 3.96014 2.75958 3.8396 2.75958 5.0401 9.00012 
5.04016 6.47961 3.8396 5.5202 8.03986 3.96014 5.0401 5.5202 3.96021 4.44037 4.44031 7.55963 
6.60022 4.44037 2.75958 8.52002 0 ]xsh
123.6 354.049 mo
(\023\002\032\014!\034\005\034\002\014\023\010\016\012\001\026\004\025\034\012\022\034\010\034\002\004\0140\014"\002\004\016\010\023\002\023%\027\012"\012\025\016\014\023\010\034"\002\030%\016\032\034\036)
[5.04009 5.52023 8.76007 3.83961 5.52022 7.79976 7.2 4.44035 5.28012 3.83961 5.0401 3.96021 
5.52023 7.19997 10.8005 6.23961 5.0401 5.75932 4.44037 7.19997 6.9599 4.44035 3.96021 7.56067 
5.52023 5.0401 7.19998 5.52023 7.20001 2.75958 8.87961 5.0401 5.52023 7.20004 5.0401 5.52023 
5.0401 2.75958 5.28012 3.96011 2.75958 7.07944 5.5202 5.52023 7.20001 5.04007 3.96024 7.68021 
2.75958 5.5202 4.44034 2.75958 5.52023 5.52023 7.79974 0 ]xsh
434.52 354.049 mo
(\004\010\030\004'\006%\034\014\034\002\034\012\0122)
[5.0401 7.20007 4.44034 5.0401 8.27988 5.52023 2.75958 4.44034 3.8396 4.44037 5.52023 4.44034 
3.96011 3.96014 0 ]xsh
grestore
grestore
grestore
pgrs
[
[/CSA [/0 ]]
] del_res
/PERWMR+CMSY10*1 uf
/PERWMR+CMSY10 uf
/VULAAA+CMSY10 uf
/PERWMQ+CMSY10*1 uf
/PERWMQ+CMSY10 uf
/ORHBAA+CMSY10 uf
/PERWMP+CMMI10*1 uf
/PERWMP+CMMI10 uf
/OUOBAA+CMMI10 uf
/PERWMO+CMSY7*1 uf
/PERWMO+CMSY7 uf
/RFJBAA+CMSY7 uf
/PERWMN+CMMI7*1 uf
/PERWMN+CMMI7 uf
/JNNAAA+CMMI7 uf
/PERWMM+CMR7*1 uf
/PERWMM+CMR7 uf
/JLBBAA+CMR7 uf
/PERWML+CMMI10*1 uf
/PERWML+CMMI10 uf
/ZFNBAA+CMMI10 uf
/PERWMK+CMR10*1 uf
/PERWMK+CMR10 uf
/GONAAA+CMR10 uf
/PERWMJ+CMR12*1 uf
/PERWMJ+CMR12 uf
/JHABAA+CMR12 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
